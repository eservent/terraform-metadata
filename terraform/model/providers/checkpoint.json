{
  ".schema_version": "2",
  ".sdk_type": "terraform-plugin-sdk-v1",
  "name": "checkpoint",
  "type": "provider",
  "version": "v2.1.0",
  "provider": {
    "api_key": {
      "Type": "String",
      "Optional": true,
      "Description": "Administrator API key.",
      "DefaultFunc": "ENV(CHECKPOINT_API_KEY)"
    },
    "cloud_mgmt_id": {
      "Type": "String",
      "Optional": true,
      "Description": "Smart-1 Cloud management UID",
      "DefaultFunc": "ENV(CHECKPOINT_CLOUD_MGMT_ID)"
    },
    "context": {
      "Type": "String",
      "Optional": true,
      "Description": "Check Point access context - gaia_api or web_api",
      "DefaultFunc": "ENV(CHECKPOINT_CONTEXT)"
    },
    "domain": {
      "Type": "String",
      "Optional": true,
      "Description": "login to specific domain. Domain can be identified by name or UID.",
      "DefaultFunc": "ENV(CHECKPOINT_DOMAIN)"
    },
    "password": {
      "Type": "String",
      "Optional": true,
      "Description": "Check Point Management admin password",
      "DefaultFunc": "ENV(CHECKPOINT_PASSWORD)"
    },
    "port": {
      "Type": "Int",
      "Optional": true,
      "Description": "Port used for connection to the API server",
      "DefaultFunc": "ENV(CHECKPOINT_PORT)"
    },
    "proxy_host": {
      "Type": "String",
      "Optional": true,
      "Description": "HTTP proxy server address (without \"http://\").",
      "DefaultFunc": "ENV(CHECKPOINT_PROXY_HOST)"
    },
    "proxy_port": {
      "Type": "Int",
      "Optional": true,
      "Description": "HTTP proxy port.",
      "DefaultFunc": "ENV(CHECKPOINT_PROXY_PORT)"
    },
    "server": {
      "Type": "String",
      "Optional": true,
      "Description": "Check Point Management server IP",
      "DefaultFunc": "ENV(CHECKPOINT_SERVER)"
    },
    "session_file_name": {
      "Type": "String",
      "Optional": true,
      "Description": "File name used to store the current session id.",
      "DefaultFunc": "ENV(CHECKPOINT_SESSION_FILE_NAME)"
    },
    "session_name": {
      "Type": "String",
      "Optional": true,
      "Description": "Session unique name.",
      "DefaultFunc": "ENV(CHECKPOINT_SESSION_NAME)"
    },
    "timeout": {
      "Type": "Int",
      "Optional": true,
      "Description": "Timeout in seconds for the Go SDK to complete a transaction",
      "DefaultFunc": "ENV(CHECKPOINT_TIMEOUT)"
    },
    "username": {
      "Type": "String",
      "Optional": true,
      "Description": "Check Point Management admin name",
      "DefaultFunc": "ENV(CHECKPOINT_USERNAME)"
    }
  },
  "resources": {
    "checkpoint_hostname": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "interface name"
      }
    },
    "checkpoint_management_access_layer": {
      "add_default_rule": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether to include a cleanup rule in the new layer.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "applications_and_url_filtering": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to enable Applications \u0026 URL Filtering blade on the layer.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "content_awareness": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to enable Content Awareness blade on the layer.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "detect_using_x_forward_for": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to use X-Forward-For HTTP header, which is added by the  proxy server to keep track of the original source IP."
      },
      "firewall": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to enable Firewall blade on the layer.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "implicit_cleanup_action": {
        "Type": "String",
        "Optional": true,
        "Description": "The default \"catch-all\" action for traffic that does not match any explicit or implied rules in the layer.",
        "Default": {
          "Type": "string",
          "Value": "drop"
        }
      },
      "mobile_access": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to enable Mobile Access blade on the layer.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "shared": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether this layer is shared.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_access_point_name": {
      "apn": {
        "Type": "String",
        "Optional": true,
        "Description": "APN name."
      },
      "block_traffic_other_end_user_domains": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Block MS to MS traffic between this and other APN end user domains.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "block_traffic_this_end_user_domain": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Block MS to MS traffic within this end user domain.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "end_user_domain": {
        "Type": "String",
        "Optional": true,
        "Description": "End user domain name or UID."
      },
      "enforce_end_user_domain": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable enforce end user domain."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_access_role": {
      "__timeouts__": [
        "create"
      ],
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "machines": {
        "Type": "List",
        "Optional": true,
        "Description": "Machines that can access the system.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "base_dn": {
              "Type": "String",
              "Optional": true,
              "Description": "When source is \"Active Directory\" use \"base-dn\" to refine the query in AD database."
            },
            "selection": {
              "Type": "Set",
              "Optional": true,
              "Description": "Name or UID of an object selected from source.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "source": {
              "Type": "String",
              "Optional": true,
              "Description": "Active Directory name or UID or Identity Tag."
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "networks": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID that can access the system.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "remote_access_clients": {
        "Type": "String",
        "Optional": true,
        "Description": "Remote access clients identified by name or UID.",
        "Default": {
          "Type": "string",
          "Value": "Any"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "users": {
        "Type": "List",
        "Optional": true,
        "Description": "Users that can access the system.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "base_dn": {
              "Type": "String",
              "Optional": true,
              "Description": "When source is \"Active Directory\" use \"base-dn\" to refine the query in AD database."
            },
            "selection": {
              "Type": "Set",
              "Optional": true,
              "Description": "Name or UID of an object selected from source.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "source": {
              "Type": "String",
              "Optional": true,
              "Description": "Active Directory name or UID or Identity Tag  or Internal User Groups or LDAP groups or Guests."
            }
          }
        }
      }
    },
    "checkpoint_management_access_rule": {
      "action": {
        "Type": "String",
        "Optional": true,
        "Description": "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User Auth\", \"Client Auth\", \"Apply Layer\".",
        "Default": {
          "Type": "string",
          "Value": "Drop"
        }
      },
      "action_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Action settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "content": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of processed file types that this rule applies on.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "content_direction": {
        "Type": "String",
        "Optional": true,
        "Description": "On which direction the file types processing is applied.",
        "Default": {
          "Type": "string",
          "Value": "any"
        }
      },
      "content_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for data.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "custom_fields": {
        "Type": "Map",
        "Optional": true,
        "Description": "Custom fields.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "destination": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "destination_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for destination.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable/Disable the rule.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "inline_layer": {
        "Type": "String",
        "Optional": true,
        "Description": "Inline Layer identified by the name or UID. Relevant only if \"Action\" was set to \"Apply Layer\"."
      },
      "install_on": {
        "Type": "Set",
        "Optional": true,
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that the rule belongs to identified by the name or UID."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Rule name."
      },
      "position": {
        "Type": "Map",
        "Required": true,
        "Description": "Position in the rulebase.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for service.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "source": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "source_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for source.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "time": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of time objects. For example: \"Weekend\", \"Off-Work\", \"Every-Day\".",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "track": {
        "Type": "Map",
        "Optional": true,
        "Description": "Track Settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "user_check": {
        "Type": "List",
        "Optional": true,
        "Description": "User check settings.",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "confirm": {
              "Type": "String",
              "Optional": true,
              "Description": "N/A"
            },
            "custom_frequency": {
              "Type": "List",
              "Optional": true,
              "Description": "N/A",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "every": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "N/A"
                  },
                  "unit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "N/A"
                  }
                }
              }
            },
            "frequency": {
              "Type": "String",
              "Optional": true,
              "Description": "N/A"
            },
            "interaction": {
              "Type": "String",
              "Optional": true,
              "Description": "N/A"
            }
          }
        }
      },
      "vpn": {
        "Type": "String",
        "Optional": true,
        "Description": "Communities or Directional.",
        "Default": {
          "Type": "string",
          "Value": "Any"
        }
      }
    },
    "checkpoint_management_access_section": {
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that the rule belongs to identified by the name or UID."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "position": {
        "Type": "Map",
        "Required": true,
        "Description": "Position in the rulebase.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_aci_data_center_server": {
      "certificate_fingerprint": {
        "Type": "String",
        "Optional": true,
        "Description": "Specify the SHA-1 or SHA-256 fingerprint of the Data Center Server's certificate."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings. By Setting this parameter to 'true' test connection failure will be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the Cisco APIC server."
      },
      "password_base64": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the Cisco APIC server encoded in Base64."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "urls": {
        "Type": "List",
        "Required": true,
        "Description": "Address of APIC cluster members.\nExample: http(s)://\u003chost1 ip/url\u003e.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "User ID of the Cisco APIC server.\nWhen using commonLoginLogic Domains use the following syntax:\napic:\u003cdomain\u003e\\\u003cusername\u003e."
      }
    },
    "checkpoint_management_add_api_key": {
      "admin_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Administrator name to generate API key for."
      },
      "admin_uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Administrator uid to generate API key for."
      },
      "api_key": {
        "Type": "String",
        "Description": "Represents the API Key to be used for commonLoginLogic.",
        "Computed": true
      }
    },
    "checkpoint_management_add_data_center_object": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors."
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "data_center_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the Data Center Server the object is in."
      },
      "data_center_uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique identifier of the Data Center Server the object is in."
      },
      "groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of group identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored."
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Override default name on data-center."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid_in_data_center": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique identifier of the object in the Data Center Server."
      },
      "uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI of the object in the Data Center Server."
      }
    },
    "checkpoint_management_add_repository_package": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the repository package."
      },
      "path": {
        "Type": "String",
        "Optional": true,
        "Description": "The path of the repository package.\u003cbr\u003e\u003cfont color=\"red\"\u003eRequired only for\u003c/font\u003e adding package from local."
      },
      "source": {
        "Type": "String",
        "Required": true,
        "Description": "The source of the repository package."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_add_threat_protections": {
      "package_format": {
        "Type": "String",
        "Optional": true,
        "Description": "Protections package format."
      },
      "package_path": {
        "Type": "String",
        "Optional": true,
        "Description": "Protections package path."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_add_updatable_object": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors."
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored."
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid_in_updatable_objects_repository": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique identifier of the updatable object in the Updatable Objects Repository."
      },
      "uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI of the updatable object in the Updatable Objects Repository."
      }
    },
    "checkpoint_management_address_range": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ipv4_address_first": {
        "Type": "String",
        "Optional": true,
        "Description": "First IPv4 address in the range."
      },
      "ipv4_address_last": {
        "Type": "String",
        "Optional": true,
        "Description": "Last IPv4 address in the range."
      },
      "ipv6_address_first": {
        "Type": "String",
        "Optional": true,
        "Description": "First IPv6 address in the range."
      },
      "ipv6_address_last": {
        "Type": "String",
        "Optional": true,
        "Description": "Last IPv6 address in the range."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "nat_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "NAT settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_application_site": {
      "additional_categories": {
        "Type": "Set",
        "Optional": true,
        "Description": "Used to configure or edit the additional categories of a custom application / site used in the Application and URL Filtering or Threat Prevention.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "application_signature": {
        "Type": "String",
        "Optional": true,
        "Description": "Application signature generated by \u003ca href=\"https://supportcenter.checkpoint.com/supportcenter/portal?eventSubmit_doGoviewsolutiondetails=\u0026solutionid=sk103051\"\u003eSignature Tool\u003c/a\u003e."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "A description for the application."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "primary_category": {
        "Type": "String",
        "Optional": true,
        "Description": "Each application is assigned to one primary category based on its most defining aspect."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "url_list": {
        "Type": "Set",
        "Optional": true,
        "Description": "URLs that determine this particular application.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "urls_defined_as_regular_expression": {
        "Type": "Bool",
        "Optional": true,
        "Description": "States whether the URL is defined as a Regular Expression or not.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      }
    },
    "checkpoint_management_application_site_category": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "N/A"
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_application_site_group": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "members": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of application and URL filtering objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_assign_global_assignment": {
      "dependent_domains": {
        "Type": "Set",
        "Optional": true,
        "Description": "N/A",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "global_domains": {
        "Type": "Set",
        "Optional": true,
        "Description": "N/A",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tasks": {
        "Type": "Set",
        "Description": "Command asynchronous task unique identifiers",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_aws_data_center_server": {
      "access_key_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Access key ID for the AWS account.\nRequired for authentication-method: user-authentication."
      },
      "authentication_method": {
        "Type": "String",
        "Required": true,
        "Description": "user-authentication\nUses the Access keys to authenticate.\nrole-authentication\nUses the AWS IAM role to authenticate.\nThis option requires the Security Management Server be deployed in AWS and has an IAM Role."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "enable_sts_assume_role": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enables the STS Assume Role option. After it is enabled, the sts-role field is mandatory, whereas the sts-external-id is optional.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings. By Setting this parameter to 'true' test connection failure will be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "region": {
        "Type": "String",
        "Required": true,
        "Description": "Select the AWS region."
      },
      "secret_access_key": {
        "Type": "String",
        "Optional": true,
        "Description": "Secret access key for the AWS account.\nRequired for authentication-method: user-authentication."
      },
      "sts_external_id": {
        "Type": "String",
        "Optional": true,
        "Description": "An optional STS External-Id to use when assuming the role."
      },
      "sts_role": {
        "Type": "String",
        "Optional": true,
        "Description": "The STS RoleARN of the role to be assumed.\nRequired for enable-sts-assume-role: true."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_azure_data_center_server": {
      "application_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The Application ID of the Service Principal, in UUID format.\nRequired for authentication-method: service-principal-authentication."
      },
      "application_key": {
        "Type": "String",
        "Optional": true,
        "Description": "The key created for the Service Principal.\nRequired for authentication-method: service-principal-authentication.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "authentication_method": {
        "Type": "String",
        "Required": true,
        "Description": "user-authentication\nUses the Azure AD User to authenticate.\nservice-principal-authentication\nUses the Service Principal to authenticate."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "directory_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The Directory ID of the Azure AD, in UUID format.\nRequired for authentication-method: service-principal-authentication."
      },
      "environment": {
        "Type": "String",
        "Optional": true,
        "Description": "Select the Azure Cloud Environment.",
        "Default": {
          "Type": "string",
          "Value": "AzureCloud"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings. By Setting this parameter to 'true' test connection failure will be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the Azure account.\nRequired for authentication-method: user-authentication."
      },
      "password_base64": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the Azure account encoded in Base64.\nRequired for authentication-method: user-authentication."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "username": {
        "Type": "String",
        "Optional": true,
        "Description": "An Azure Active Directory user Format \u003cusername\u003e@\u003cdomain\u003e.\nRequired for authentication-method: user-authentication."
      }
    },
    "checkpoint_management_backup_domain": {
      "domain": {
        "Type": "String",
        "Required": true,
        "Description": "Domain can be identified by name or UID."
      },
      "file_path": {
        "Type": "String",
        "Optional": true,
        "Description": "Path in which the backup domain data will be saved. \u003cbr\u003eShould be the directory path or the full file path with \".tgz\" \u003cbr\u003eIf no path was inserted the default will be: \"/var/log/\u0026lt;domain name\u0026gt;_\u0026lt;date\u0026gt;.tgz\"."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_check_network_feed": {
      "network_feed": {
        "Type": "Map",
        "Required": true,
        "Description": "network feed parameters.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "targets": {
        "Type": "Set",
        "Required": true,
        "Description": "On what targets to execute this command. Targets may be identified by their name, or object unique identifier.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_check_threat_ioc_feed": {
      "ioc_feed": {
        "Type": "Map",
        "Required": true,
        "Description": "threat ioc feed parameters.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "targets": {
        "Type": "Set",
        "Required": true,
        "Description": "On what targets to execute this command. Targets may be identified by their name, or object unique identifier.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_checkpoint_host": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "hardware": {
        "Type": "String",
        "Optional": true,
        "Description": "Hardware name.",
        "Default": {
          "Type": "string",
          "Value": "Open server"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "interfaces": {
        "Type": "List",
        "Optional": true,
        "Description": "Checkpoint host interfaces.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "color": {
              "Type": "String",
              "Optional": true,
              "Description": "Color of the object. Should be one of existing colors.",
              "Default": {
                "Type": "string",
                "Value": "black"
              }
            },
            "comments": {
              "Type": "String",
              "Optional": true,
              "Description": "Comments string."
            },
            "ignore_errors": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "ignore_warnings": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Apply changes ignoring warnings.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "mask_length4": {
              "Type": "Int",
              "Optional": true,
              "Description": "IPv4 network mask length."
            },
            "mask_length6": {
              "Type": "Int",
              "Optional": true,
              "Description": "IPv6 network mask length."
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Interface name."
            },
            "subnet4": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 network address."
            },
            "subnet6": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv6 network address."
            },
            "subnet_mask": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 network mask."
            }
          }
        }
      },
      "ipv4_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv4 address."
      },
      "ipv6_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv6 address."
      },
      "logs_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Logs settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "management_blades": {
        "Type": "Map",
        "Optional": true,
        "Description": "Management blades.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "nat_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "NAT settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "one_time_password": {
        "Type": "String",
        "Optional": true,
        "Description": "Secure internal connection one time password."
      },
      "os": {
        "Type": "String",
        "Optional": true,
        "Description": "Operating system name.",
        "Default": {
          "Type": "string",
          "Value": "Gaia"
        }
      },
      "save_logs_locally": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable save logs locally."
      },
      "send_alerts_to_server": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Server(s) to send alerts to identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_backup_server": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Backup server(s) to send logs to identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_server": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Server(s) to send logs to identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "sic_name": {
        "Type": "String",
        "Description": "Name of the Secure Internal Connection Trust.",
        "Computed": true
      },
      "sic_state": {
        "Type": "String",
        "Description": "State the Secure Internal Connection Trust.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "version": {
        "Type": "String",
        "Optional": true,
        "Description": "Checkpoint host platform version.",
        "Default": {
          "Type": "string",
          "Value": "R81"
        }
      }
    },
    "checkpoint_management_command_abort_get_interfaces": {
      "force_cleanup": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Forcefully abort the \"get-interfaces\" task."
      },
      "message": {
        "Type": "String",
        "Description": "Operation status",
        "Computed": true
      },
      "task_id": {
        "Type": "String",
        "Required": true,
        "Description": "get-interfaces task UID."
      }
    },
    "checkpoint_management_command_export_management": {
      "domain_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Domain name to be exported.\u003cbr\u003e\u003cfont color=\"red\"\u003eRequired only for\u003c/font\u003e exporting a Domain from the Multi-Domain Server or backing up Domain."
      },
      "file_path": {
        "Type": "String",
        "Optional": true,
        "Description": "Path in which the exported database file is saved.\u003cbr\u003e\u003cfont color=\"red\"\u003eRequired only\u003c/font\u003e when not using pre-export-verification-only flag."
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Ignoring the verification warnings. By Setting this parameter to 'true' export will not be blocked by warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "include_endpoint_configuration": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Include export of the Endpoint Security Management configuration files.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "include_endpoint_database": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Include export of the Endpoint Security Management database.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "include_logs": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Export logs without log indexes.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "include_logs_indexes": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Export logs with log indexes.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "is_domain_backup": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If true, the exported Domain will be suitable for import on the same Multi-Domain Server only."
      },
      "is_smc_to_mds": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If true, the exported Security Management Server will be suitable for import on the Multi-Domain Server only.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "pre_export_verification_only": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If true, only runs the pre-export verifications instead of the full export.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "task_id": {
        "Type": "String",
        "Description": "Asynchronous task unique identifier.",
        "Computed": true
      },
      "version": {
        "Type": "String",
        "Optional": true,
        "Description": "Target version."
      }
    },
    "checkpoint_management_command_export_smart_task": {
      "file_path": {
        "Type": "String",
        "Optional": true,
        "Description": "Path to the SmartTask file to be exported. \u003cbr\u003eShould be the full file path (example, \"/home/admin/exported-smart-task.txt)\".\u003cbr\u003eIf no path was inserted the default will be: \"/var/log/\u003ctask_name\u003e.txt\"."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of task to be exported."
      }
    },
    "checkpoint_management_command_gaia_api": {
      "command_name": {
        "Type": "String",
        "Required": true,
        "Description": "Target's api command."
      },
      "other_parameter": {
        "Type": "String",
        "Optional": true,
        "Description": "Other input parameters that gateway needs it."
      },
      "response_message": {
        "Type": "String",
        "Description": "Response's object from the target in json format.\n",
        "Computed": true
      },
      "target": {
        "Type": "String",
        "Required": true,
        "Description": "Gateway-object-name or gateway-ip-address or gateway-UID."
      }
    },
    "checkpoint_management_command_get_interfaces": {
      "group_interfaces_by_subnet": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Specify whether to group the cluster interfaces by a subnet. Otherwise, group the cluster interfaces by their names."
      },
      "target_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Target name."
      },
      "target_uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Target unique identifier."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      },
      "use_defined_by_routes": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Specify whether to configure the topology \"Defined by Routes\" where applicable. Otherwise, configure the topology to \"This Network\" as default for internal interfaces."
      },
      "with_topology": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Specify whether to fetch the interfaces with their topology. Otherwise, the Management Server fetches the interfaces without their topology."
      }
    },
    "checkpoint_management_command_import_management": {
      "domain_ip_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv4 address for the imported Domain. Required only for importing the Security Management Server into the Multi-Domain Server."
      },
      "domain_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Domain name to be imported. Must be unique in the Multi-Domain Server. Required only for importing the Security Management Server into the Multi-Domain Server."
      },
      "domain_server_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Multi-Domain Server name for the imported Domain. Required only for importing the Security Management Server into the Multi-Domain Server."
      },
      "file_path": {
        "Type": "String",
        "Required": true,
        "Description": "Path to the exported database file to be imported."
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Ignoring the verification warnings. By Setting this parameter to 'true' import will not be blocked by warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "include_endpoint_configuration": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Include import of the Endpoint Security Management configuration files.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "include_endpoint_database": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Include import of the Endpoint Security Management database.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "include_logs": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Import logs without log indexes.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "include_logs_indexes": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Import logs with log indexes.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "login_required": {
        "Type": "String",
        "Description": "If set to \"True\", session is expired and login is required.",
        "Computed": true
      },
      "pre_import_verification_only": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If true, only runs the pre-import verifications instead of the full import.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "task_id": {
        "Type": "String",
        "Description": "Asynchronous task unique identifier.",
        "Computed": true
      },
      "verify_domain_restore": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If true, verify that the restore operation is valid for this input file and this environment. \u003cbr\u003eNote: Restore operation will not be executed.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      }
    },
    "checkpoint_management_command_import_smart_task": {
      "file_path": {
        "Type": "String",
        "Required": true,
        "Description": "Path to the SmartTask file to be imported. \u003cbr\u003eShould be the full file path (example, \"/home/admin/exported-smart-task.txt\")."
      },
      "message": {
        "Type": "String",
        "Description": "Operation status.",
        "Computed": true
      }
    },
    "checkpoint_management_command_lock_object": {
      "layer": {
        "Type": "String",
        "Optional": true,
        "Description": "Object layer, need to specify the layer if the object is rule/section and uid is not supplied."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "Object type."
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_command_login_to_domain": {
      "api_server_version": {
        "Type": "String",
        "Description": "API Server version.",
        "Computed": true
      },
      "continue_last_session": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When 'continue-last-session' is set to 'True', the new session would continue where the last session was stopped. This option is available when the administrator has only one session that can be continued. If there is more than one session, see 'switch-session' API.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "disk_space_message": {
        "Type": "String",
        "Description": "Information about the available disk space on the management server.",
        "Computed": true
      },
      "domain": {
        "Type": "String",
        "Required": true,
        "Description": "Domain identified by the name or UID."
      },
      "last_login_was_at": {
        "Type": "Map",
        "Description": "Timestamp when administrator last accessed the management server.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "login_message": {
        "Type": "Map",
        "Description": "Login message.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "read_only": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Login with Read Only permissions. This parameter is not considered in case continue-last-session is true.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "session_timeout": {
        "Type": "Int",
        "Description": "Session expiration timeout in seconds.",
        "Computed": true
      },
      "sid": {
        "Type": "String",
        "Description": "Session unique identifier. Enter this session unique identifier in the 'X-chkp-sid' header of each request.",
        "Computed": true
      },
      "standby": {
        "Type": "Bool",
        "Description": "True if this management server is in the standby mode.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Description": "Session object unique identifier. This identifier may be used in the discard API to discard changes that were made in this session, when administrator is working from another session, or in the 'switch-session' API.",
        "Computed": true
      },
      "url": {
        "Type": "String",
        "Description": "URL that was used to reach the API server.",
        "Computed": true
      }
    },
    "checkpoint_management_command_set_global_properties": {
      "advanced_conf": {
        "Type": "Map",
        "Optional": true,
        "Description": "Configure advanced global attributes. It's highly recommended to consult with Check Point's Technical Support before modifying these values.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "allow_remote_registration_of_opsec_products": {
        "Type": "Bool",
        "Optional": true,
        "Description": "After installing an OPSEC application, the remote administration (RA) utility enables an OPSEC product to finish registering itself without having to access the SmartConsole. If set to true, any host including the application host can run the utility. Otherwise,  the RA utility can only be run from the Security Management host."
      },
      "authentication": {
        "Type": "Map",
        "Optional": true,
        "Description": "Define Authentication properties that are common to all users and to the various ways that the Check Point Security Gateway asks for passwords (User, Client and Session Authentication).",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "carrier_security": {
        "Type": "Map",
        "Optional": true,
        "Description": "Specify system-wide properties. Select GTP intra tunnel inspection options, including anti-spoofing; tracking and logging options, and integrity tests.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "connect_control": {
        "Type": "Map",
        "Optional": true,
        "Description": "Configure settings that relate to ConnectControl server load balancing.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "data_access_control": {
        "Type": "Map",
        "Optional": true,
        "Description": "Configure automatic downloads from Check Point and anonymously share product data. Options selected here apply to all Security Gateways, Clusters and VSX devices managed by this management server.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "domains_to_process": {
        "Type": "Set",
        "Optional": true,
        "Description": "Indicates which domains to process the commands on. It cannot be used with the details-level full, must be run from the System Domain only and with ignore-warnings true. Valid values are: CURRENT_DOMAIN, ALL_DOMAINS_ON_THIS_SERVER.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "firewall": {
        "Type": "Map",
        "Optional": true,
        "Description": "Add implied rules to or remove them from the Firewall Rule Base. Determine the position of the implied rules in the Rule Base, and whether or not to log them.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hit_count": {
        "Type": "Map",
        "Optional": true,
        "Description": "Enable the Hit Count feature that tracks the number of connections that each rule matches.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored."
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings."
      },
      "log_and_alert": {
        "Type": "Map",
        "Optional": true,
        "Description": "Define system-wide logging and alerting parameters.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "nat": {
        "Type": "Map",
        "Optional": true,
        "Description": "Configure settings that apply to all NAT connections.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "non_unique_ip_address_ranges": {
        "Type": "List",
        "Optional": true,
        "Description": "Specify Non Unique IP Address Ranges.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address_type": {
              "Type": "String",
              "Optional": true,
              "Description": "The type of the IP Address."
            },
            "first_ipv4_address": {
              "Type": "String",
              "Optional": true,
              "Description": "The first IPV4 Address in the range."
            },
            "first_ipv6_address": {
              "Type": "String",
              "Optional": true,
              "Description": "The first IPV6 Address in the range."
            },
            "last_ipv4_address": {
              "Type": "String",
              "Optional": true,
              "Description": "The last IPV4 Address in the range."
            },
            "last_ipv6_address": {
              "Type": "String",
              "Optional": true,
              "Description": "The last IPV6 Address in the range."
            }
          }
        }
      },
      "num_spoofing_errs_that_trigger_brute_force": {
        "Type": "Int",
        "Optional": true,
        "Description": "Indicates how many incorrectly signed packets will be tolerated before assuming that there is an attack on the packet tagging and revoking the client's key."
      },
      "proxy": {
        "Type": "Map",
        "Optional": true,
        "Description": "Select whether a proxy server is used when servers, gateways, or clients need to access the internet for certain Check Point features and set the default proxy server that will be used.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "qos": {
        "Type": "Map",
        "Optional": true,
        "Description": "Define the general parameters of Quality of Service (QoS) and apply them to QoS rules.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "remote_access": {
        "Type": "Map",
        "Optional": true,
        "Description": "Configure Remote Access properties.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "stateful_inspection": {
        "Type": "Map",
        "Optional": true,
        "Description": "Adjust Stateful Inspection parameters.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "user_accounts": {
        "Type": "Map",
        "Optional": true,
        "Description": "Set the expiration for a user account and configure \"about to expire\" warnings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "user_authority": {
        "Type": "Map",
        "Optional": true,
        "Description": "Decide whether to display and access the WebAccess rule base. This policy defines which users (that is, which Windows Domains) have access to the internal sites of the organization.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "user_check": {
        "Type": "Map",
        "Optional": true,
        "Description": "Set a language for the UserCheck message if the language setting in the user's browser cannot be determined.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "user_directory": {
        "Type": "Map",
        "Optional": true,
        "Description": "User can enable LDAP User Directory as well as specify global parameters for LDAP. If LDAP User Directory is enabled, this means that users are managed on an external LDAP server and not on the internal Check Point Security Gateway users databases.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "vpn": {
        "Type": "Map",
        "Optional": true,
        "Description": "Configure settings relevant to VPN.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_command_set_policy_settings": {
      "last_in_cell": {
        "Type": "String",
        "Optional": true,
        "Description": "Added object after removing the last object in cell."
      },
      "none_object_behavior": {
        "Type": "String",
        "Optional": true,
        "Description": "'None' object behavior. Rules with object 'None' will never be matched."
      },
      "security_access_defaults": {
        "Type": "Map",
        "Optional": true,
        "Description": "Access Policy default values.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_command_set_threat_advanced_settings": {
      "feed_retrieving_interval": {
        "Type": "String",
        "Optional": true,
        "Description": "Feed retrieving intervals of External Feed, in the form of HH:MM."
      },
      "httpi_non_standard_ports": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable HTTP Inspection on non standard ports for Threat Prevention blades."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "internal_error_fail_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "In case of internal system error, allow or block all connections."
      },
      "log_unification_timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "Session unification timeout for logs (minutes)."
      },
      "resource_classification": {
        "Type": "List",
        "Optional": true,
        "Description": "Allow (Background) or Block (Hold) requests until categorization is complete.",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_settings": {
              "Type": "List",
              "Optional": true,
              "Description": "On Custom mode, custom resources classification per service.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "anti_bot": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Custom Settings for Anti Bot Blade."
                  },
                  "anti_virus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Custom Settings for Anti Virus Blade."
                  },
                  "zero_phishing": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Custom Settings for Zero Phishing Blade."
                  }
                }
              }
            },
            "mode": {
              "Type": "String",
              "Optional": true,
              "Description": "Set all services to the same mode or choose a custom mode."
            },
            "web_service_fail_mode": {
              "Type": "String",
              "Optional": true,
              "Description": "Block connections when the web service is unavailable."
            }
          }
        }
      }
    },
    "checkpoint_management_command_unlock_object": {
      "layer": {
        "Type": "String",
        "Optional": true,
        "Description": "Object layer, need to specify the layer if the object is rule/section and uid is not supplied."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "Object type."
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier. When using uid, there is no need to use name/type parameters"
      }
    },
    "checkpoint_management_connect_cloud_services": {
      "auth_token": {
        "Type": "String",
        "Required": true,
        "Description": "Copy the authentication token from the Smart-1 cloud service hosted in the Infinity Portal."
      },
      "connected_at": {
        "Type": "Map",
        "Description": "The time of the connection between the Management Server and the Infinity Portal.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "management_url": {
        "Type": "String",
        "Description": "The Management Server's public URL.",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "Status of the connection to the Infinity Portal.",
        "Computed": true
      }
    },
    "checkpoint_management_data_center_query": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "data_centers": {
        "Type": "List",
        "Optional": true,
        "Description": "Collection of Data Center servers identified by the name or UID. Use \"All\" to select all data centers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "query_rules": {
        "Type": "List",
        "Optional": true,
        "Description": "Data Center Query Rules.\u003cbr\u003eThere is an 'AND' operation between multiple Query Rules.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "key": {
              "Type": "String",
              "Optional": true,
              "Description": "Defines in which Data Center property to query.\u003cbr\u003eFor key-type \"predefined\", use these keys: type-in-data-center, name-in-data-center, and ip-address.\u003cbr\u003eFor key-type \"tag\", use the Data Center tag key to query.\u003cbr\u003eKeys are case-insensitive."
            },
            "key_type": {
              "Type": "String",
              "Optional": true,
              "Description": "The type of the \"key\" parameter.\u003cbr\u003eUse \"predefined\" for these keys: type-in-data-center, name-in-data-center, and ip-address.\u003cbr\u003eUse \"tag\" to query the Data Center tag�s property."
            },
            "values": {
              "Type": "List",
              "Optional": true,
              "Description": "The value(s) of the Data Center property to match the Query Rule.\u003cbr\u003eValues are case-insensitive.\u003cbr\u003eThere is an 'OR' operation between multiple values.\u003cbr\u003eFor key-type \"predefined\" and key 'ip-address', the values must be an IPv4 or IPv6 address.\u003cbr\u003eFor key-type \"tag\", the values must be the Data Center tag values.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_delete_api_key": {
      "admin_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Administrator name to generate API key for."
      },
      "admin_uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Administrator uid to generate API key for."
      },
      "api_key": {
        "Type": "String",
        "Optional": true,
        "Description": "API key to be deleted."
      }
    },
    "checkpoint_management_delete_data_center_object": {
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored."
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      }
    },
    "checkpoint_management_delete_repository_package": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the software package."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_delete_threat_protections": {
      "package_format": {
        "Type": "String",
        "Optional": true,
        "Description": "Protections package format."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_delete_updatable_object": {
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored."
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      }
    },
    "checkpoint_management_discard": {},
    "checkpoint_management_disconnect": {
      "discard": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Discard all changes committed during the session."
      }
    },
    "checkpoint_management_disconnect_cloud_services": {
      "force": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Disconnect the Management Server from Check Point Infinity Portal, and reset the connection locally, regardless of the result in the Infinity Portal. This flag can be used if the disconnect-cloud-services command failed. Since with this flag this command affects only the local configuration, make sure to disconnect the Management Server in the Infinity Portal as well."
      }
    },
    "checkpoint_management_dns_domain": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "is_sub_domain": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to match sub-domains in addition to the domain itself."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_domain": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "servers": {
        "Type": "List",
        "Required": true,
        "Description": "Domain servers.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "active": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Activate domain server. Only one domain server is allowed to be active."
            },
            "ipv4_address": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 address."
            },
            "ipv6_address": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv6 address."
            },
            "multi_domain_server": {
              "Type": "String",
              "Required": true,
              "Description": "Multi Domain server name or UID."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Object name. Must be unique in the domain."
            },
            "skip_start_domain_server": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Set this value to be true to prevent starting the new created domain."
            },
            "type": {
              "Type": "String",
              "Optional": true,
              "Description": "Domain server type."
            }
          }
        }
      }
    },
    "checkpoint_management_domain_permissions_profile": {
      "access_control": {
        "Type": "List",
        "Optional": true,
        "Description": "Access Control permissions.\u003cbr\u003eOnly a 'Customized' permission-type profile can edit these permissions.",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_control_objects_and_settings": {
              "Type": "String",
              "Optional": true,
              "Description": "Allow editing of the following objet types: VPN Community, Access Role, Custom application group,Custom application, Custom category, Limit, Application - Match Settings, Application Category - Match Settings,Override Categorization, Application and URL filtering blade - Advanced Settings, Content Awareness blade - Advanced Settings."
            },
            "app_control_and_url_filtering_update": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Install Application and URL Filtering updates."
            },
            "dlp_policy": {
              "Type": "String",
              "Optional": true,
              "Description": "Configure DLP rules and Policies."
            },
            "geo_control_policy": {
              "Type": "String",
              "Optional": true,
              "Description": "Work with Access Control rules that control traffic to and from specified countries."
            },
            "install_policy": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Install Access Control Policies."
            },
            "nat_policy": {
              "Type": "String",
              "Optional": true,
              "Description": "Work with NAT in Access Control rules."
            },
            "policy_layers": {
              "Type": "List",
              "Optional": true,
              "Description": "Layer editing permissions.\u003cbr\u003eAvailable only if show-policy is set to true.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "app_control_and_url_filtering": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Use Application and URL Filtering in Access Control rules.\u003cbr\u003eAvailable only if edit-layers is set to \"By Software Blades\"."
                  },
                  "content_awareness": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Use specified data types in Access Control rules.\u003cbr\u003eAvailable only if edit-layers is set to \"By Software Blades\"."
                  },
                  "edit_layers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "\"By Software Blades\" - Edit Access Control layers that contain the blades enabled in the Permissions Profile.\u003cbr\u003e\"By Selected Profile In A Layer Editor\" - Administrators can only edit the layer if the Access Control layer editor gives editing permission to their profiles."
                  },
                  "firewall": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Work with Access Control and other Software Blades that do not have their own Policies.\u003cbr\u003eAvailable only if edit-layers is set to \"By Software Blades\"."
                  },
                  "mobile_access": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Work with Mobile Access rules.\u003cbr\u003eAvailable only if edit-layers is set to \"By Software Blades\"."
                  }
                }
              }
            },
            "qos_policy": {
              "Type": "String",
              "Optional": true,
              "Description": "Work with QoS Policies and rules."
            },
            "show_policy": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Select to let administrators work with Access Control rules and NAT rules. If not selected, administrators cannot see these rules."
            }
          }
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "edit_common_objects": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Define and manage objects in the Check Point database: Network Objects, Services, Custom Application Site, VPN Community, Users, Servers, Resources, Time, UserCheck, and Limit.\u003cbr\u003eOnly a 'Customized' permission-type profile can edit this permission."
      },
      "endpoint": {
        "Type": "Map",
        "Optional": true,
        "Description": "Endpoint permissions. Not supported for Multi-Domain Servers.\u003cbr\u003eOnly a 'Customized' permission-type profile can edit these permissions.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "events_and_reports": {
        "Type": "Map",
        "Optional": true,
        "Description": "Events and Reports permissions.\u003cbr\u003eOnly a 'Customized' permission-type profile can edit these permissions.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "gateways": {
        "Type": "Map",
        "Optional": true,
        "Description": "Gateways permissions. \u003cbr\u003eOnly a 'Customized' permission-type profile can edit these permissions.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "management": {
        "Type": "Map",
        "Optional": true,
        "Description": "Management permissions.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "monitoring_and_logging": {
        "Type": "Map",
        "Optional": true,
        "Description": "Monitoring and Logging permissions.\u003cbr\u003e'Customized' permission-type profile can edit all these permissions. \"Read Write All\" permission-type can edit only dlp-logs-including-confidential-fields and manage-dlp-messages permissions.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "others": {
        "Type": "Map",
        "Optional": true,
        "Description": "Additional permissions.\u003cbr\u003eOnly a 'Customized' permission-type profile can edit these permissions.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "permission_type": {
        "Type": "String",
        "Optional": true,
        "Description": "The type of the Permissions Profile.",
        "Default": {
          "Type": "string",
          "Value": "customized"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "threat_prevention": {
        "Type": "Map",
        "Optional": true,
        "Description": "Threat Prevention permissions.\u003cbr\u003eOnly a 'Customized' permission-type profile can edit these permissions.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_dynamic_object": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_exception_group": {
      "applied_profile": {
        "Type": "String",
        "Optional": true,
        "Description": "The threat profile to apply this group to in the case of apply-on threat-rules-with-specific-profile."
      },
      "applied_threat_rules": {
        "Type": "List",
        "Optional": true,
        "Description": "The threat rules to apply this group on in the case of apply-on manually-select-threat-rules.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "layer": {
              "Type": "String",
              "Optional": true,
              "Description": "The layer of the threat rule to which the group is to be attached."
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of the threat rule to which the group is to be attached."
            },
            "position": {
              "Type": "Map",
              "Required": true,
              "Description": "Position in the rulebase.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "apply_on": {
        "Type": "String",
        "Optional": true,
        "Description": "An exception group can be set to apply on all threat rules, all threat rules which have a specific profile, or those rules manually chosen by the user."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_export": {
      "exclude_classes": {
        "Type": "Set",
        "Optional": true,
        "Description": "N/A",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "exclude_topics": {
        "Type": "Set",
        "Optional": true,
        "Description": "N/A",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "export_files_by_class": {
        "Type": "Bool",
        "Optional": true,
        "Description": "N/A"
      },
      "include_classes": {
        "Type": "Set",
        "Optional": true,
        "Description": "N/A",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "include_topics": {
        "Type": "Set",
        "Optional": true,
        "Description": "N/A",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "query_limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "N/A"
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_gcp_data_center_server": {
      "authentication_method": {
        "Type": "String",
        "Required": true,
        "Description": "key-authentication\nUses the Service Account private key file to authenticate.\nvm-instance-authentication\nUses the Service Account VM Instance to authenticate.\nThis option requires the Security Management Server deployed in a GCP, and runs as a Service Account with the required permissions."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings. By Setting this parameter to 'true' test connection failure will be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "private_key": {
        "Type": "String",
        "Optional": true,
        "Description": "A Service Account Key JSON file, encoded in base64.\nRequired for authentication-method: key-authentication."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_generic_data_center_server": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "custom_header": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When set to false, The admin is not using Key and Value for a Custom Header in order to connect to the feed server.\n\nWhen set to true, The admin is using Key and Value for a Custom Header in order to connect to the feed server.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "custom_key": {
        "Type": "String",
        "Optional": true,
        "Description": "Key for the Custom Header, relevant and required only when custom_header set to true."
      },
      "custom_value": {
        "Type": "String",
        "Optional": true,
        "Description": "Value for the Custom Header, relevant and required only when custom_header set to true."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings. By Setting this parameter to 'true' test connection failure will be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "interval": {
        "Type": "String",
        "Required": true,
        "Description": "Update interval of the feed in seconds."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "url": {
        "Type": "String",
        "Required": true,
        "Description": "URL of the JSON feed (e.g. https://example.com/file.json)."
      }
    },
    "checkpoint_management_get_attachment": {
      "attachment_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Attachment identifier from a log record."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Log uid from a log record."
      }
    },
    "checkpoint_management_get_platform": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Gateway, cluster or Check Point host name."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_group": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "members": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_group_with_exclusion": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "except": {
        "Type": "String",
        "Optional": true,
        "Description": "Name or UID of an object which the group excludes."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "include": {
        "Type": "String",
        "Optional": true,
        "Description": "Name or UID of an object which the group includes."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_gsn_handover_group": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "enforce_gtp": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable enforce GTP signal packet rate limit from this group."
      },
      "gtp_rate": {
        "Type": "Int",
        "Optional": true,
        "Description": "Limit of the GTP rate in PDU/sec."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "members": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of GSN handover group members identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_ha_full_sync": {
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Peer name (Multi Domain Server, Domain Server or Security Management Server)."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Peer unique identifier (Multi Domain Server, Domain Server or Security Management Server)."
      }
    },
    "checkpoint_management_host": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "host_servers": {
        "Type": "List",
        "Optional": true,
        "Description": "Servers Configuration.",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dns_server": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Gets True if this server is a DNS Server.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "mail_server": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Gets True if this server is a Mail Server.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "web_server": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Gets True if this server is a Web Server.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "web_server_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Web Server configuration.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "additional_ports": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "Server additional ports.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "application_engines": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "Application engines of this web server.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "listen_standard_port": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether server listens to standard port.",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "operating_system": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Operating System.",
                    "Default": {
                      "Type": "string",
                      "Value": "other"
                    }
                  },
                  "protected_by": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Network object which protects this server identified by the name or UID.",
                    "Default": {
                      "Type": "string",
                      "Value": "97aeb368-9aea-11d5-bd16-0090272ccb30"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "interfaces": {
        "Type": "List",
        "Optional": true,
        "Description": "Host interfaces.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "color": {
              "Type": "String",
              "Optional": true,
              "Description": "Color of the object. Should be one of existing colors.",
              "Default": {
                "Type": "string",
                "Value": "black"
              }
            },
            "comments": {
              "Type": "String",
              "Optional": true,
              "Description": "Comments string."
            },
            "ignore_errors": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "ignore_warnings": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Apply changes ignoring warnings.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "mask_length4": {
              "Type": "Int",
              "Optional": true,
              "Description": "IPv4 network mask length."
            },
            "mask_length6": {
              "Type": "Int",
              "Optional": true,
              "Description": "IPv6 network mask length."
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Object name. Should be unique in the domain."
            },
            "subnet4": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 network address."
            },
            "subnet6": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv6 network address."
            }
          }
        }
      },
      "ipv4_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv4 address."
      },
      "ipv6_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv6 address."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "nat_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "NAT settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_https_layer": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "shared": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Define the Layer as Shared (TRUE/FALSE)."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_https_rule": {
      "action": {
        "Type": "String",
        "Optional": true,
        "Description": "Rule inspect level. \"Bypass\" or \"Inspect\"."
      },
      "blade": {
        "Type": "Set",
        "Optional": true,
        "Description": "Blades for HTTPS Inspection. Identified by Name or UID to enable the inspection for. \"Anti Bot\",\"Anti Virus\",\"Application Control\",\"Data Awareness\",\"DLP\",\"IPS\",\"Threat Emulation\",\"Url Filtering\".",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "certificate": {
        "Type": "String",
        "Optional": true,
        "Description": "Internal Server Certificate identified by Name or UID, otherwise, \"Outbound Certificate\" is a default value."
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "destination": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by Name or UID that represents connection destination.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "destination_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "TRUE if \"negate\" value is set for Destination."
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable/Disable the rule."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "install_on": {
        "Type": "Set",
        "Optional": true,
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that holds the Object. Identified by the Name or UID."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "HTTPS rule name."
      },
      "position": {
        "Type": "Map",
        "Required": true,
        "Description": "Position in the rulebase.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by Name or UID that represents connection service.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "TRUE if \"negate\" value is set for Service."
      },
      "site_category": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Site Categories objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "site_category_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "TRUE if \"negate\" value is set for Site Category."
      },
      "source": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by Name or UID that represents connection source.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "source_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "TRUE if \"negate\" value is set for Source."
      },
      "track": {
        "Type": "String",
        "Optional": true,
        "Description": "\"None\",\"Log\",\"Alert\",\"Mail\",\"SNMP trap\",\"Mail\",\"User Alert\", \"User Alert 2\", \"User Alert 3\"."
      }
    },
    "checkpoint_management_https_section": {
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that holds the Object. Identified by the Name or UID."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "position": {
        "Type": "Map",
        "Required": true,
        "Description": "Position in the rulebase.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_identity_tag": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "external_identifier": {
        "Type": "String",
        "Optional": true,
        "Description": "External identifier. For example: Cisco ISE security group tag."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_idp_administrator_group": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "group_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Group ID or Name should be set base on the source attribute of 'groups' in the Saml Assertion."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "multi_domain_profile": {
        "Type": "String",
        "Optional": true,
        "Description": "Administrator multi-domain profile."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "permissions_profile": {
        "Type": "List",
        "Optional": true,
        "Description": "Administrator permissions profile. Permissions profile should not be provided when multi-domain-profile is set to \"Multi-Domain Super User\" or \"Domain Super User\".",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "domain": {
              "Type": "String",
              "Optional": true,
              "Description": "N/A"
            },
            "profile": {
              "Type": "String",
              "Optional": true,
              "Description": "Permission profile."
            }
          }
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_install_database": {
      "targets": {
        "Type": "Set",
        "Required": true,
        "Description": "Check Point host(s) with one or more Management Software Blades enabled. The targets can be identified by their name or unique identifier.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tasks": {
        "Type": "Set",
        "Description": "Command asynchronous task unique identifiers",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_install_lsm_policy": {
      "targets": {
        "Type": "Set",
        "Required": true,
        "Description": "On what targets to execute this command. Targets may be identified by their name, or object unique identifier.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_install_lsm_settings": {
      "targets": {
        "Type": "Set",
        "Required": true,
        "Description": "On what targets to execute this command. Targets may be identified by their name, or object unique identifier.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_install_policy": {
      "access": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Set to be true in order to install the Access Control policy. By default, the value is true if Access Control policy is enabled on the input policy package, otherwise false."
      },
      "desktop_security": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Set to be true in order to install the Desktop Security policy. By default, the value is true if desktop security policy is enabled on the input policy package, otherwise false."
      },
      "install_on_all_cluster_members_or_fail": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Relevant for the gateway clusters. If true, the policy is installed on all the cluster members. If the installation on a cluster member fails, don't install on that cluster.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "policy_package": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the Policy Package to be installed."
      },
      "prepare_only": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If true, prepares the policy for the installation, but doesn't install it on an installation target.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "qos": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Set to be true in order to install the QoS policy. By default, the value is true if Quality-of-Service policy is enabled on the input policy package, otherwise false."
      },
      "revision": {
        "Type": "String",
        "Optional": true,
        "Description": "The UID of the revision of the policy to install."
      },
      "targets": {
        "Type": "Set",
        "Required": true,
        "Description": "On what targets to execute this command. Targets may be identified by their name, or object unique identifier.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      },
      "threat_prevention": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Set to be true in order to install the Threat Prevention policy. By default, the value is true if Threat Prevention policy is enabled on the input policy package, otherwise false."
      },
      "triggers": {
        "Type": "Set",
        "Optional": true,
        "Description": "Triggers a install-policy if there are any changes to objects in this list.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_install_software_package": {
      "cluster_installation_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Installation settings for cluster.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "concurrency_limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "The number of targets, on which the same package is installed at the same time."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the software package."
      },
      "targets": {
        "Type": "Set",
        "Required": true,
        "Description": "On what targets to execute this command. Targets may be identified by their name, or object unique identifier.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_interoperable_device": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "domains_to_process": {
        "Type": "Set",
        "Optional": true,
        "Description": "Indicates which domains to process the commands on. It cannot be used with the details-level full, must be run from the System Domain only and with ignore-warnings true. Valid values are: CURRENT_DOMAIN, ALL_DOMAINS_ON_THIS_SERVER.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "groups": {
        "Type": "List",
        "Description": "Level of details in the output corresponds to the number of details for search. This table shows the level of details in the Standard level.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "color": {
              "Type": "String",
              "Description": "Color of the object. Should be one of existing colors.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Object name. Must be unique in the domain.",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Object type.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "Object unique identifier.",
              "Computed": true
            }
          }
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "interfaces": {
        "Type": "List",
        "Optional": true,
        "Description": "Network interfaces.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "color": {
              "Type": "String",
              "Optional": true,
              "Description": "Color of the object. Should be one of existing colors.",
              "Default": {
                "Type": "string",
                "Value": "black"
              }
            },
            "comments": {
              "Type": "String",
              "Optional": true,
              "Description": "Comments string."
            },
            "domains_to_process": {
              "Type": "Set",
              "Optional": true,
              "Description": "Indicates which domains to process the commands on. It cannot be used with the details-level full, must be run from the System Domain only and with ignore-warnings true. Valid values are: CURRENT_DOMAIN, ALL_DOMAINS_ON_THIS_SERVER.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "ignore_errors": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "ignore_warnings": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Apply changes ignoring warnings.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "ipv4_address": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 address."
            },
            "ipv4_mask_length": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 network mask length."
            },
            "ipv4_network_mask": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 network address."
            },
            "ipv6_address": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv6 address."
            },
            "ipv6_mask_length": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv6 network mask length."
            },
            "ipv6_network_mask": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv6 network address."
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Object name. Must be unique in the domain."
            },
            "tags": {
              "Type": "Set",
              "Optional": true,
              "Description": "Collection of tag identifiers.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "topology": {
              "Type": "String",
              "Optional": true,
              "Description": "Topology configuration.",
              "Default": {
                "Type": "string",
                "Value": "internal"
              }
            },
            "topology_settings": {
              "Type": "List",
              "Optional": true,
              "Description": "Internal topology settings.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "interface_leads_to_dmz": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether this interface leads to demilitarized zone (perimeter network)."
                  },
                  "ip_address_behind_this_interface": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Network settings behind this interface."
                  },
                  "specific_network": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Network behind this interface."
                  }
                }
              }
            }
          }
        }
      },
      "ipv4_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv4 address of the Interoperable Device."
      },
      "ipv6_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv6 address of the Interoperable Device."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "vpn_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "VPN domain properties for the Interoperable Device.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_ise_data_center_server": {
      "certificate_fingerprint": {
        "Type": "String",
        "Optional": true,
        "Description": "Specify the SHA-1 or SHA-256 fingerprint of the Data Center Server's certificate."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "hostnames": {
        "Type": "List",
        "Required": true,
        "Description": "Address of ISE administrator hostnames.\nExample: http(s)://\u003chost1 ip/url\u003e.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings. By Setting this parameter to 'true' test connection failure will be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the ISE administrator server."
      },
      "password_base64": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the Cisco ISE administrator encoded in Base64."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "User ID of the ISE administrator server.\nWhen using commonLoginLogic Domains use the following syntax:\napic:\u003cdomain\u003e\\\u003cusername\u003e."
      }
    },
    "checkpoint_management_keepalive": {},
    "checkpoint_management_kubernetes_data_center_server": {
      "ca_certificate": {
        "Type": "String",
        "Optional": true,
        "Description": "The Kubernetes public certificate key encoded in base64."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "hostname": {
        "Type": "String",
        "Required": true,
        "Description": "IP address or hostname of the Kubernetes server."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings. By Setting this parameter to 'true' test connection failure will be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "token_file": {
        "Type": "String",
        "Required": true,
        "Description": "Kubernetes access token encoded in base64."
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      }
    },
    "checkpoint_management_login": {
      "continue_last_session": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When 'continue-last-session' is set to 'True', the new session would continue where the last session was stopped. This option is available when the administrator has only one session that can be continued. If there is more than one session, see 'switch-session' API."
      },
      "domain": {
        "Type": "String",
        "Optional": true,
        "Description": "Use domain to login to specific domain. Domain can be identified by name or UID."
      },
      "enter_last_published_session": {
        "Type": "Bool",
        "Optional": true,
        "Description": "commonLoginLogic to the last published session. Such login is done with the Read Only permissions."
      },
      "password": {
        "Type": "String",
        "Required": true,
        "Description": "Administrator password."
      },
      "read_only": {
        "Type": "Bool",
        "Optional": true,
        "Description": "commonLoginLogic with Read Only permissions. This parameter is not considered in case continue-last-session is true."
      },
      "session_comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Session comments."
      },
      "session_description": {
        "Type": "String",
        "Optional": true,
        "Description": "Session description."
      },
      "session_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Session unique name."
      },
      "session_timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "Session expiration timeout in seconds. Default 600 seconds."
      },
      "user": {
        "Type": "String",
        "Required": true,
        "Description": "Administrator user name."
      }
    },
    "checkpoint_management_logout": {
      "triggers": {
        "Type": "Set",
        "Optional": true,
        "Description": "Triggers a logout if there are any changes to objects in this list.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_lsm_run_script": {
      "script": {
        "Type": "String",
        "Optional": true,
        "Description": "The entire content of the script."
      },
      "script_base64": {
        "Type": "String",
        "Optional": true,
        "Description": "The entire content of the script encoded in Base64."
      },
      "targets": {
        "Type": "Set",
        "Required": true,
        "Description": "On what targets to execute this command. Targets may be identified by their name, or object unique identifier.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_lsv_profile": {
      "allowed_ip_addresses": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of network objects identified by name or UID that represent IP addresses allowed in profile's VPN domain.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "certificate_authority": {
        "Type": "String",
        "Required": true,
        "Description": "Trusted Certificate authority for establishing trust between VPN peers, identified by name or UID."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "restrict_allowed_addresses": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicate whether the IP addresses allowed in the VPN Domain will be restricted or not, according to allowed-ip-addresses field.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "vpn_domain": {
        "Type": "Map",
        "Optional": true,
        "Description": "peers' VPN Domain properties.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_md_permissions_profile": {
      "cme_operations": {
        "Type": "String",
        "Optional": true,
        "Description": "Permission to read / edit the Cloud Management Extension (CME) configuration.",
        "Default": {
          "Type": "string",
          "Value": "disabled"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "default_profile_global_domains": {
        "Type": "String",
        "Optional": true,
        "Description": "Name or UID of the required default profile for all global domains.",
        "Default": {
          "Type": "string",
          "Value": "Read Only All"
        }
      },
      "default_profile_local_domains": {
        "Type": "String",
        "Optional": true,
        "Description": "Name or UID of the required default profile for all local domains."
      },
      "domains_to_process": {
        "Type": "Set",
        "Optional": true,
        "Description": "Indicates which domains to process the commands on. It cannot be used with the details-level full, must be run from the System Domain only and with ignore-warnings true. Valid values are: CURRENT_DOMAIN, ALL_DOMAINS_ON_THIS_SERVER.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "enable_default_profile_for_global_domains": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable the option to specify a default profile for all global domains.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "enable_default_profile_for_local_domains": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable the option to specify a default profile for all local domains."
      },
      "global_vpn_management": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Lets the administrator select Enable global use for a Security Gateway shown in the MDS Gateways \u0026 Servers view.\u003cbr\u003eOnly a 'Manager' permission-level profile can edit this permission."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "manage_admins": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Create and manage Multi-Domain Security Management administrators with the same or lower permission level. For example, a Domain manager cannot create Superusers or global managers.\u003cbr\u003eOnly a 'Manager' permission-level profile can edit this permission.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "manage_global_assignments": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Controls the ability to create, edit and delete global assignment and not the ability to reassign, which is set according to the specific Domain's permission profile."
      },
      "manage_sessions": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Connect/disconnect Domain sessions, publish changes, and delete other administrator sessions.\u003cbr\u003eOnly a 'Manager' permission-level profile can edit this permission."
      },
      "management_api_login": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Permission to log in to the Security Management Server and run API commands using these tools: mgmt_cli (Linux and Windows binaries), Gaia CLI (clish) and Web Services (REST). Useful if you want to prevent administrators from running automatic scripts on the Management.\u003cbr\u003eNote: This permission is not required to run commands from within the API terminal in SmartConsole.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "mds_provisioning": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Create and manage Multi-Domain Servers and Multi-Domain Log Servers.\u003cbr\u003eOnly a \"Super User\" permission-level profile can select this option."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "permission_level": {
        "Type": "String",
        "Optional": true,
        "Description": "The level of the Multi Domain Permissions Profile.\u003cbr\u003eThe level cannot be changed after creation.",
        "Default": {
          "Type": "string",
          "Value": "manager"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "view_global_objects_in_domain": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Lets an administrator with no global objects permissions view the global objects in the domain. This option is required for valid domain management.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      }
    },
    "checkpoint_management_mds": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "domains": {
        "Type": "Set",
        "Description": "Collection of Domain objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "global_domains": {
        "Type": "Set",
        "Description": "Collection of Global domain objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hardware": {
        "Type": "String",
        "Optional": true,
        "Description": "Hardware name. For example: Open server, Smart-1, Other."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ip_pool_first": {
        "Type": "String",
        "Optional": true,
        "Description": "First IP address in the range."
      },
      "ip_pool_last": {
        "Type": "String",
        "Optional": true,
        "Description": "Last IP address in the range."
      },
      "ipv4_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv4 address."
      },
      "ipv6_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv6 address."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "one_time_password": {
        "Type": "String",
        "Optional": true,
        "Description": "Secure internal connection one time password."
      },
      "os": {
        "Type": "String",
        "Optional": true,
        "Description": "Operating system name. For example: Gaia, Linux, SecurePlatform."
      },
      "server_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Type of the management server.",
        "Default": {
          "Type": "string",
          "Value": "multi-domain server"
        }
      },
      "sic_name": {
        "Type": "String",
        "Description": "Name of the Secure Internal Connection Trust.",
        "Computed": true
      },
      "sic_state": {
        "Type": "String",
        "Description": "State the Secure Internal Connection Trust.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "version": {
        "Type": "String",
        "Optional": true,
        "Description": "System version.",
        "Default": {
          "Type": "string",
          "Value": "R81"
        }
      }
    },
    "checkpoint_management_migrate_export_domain": {
      "domain": {
        "Type": "String",
        "Required": true,
        "Description": "Domain can be identified by name or UID.\u003cbr\u003e\u003cfont color=\"red\"\u003eRequired only for\u003c/font\u003e exporting domain from Multi-Domain Server."
      },
      "file_path": {
        "Type": "String",
        "Optional": true,
        "Description": "Path in which the exported domain data will be saved. \u003cbr\u003eShould be the directory path or the full file path with \".tgz\" \u003cbr\u003eIf no path was inserted the default will be: \"/var/log/\u0026lt;domain name\u0026gt;_\u0026lt;date\u0026gt;.tgz\"."
      },
      "include_logs": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Export logs."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_migrate_import_domain": {
      "domain_ip_address": {
        "Type": "String",
        "Required": true,
        "Description": "IPv4 address.\u003cbr\u003e\u003cfont color=\"red\"\u003eRequired only for\u003c/font\u003e importing Security Management Server into Multi-Domain Server."
      },
      "domain_name": {
        "Type": "String",
        "Required": true,
        "Description": "Domain name. Should be unique in the MDS.\u003cbr\u003e\u003cfont color=\"red\"\u003eRequired only for\u003c/font\u003e importing Security Management Server into Multi-Domain Server."
      },
      "domain_server_name": {
        "Type": "String",
        "Required": true,
        "Description": "Multi Domain server name.\u003cbr\u003e\u003cfont color=\"red\"\u003eRequired only for\u003c/font\u003e importing Security Management Server into Multi-Domain Server."
      },
      "file_path": {
        "Type": "String",
        "Required": true,
        "Description": "Path to the exported file to be imported. \u003cbr\u003eShould be the full file path (example, \"/var/log/domain1_exported.tgz\")."
      },
      "include_logs": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Import logs from the input package."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_multicast_address_range": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ipv4_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv4 address."
      },
      "ipv4_address_first": {
        "Type": "String",
        "Optional": true,
        "Description": "First IPv4 address in the range."
      },
      "ipv4_address_last": {
        "Type": "String",
        "Optional": true,
        "Description": "Last IPv4 address in the range."
      },
      "ipv6_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv6 address."
      },
      "ipv6_address_first": {
        "Type": "String",
        "Optional": true,
        "Description": "First IPv6 address in the range."
      },
      "ipv6_address_last": {
        "Type": "String",
        "Optional": true,
        "Description": "Last IPv6 address in the range."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_nat_rule": {
      "auto_generated": {
        "Type": "Bool",
        "Description": "Auto generated.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable/Disable the rule.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "install_on": {
        "Type": "Set",
        "Optional": true,
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "method": {
        "Type": "String",
        "Optional": true,
        "Description": "Nat method.",
        "Default": {
          "Type": "string",
          "Value": "static"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Rule name."
      },
      "original_destination": {
        "Type": "String",
        "Optional": true,
        "Description": "Original destination.",
        "Default": {
          "Type": "string",
          "Value": "Any"
        }
      },
      "original_service": {
        "Type": "String",
        "Optional": true,
        "Description": "Original service.",
        "Default": {
          "Type": "string",
          "Value": "Any"
        }
      },
      "original_source": {
        "Type": "String",
        "Optional": true,
        "Description": "Original source.",
        "Default": {
          "Type": "string",
          "Value": "Any"
        }
      },
      "package": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the package."
      },
      "position": {
        "Type": "Map",
        "Required": true,
        "Description": "Position in the rulebase.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "translated_destination": {
        "Type": "String",
        "Optional": true,
        "Description": "Translated destination.",
        "Default": {
          "Type": "string",
          "Value": "Original"
        }
      },
      "translated_service": {
        "Type": "String",
        "Optional": true,
        "Description": "Translated service.",
        "Default": {
          "Type": "string",
          "Value": "Original"
        }
      },
      "translated_source": {
        "Type": "String",
        "Optional": true,
        "Description": "Translated source.",
        "Default": {
          "Type": "string",
          "Value": "Original"
        }
      }
    },
    "checkpoint_management_nat_section": {
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "package": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the package."
      },
      "position": {
        "Type": "Map",
        "Required": true,
        "Description": "Position in the rulebase.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_network": {
      "broadcast": {
        "Type": "String",
        "Optional": true,
        "Description": "Allow broadcast address inclusion.",
        "Default": {
          "Type": "string",
          "Value": "allow"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "mask_length4": {
        "Type": "Int",
        "Optional": true,
        "Description": "IPv4 network mask length."
      },
      "mask_length6": {
        "Type": "Int",
        "Optional": true,
        "Description": "IPv6 network mask length."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "nat_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "NAT settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "subnet4": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv4 network address."
      },
      "subnet6": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv6 network address."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_network_feed": {
      "certificate_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Certificate SHA-1 fingerprint to access the feed."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "custom_header": {
        "Type": "List",
        "Optional": true,
        "Description": "Headers to allow different authentication methods with the URL.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "header_name": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of the HTTP header we wish to add."
            },
            "header_value": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of the HTTP value we wish to add."
            }
          }
        }
      },
      "data_column": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of the column that contains the feed's data.",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      },
      "domains_to_process": {
        "Type": "Set",
        "Optional": true,
        "Description": "Indicates which domains to process the commands on. It cannot be used with the details-level full, must be run from the System Domain only and with ignore-warnings true. Valid values are: CURRENT_DOMAIN, ALL_DOMAINS_ON_THIS_SERVER.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "feed_format": {
        "Type": "String",
        "Optional": true,
        "Description": "Feed file format.",
        "Default": {
          "Type": "string",
          "Value": "Flat List"
        }
      },
      "feed_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Feed type to be enforced.",
        "Default": {
          "Type": "string",
          "Value": "IP Address"
        }
      },
      "feed_url": {
        "Type": "String",
        "Optional": true,
        "Description": "URL of the feed. URL should be written as http or https."
      },
      "fields_delimiter": {
        "Type": "String",
        "Optional": true,
        "Description": "The delimiter that separates between the columns in the feed. For feed format 'Flat List' default is '\n'(new line).",
        "Default": {
          "Type": "string",
          "Value": "Depends on the feed format"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_lines_that_start_with": {
        "Type": "String",
        "Optional": true,
        "Description": "A prefix that will determine which lines to ignore.",
        "Default": {
          "Type": "string",
          "Value": "#"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "json_query": {
        "Type": "String",
        "Optional": true,
        "Description": "JQ query to be parsed."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "password for authenticating with the URL."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "update_interval": {
        "Type": "Int",
        "Optional": true,
        "Description": "Interval in minutes for updating the feed on the Security Gateway.",
        "Default": {
          "Type": "int",
          "Value": "60"
        }
      },
      "use_gateway_proxy": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Use the gateway's proxy for retrieving the feed.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "username": {
        "Type": "String",
        "Optional": true,
        "Description": "username for authenticating with the URL."
      }
    },
    "checkpoint_management_nuage_data_center_server": {
      "certificate_fingerprint": {
        "Type": "String",
        "Optional": true,
        "Description": "Specify the SHA-1 or SHA-256 fingerprint of the Data Center Server's certificate."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "hostname": {
        "Type": "String",
        "Required": true,
        "Description": "IP address or hostname of the Nuage server."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings. By Setting this parameter to 'true' test connection failure will be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "organization": {
        "Type": "String",
        "Required": true,
        "Description": "Organization name or enterprise."
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the Nuage administrator."
      },
      "password_base64": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the Nuage administrator encoded in Base64."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "Username of the Nuage administrator."
      }
    },
    "checkpoint_management_openstack_data_center_server": {
      "certificate_fingerprint": {
        "Type": "String",
        "Optional": true,
        "Description": "Specify the SHA-1 or SHA-256 fingerprint of the Data Center Server's certificate."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "hostname": {
        "Type": "String",
        "Required": true,
        "Description": "URL of the OpenStack server.\nhttp(s)://\u003chost\u003e:\u003cport\u003e/\u003cversion\u003e\nExample: https://1.2.3.4:5000/v2.0"
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings. By Setting this parameter to 'true' test connection failure will be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the OpenStack server."
      },
      "password_base64": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the OpenStack server encoded in Base64."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "Username of the OpenStack server.\nTo login to specific domain insert domain name before username.\nExample: \u003cdomain\u003e/\u003cusername\u003e"
      }
    },
    "checkpoint_management_opsec_application": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "cpmi": {
        "Type": "Map",
        "Optional": true,
        "Description": "Used to setup the CPMI client entity.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "host": {
        "Type": "String",
        "Optional": true,
        "Description": "The host where the server is running. Pre-define the host as a network object."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "lea": {
        "Type": "Map",
        "Optional": true,
        "Description": "Used to setup the LEA client entity.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "one_time_password": {
        "Type": "String",
        "Optional": true,
        "Description": "A password required for establishing a Secure Internal Communication (SIC)."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_package": {
      "access": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True - enables, False - disables access \u0026 NAT policies, empty - nothing is changed.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "desktop_security": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True - enables, False - disables Desktop security policy, empty - nothing is changed.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "installation_targets": {
        "Type": "Set",
        "Optional": true,
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "qos": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True - enables, False - disables QoS policy, empty - nothing is changed.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "qos_policy_type": {
        "Type": "String",
        "Optional": true,
        "Description": "QoS policy type.",
        "Default": {
          "Type": "string",
          "Value": "recommended"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "threat_prevention": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True - enables, False - disables Threat policy, empty - nothing is changed.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "vpn_traditional_mode": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True - enables, False - disables VPN traditional mode, empty - nothing is changed.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      }
    },
    "checkpoint_management_publish": {
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      },
      "triggers": {
        "Type": "Set",
        "Optional": true,
        "Description": "Triggers a publish if there are any changes to objects in this list.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Session unique identifier. Specify it to publish a different session than the one you currently use."
      }
    },
    "checkpoint_management_put_file": {
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "file_content": {
        "Type": "String",
        "Optional": true,
        "Description": "Text file content."
      },
      "file_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Text file name."
      },
      "file_path": {
        "Type": "String",
        "Optional": true,
        "Description": "Text file target path."
      },
      "targets": {
        "Type": "Set",
        "Required": true,
        "Description": "On what targets to execute this command. Targets may be identified by their name, or object unique identifier.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tasks": {
        "Type": "Set",
        "Description": "Command asynchronous task unique identifiers",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_radius_group": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "members": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of radius servers identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_radius_server": {
      "accounting": {
        "Type": "Map",
        "Optional": true,
        "Description": "Accounting settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.\nApply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "priority": {
        "Type": "Int",
        "Optional": true,
        "Description": "The priority of the RADIUS Server in case it is a member of a RADIUS Group.",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      },
      "protocol": {
        "Type": "String",
        "Optional": true,
        "Description": "The type of authentication protocol that will be used when authenticating the user to the RADIUS server.",
        "Default": {
          "Type": "string",
          "Value": "PAP"
        }
      },
      "server": {
        "Type": "String",
        "Required": true,
        "Description": "The UID or Name of the host that is the RADIUS Server."
      },
      "service": {
        "Type": "String",
        "Optional": true,
        "Description": "The UID or Name of the Service to which the RADIUS server listens.",
        "Default": {
          "Type": "string",
          "Value": "RADIUS"
        }
      },
      "shared_secret": {
        "Type": "String",
        "Required": true,
        "Description": "The secret between the RADIUS server and the Security Gateway."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "version": {
        "Type": "String",
        "Optional": true,
        "Description": "The version can be either RADIUS Version 1.0, which is RFC 2138 compliant, and RADIUS Version 2.0 which is RFC 2865 compliant.",
        "Default": {
          "Type": "string",
          "Value": "RADIUS Ver. 1.0"
        }
      }
    },
    "checkpoint_management_repository_script": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "script_body": {
        "Type": "String",
        "Optional": true,
        "Description": "The entire content of the script."
      },
      "script_body_base64": {
        "Type": "String",
        "Optional": true,
        "Description": "The entire content of the script encoded in Base64."
      },
      "script_body_base64_return": {
        "Type": "String",
        "Description": "The entire content of the script encoded in Base64.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_reset_sic": {
      "message": {
        "Type": "String",
        "Description": "Operation status.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Gateway, cluster member or Check Point host name."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_restore_domain": {
      "domain_ip_address": {
        "Type": "String",
        "Required": true,
        "Description": "IPv4 address.\u003cbr\u003e\u003cfont color=\"red\"\u003eRequired only for\u003c/font\u003e importing Security Management Server into Multi-Domain Server."
      },
      "domain_name": {
        "Type": "String",
        "Required": true,
        "Description": "Domain name. Should be unique in the MDS.\u003cbr\u003e\u003cfont color=\"red\"\u003eRequired only for\u003c/font\u003e importing Security Management Server into Multi-Domain Server."
      },
      "domain_server_name": {
        "Type": "String",
        "Required": true,
        "Description": "Multi Domain server name.\u003cbr\u003e\u003cfont color=\"red\"\u003eRequired only for\u003c/font\u003e importing Security Management Server into Multi-Domain Server."
      },
      "file_path": {
        "Type": "String",
        "Required": true,
        "Description": "Path to the backup file to be restored. \u003cbr\u003eShould be the full file path (example, \"/var/log/domain1_backup.tgz\")."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      },
      "verify_only": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If true, verify that the import operation is valid for this input file and this environment \u003cbr\u003eNote: Restore operation will not be executed."
      }
    },
    "checkpoint_management_revert_to_revision": {
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      },
      "to_session": {
        "Type": "String",
        "Optional": true,
        "Description": "Session unique identifier. Specify the session  id you would like to revert your database to."
      }
    },
    "checkpoint_management_run_ips_update": {
      "package_path": {
        "Type": "String",
        "Optional": true,
        "Description": "Offline update package path."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_run_script": {
      "args": {
        "Type": "String",
        "Optional": true,
        "Description": "Script arguments."
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "script": {
        "Type": "String",
        "Required": true,
        "Description": "Script body."
      },
      "script_name": {
        "Type": "String",
        "Required": true,
        "Description": "Script name."
      },
      "targets": {
        "Type": "Set",
        "Required": true,
        "Description": "On what targets to execute this command. Targets may be identified by their name, or object unique identifier.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tasks": {
        "Type": "Set",
        "Description": "Command asynchronous task unique identifiers",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_run_threat_emulation_file_types_offline_update": {
      "file_path": {
        "Type": "String",
        "Required": true,
        "Description": "File path for offline update of Threat Emulation file types, the file path should be on the management machine."
      },
      "file_raw_data": {
        "Type": "String",
        "Required": true,
        "Description": "The contents of a file containing the Threat Emulation file types."
      }
    },
    "checkpoint_management_security_zone": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_service_citrix_tcp": {
      "application": {
        "Type": "String",
        "Optional": true,
        "Description": "Citrix application name."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_service_compound_tcp": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "compound_service": {
        "Type": "String",
        "Optional": true,
        "Description": "Compound service type.",
        "Default": {
          "Type": "string",
          "Value": "pointcast"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_service_dce_rpc": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "interface_uuid": {
        "Type": "String",
        "Optional": true,
        "Description": "Network interface UUID."
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_service_group": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "members": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_service_icmp": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "icmp_code": {
        "Type": "Int",
        "Optional": true,
        "Description": "As listed in: \u003ca href=\"http://www.iana.org/assignments/icmp-parameters\" target=\"_blank\"\u003eRFC 792\u003c/a\u003e.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "icmp_type": {
        "Type": "Int",
        "Optional": true,
        "Description": "As listed in: \u003ca href=\"http://www.iana.org/assignments/icmp-parameters\" target=\"_blank\"\u003eRFC 792\u003c/a\u003e.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_service_icmp6": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "icmp_code": {
        "Type": "Int",
        "Optional": true,
        "Description": "As listed in: \u003ca href=\"http://www.iana.org/assignments/icmp-parameters\" target=\"_blank\"\u003eRFC 792\u003c/a\u003e.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "icmp_type": {
        "Type": "Int",
        "Optional": true,
        "Description": "As listed in: \u003ca href=\"http://www.iana.org/assignments/icmp-parameters\" target=\"_blank\"\u003eRFC 792\u003c/a\u003e.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_service_other": {
      "accept_replies": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Specifies whether Other Service replies are to be accepted.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "action": {
        "Type": "String",
        "Optional": true,
        "Description": "Contains an INSPECT expression that defines the action to take if a rule containing this service is matched. Example: set r_mhandler \u0026open_ssl_handler sets a handler on the connection."
      },
      "aggressive_aging": {
        "Type": "Map",
        "Optional": true,
        "Description": "Sets short (aggressive) timeouts for idle connections.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ip_protocol": {
        "Type": "Int",
        "Optional": true,
        "Description": "IP protocol number."
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections."
      },
      "match": {
        "Type": "String",
        "Optional": true,
        "Description": "Contains an INSPECT expression that defines the matching criteria. The connection is examined against the expression during the first packet. Example: tcp, dport = 21, direction = 0 matches incoming FTP control connections."
      },
      "match_for_any": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether this service is used when 'Any' is set as the rule's service and there are several service objects with the same source port and protocol."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "override_default_settings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether this service is a Data Domain service which has been overridden.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "session_timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "Time (in seconds) before the session times out."
      },
      "sync_connections_on_cluster": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enables state-synchronized High Availability or Load Sharing on a ClusterXL or OPSEC-certified cluster."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "use_default_session_timeout": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Use default virtual session timeout.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      }
    },
    "checkpoint_management_service_rpc": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "program_number": {
        "Type": "Int",
        "Optional": true,
        "Description": "N/A"
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_service_sctp": {
      "aggressive_aging": {
        "Type": "Map",
        "Optional": true,
        "Description": "Sets short (aggressive) timeouts for idle connections.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections."
      },
      "match_for_any": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether this service is used when 'Any' is set as the rule's service and there are several service objects with the same source port and protocol."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "port": {
        "Type": "String",
        "Optional": true,
        "Description": "Port number. To specify a port range add a hyphen between the lowest and the highest port numbers, for example 44-45."
      },
      "session_timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "Time (in seconds) before the session times out."
      },
      "source_port": {
        "Type": "String",
        "Optional": true,
        "Description": "Source port number. To specify a port range add a hyphen between the lowest and the highest port numbers, for example 44-45."
      },
      "sync_connections_on_cluster": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enables state-synchronized High Availability or Load Sharing on a ClusterXL or OPSEC-certified cluster."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "use_default_session_timeout": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Use default virtual session timeout.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      }
    },
    "checkpoint_management_service_tcp": {
      "aggressive_aging": {
        "Type": "Map",
        "Optional": true,
        "Description": "Sets short (aggressive) timeouts for idle connections.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections."
      },
      "match_by_protocol_signature": {
        "Type": "Bool",
        "Optional": true,
        "Description": "A value of true enables matching by the selected protocol's signature - the signature identifies the protocol as genuine. Select this option to limit the port to the specified protocol. If the selected protocol does not support matching by signature, this field cannot be set to true.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "match_for_any": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether this service is used when 'Any' is set as the rule's service and there are several service objects with the same source port and protocol.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "override_default_settings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether this service is a Data Domain service which has been overridden."
      },
      "port": {
        "Type": "String",
        "Optional": true,
        "Description": "The number of the port used to provide this service. To specify a port range, place a hyphen between the lowest and highest port numbers, for example 44-55."
      },
      "protocol": {
        "Type": "String",
        "Optional": true,
        "Description": "Select the protocol type associated with the service, and by implication, the management server (if any) that enforces Content Security and Authentication for the service. Selecting a Protocol Type invokes the specific protocol handlers for each protocol type, thus enabling higher level of security by parsing the protocol, and higher level of connectivity by tracking dynamic actions (such as opening of ports)."
      },
      "session_timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "Time (in seconds) before the session times out.",
        "Default": {
          "Type": "int",
          "Value": "3600"
        }
      },
      "source_port": {
        "Type": "String",
        "Optional": true,
        "Description": "Port number for the client side service. If specified, only those Source port Numbers will be Accepted, Dropped, or Rejected during packet inspection. Otherwise, the source port is not inspected."
      },
      "sync_connections_on_cluster": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enables state-synchronized High Availability or Load Sharing on a ClusterXL or OPSEC-certified cluster.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "use_default_session_timeout": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Use default virtual session timeout.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      }
    },
    "checkpoint_management_service_udp": {
      "accept_replies": {
        "Type": "Bool",
        "Optional": true,
        "Description": "N/A",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "aggressive_aging": {
        "Type": "Map",
        "Optional": true,
        "Description": "Sets short (aggressive) timeouts for idle connections.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections."
      },
      "match_by_protocol_signature": {
        "Type": "Bool",
        "Optional": true,
        "Description": "A value of true enables matching by the selected protocol's signature - the signature identifies the protocol as genuine. Select this option to limit the port to the specified protocol. If the selected protocol does not support matching by signature, this field cannot be set to true.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "match_for_any": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether this service is used when 'Any' is set as the rule's service and there are several service objects with the same source port and protocol.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "override_default_settings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether this service is a Data Domain service which has been overridden."
      },
      "port": {
        "Type": "String",
        "Optional": true,
        "Description": "The number of the port used to provide this service. To specify a port range, place a hyphen between the lowest and highest port numbers, for example 44-55."
      },
      "protocol": {
        "Type": "String",
        "Optional": true,
        "Description": "Select the protocol type associated with the service, and by implication, the management server (if any) that enforces Content Security and Authentication for the service. Selecting a Protocol Type invokes the specific protocol handlers for each protocol type, thus enabling higher level of security by parsing the protocol, and higher level of connectivity by tracking dynamic actions (such as opening of ports)."
      },
      "session_timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "Time (in seconds) before the session times out.",
        "Default": {
          "Type": "int",
          "Value": "40"
        }
      },
      "source_port": {
        "Type": "String",
        "Optional": true,
        "Description": "Port number for the client side service. If specified, only those Source port Numbers will be Accepted, Dropped, or Rejected during packet inspection. Otherwise, the source port is not inspected."
      },
      "sync_connections_on_cluster": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enables state-synchronized High Availability or Load Sharing on a ClusterXL or OPSEC-certified cluster.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "use_default_session_timeout": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Use default virtual session timeout.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      }
    },
    "checkpoint_management_set_api_settings": {
      "accepted_api_calls_from": {
        "Type": "String",
        "Optional": true,
        "Description": "Clients allowed to connect to the API Server."
      },
      "automatic_start": {
        "Type": "Bool",
        "Optional": true,
        "Description": "MGMT API will start after server will start."
      }
    },
    "checkpoint_management_set_automatic_purge": {
      "enabled": {
        "Type": "Bool",
        "Required": true,
        "Description": "Turn on/off the automatic-purge feature."
      },
      "keep_sessions_by_count": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether or not to keep the latest N sessions. Note: when the automatic purge feature is enabled, this field and/or the \"keep-sessions-by-date\" field must be set to 'true'."
      },
      "keep_sessions_by_days": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether or not to keep the sessions for D days. Note: when the automatic purge feature is enabled, this field and/or the \"keep-sessions-by-count\" field must be set to 'true'."
      },
      "number_of_days_to_keep": {
        "Type": "Int",
        "Optional": true,
        "Description": "When \"keep-sessions-by-days = true\" this sets the number of days to keep the sessions."
      },
      "number_of_sessions_to_keep": {
        "Type": "Int",
        "Optional": true,
        "Description": "When \"keep-sessions-by-count = true\" this sets the number of newest sessions to preserve, by the sessions's publish date."
      },
      "scheduling": {
        "Type": "Map",
        "Optional": true,
        "Description": "When to purge sessions that do not meet the \"keep\" criteria. Note: when the automatic purge feature is enabled, this field must be set.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_set_global_domain": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors."
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored."
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "servers": {
        "Type": "Map",
        "Optional": true,
        "Description": "Multi Domain Servers. When the field is provided, 'set-global-domain' command is executed asynchronously.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers. Note: The list of tags can not be modified in a singlecommand together with the domain servers. To modify tags, please use the separate 'set-global-domain' command, without providing the list of domain servers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tasks": {
        "Type": "Set",
        "Description": "Command asynchronous task unique identifiers",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_set_ha_state": {
      "new_state": {
        "Type": "String",
        "Required": true,
        "Description": "Domain server new state."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_set_idp_default_assignment": {
      "identity_provider": {
        "Type": "String",
        "Required": true,
        "Description": "Represents the Identity Provider to be used for Login by this assignment identified by the name or UID, to cancel existing assignment should set to 'none'."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored."
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_set_idp_to_domain_assignment": {
      "assigned_domain": {
        "Type": "String",
        "Required": true,
        "Description": "Represents the Domain assigned by 'idp-to-domain-assignment', need to be domain name or UID."
      },
      "identity_provider": {
        "Type": "String",
        "Optional": true,
        "Description": "Represents the Identity Provider to be used for Login by this assignment. Must be set when \"using-default\" was set to be false."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored."
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      },
      "using_default": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Is this assignment override by 'idp-default-assignment'."
      }
    },
    "checkpoint_management_set_ips_update_schedule": {
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable/Disable IPS Update Schedule."
      },
      "recurrence": {
        "Type": "Map",
        "Optional": true,
        "Description": "Days recurrence.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time in format HH:mm."
      }
    },
    "checkpoint_management_set_login_message": {
      "header": {
        "Type": "String",
        "Optional": true,
        "Description": "commonLoginLogic message header."
      },
      "message": {
        "Type": "String",
        "Optional": true,
        "Description": "commonLoginLogic message body."
      },
      "show_message": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to show login message."
      },
      "warning": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Add warning sign."
      }
    },
    "checkpoint_management_set_threat_protection": {
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Protection comments."
      },
      "follow_up": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Tag the protection with pre-defined follow-up flag."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "overrides": {
        "Type": "List",
        "Optional": true,
        "Description": "Overrides per profile for this protection\u003cbr\u003e Note: Remove override for Core protections removes only the actions override. Remove override for Threat Cloud protections removes the action, track and packet captures.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Optional": true,
              "Description": "Protection action."
            },
            "capture_packets": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Capture packets."
            },
            "profile": {
              "Type": "String",
              "Optional": true,
              "Description": "Profile name."
            },
            "track": {
              "Type": "String",
              "Optional": true,
              "Description": "Tracking method for protection."
            }
          }
        }
      }
    },
    "checkpoint_management_simple_cluster": {
      "anti_bot": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Anti-Bot blade enabled."
      },
      "anti_virus": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Anti-Virus blade enabled."
      },
      "application_control": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Application Control blade enabled."
      },
      "cluster_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "Cluster mode.",
        "Default": {
          "Type": "string",
          "Value": "cluster-xl-ha"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "content_awareness": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Content Awareness blade enabled."
      },
      "data_awareness": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Data Awareness blade enabled."
      },
      "dynamic_ip": {
        "Type": "Bool",
        "Description": "Dynamic IP address.",
        "Computed": true
      },
      "firewall": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Firewall blade enabled."
      },
      "firewall_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Firewall settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hardware": {
        "Type": "String",
        "Optional": true,
        "Description": "Cluster platform hardware."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "interfaces": {
        "Type": "List",
        "Optional": true,
        "Description": "Network interfaces.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "anti_spoofing": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Anti spoofing.",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "anti_spoofing_settings": {
              "Type": "Map",
              "Optional": true,
              "Description": "Anti spoofing settings",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "color": {
              "Type": "String",
              "Optional": true,
              "Description": "Color of the object. Should be one of existing colors.",
              "Default": {
                "Type": "string",
                "Value": "black"
              }
            },
            "comments": {
              "Type": "String",
              "Optional": true,
              "Description": "Comments string."
            },
            "interface_type": {
              "Type": "String",
              "Required": true,
              "Description": "Cluster interface type."
            },
            "ipv4_address": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 address."
            },
            "ipv4_mask_length": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 network mask length."
            },
            "ipv4_network_mask": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 network address."
            },
            "ipv6_address": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv6 address."
            },
            "ipv6_mask_length": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv6 network mask length."
            },
            "ipv6_network_mask": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv6 network address."
            },
            "multicast_address": {
              "Type": "String",
              "Optional": true,
              "Description": "Multicast IP Address."
            },
            "multicast_address_type": {
              "Type": "String",
              "Optional": true,
              "Description": "Multicast Address Type."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Object name. Should be unique in the domain."
            },
            "security_zone": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Security zone.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "security_zone_settings": {
              "Type": "Map",
              "Optional": true,
              "Description": "Security zone settings.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "topology": {
              "Type": "String",
              "Optional": true,
              "Description": "Topology.",
              "Default": {
                "Type": "string",
                "Value": "automatic"
              }
            },
            "topology_automatic_calculation": {
              "Type": "String",
              "Description": "Shows the automatic topology calculation.",
              "Computed": true
            },
            "topology_settings": {
              "Type": "Map",
              "Optional": true,
              "Description": "Topology settings.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "ips": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Intrusion Prevention System blade enabled."
      },
      "ipv4_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv4 address."
      },
      "ipv6_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv6 address."
      },
      "members": {
        "Type": "List",
        "Optional": true,
        "Description": "Cluster members.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "interfaces": {
              "Type": "List",
              "Optional": true,
              "Description": "Network interfaces.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "ipv4_address": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "IPv4 address."
                  },
                  "ipv4_mask_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "IPv4 network mask length."
                  },
                  "ipv4_network_mask": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "IPv4 network address."
                  },
                  "ipv6_address": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "IPv6 address."
                  },
                  "ipv6_mask_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "IPv6 network mask length."
                  },
                  "ipv6_network_mask": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "IPv6 network address."
                  },
                  "name": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Object name. Should be unique in the domain."
                  }
                }
              }
            },
            "ip_address": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 or IPv6 address."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Object name. Should be unique in the domain."
            },
            "one_time_password": {
              "Type": "String",
              "Optional": true,
              "Description": "SIC one time password."
            },
            "priority": {
              "Type": "Int",
              "Description": "The member priority on the cluster.",
              "Computed": true
            },
            "sic_message": {
              "Type": "String",
              "Description": "Secure Internal Communication state.",
              "Computed": true
            },
            "sic_state": {
              "Type": "String",
              "Description": "Secure Internal Communication name.",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "os_name": {
        "Type": "String",
        "Optional": true,
        "Description": "OS name.",
        "Default": {
          "Type": "string",
          "Value": "Gaia"
        }
      },
      "save_logs_locally": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Save logs locally."
      },
      "send_alerts_to_server": {
        "Type": "Set",
        "Optional": true,
        "Description": "Server(s) to send alerts to.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_backup_server": {
        "Type": "Set",
        "Optional": true,
        "Description": "Backup server(s) to send logs to.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_server": {
        "Type": "Set",
        "Optional": true,
        "Description": "Server(s) to send logs to.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "sic_name": {
        "Type": "String",
        "Description": "Secure Internal Communication name.",
        "Computed": true
      },
      "sic_state": {
        "Type": "String",
        "Description": "Secure Internal Communication state.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "threat_emulation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Threat Emulation blade enabled."
      },
      "url_filtering": {
        "Type": "Bool",
        "Optional": true,
        "Description": "URL Filtering blade enabled."
      },
      "version": {
        "Type": "String",
        "Optional": true,
        "Description": "Cluster platform version."
      },
      "vpn": {
        "Type": "Bool",
        "Optional": true,
        "Description": "VPN blade enabled."
      },
      "vpn_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Gateway VPN settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_simple_gateway": {
      "anti_bot": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Anti-Bot blade enabled."
      },
      "anti_virus": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Anti-Virus blade enabled."
      },
      "application_control": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Application Control blade enabled."
      },
      "application_control_and_url_filtering_settings": {
        "Type": "List",
        "Optional": true,
        "Description": "Gateway Application Control and URL filtering settings.",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "global_settings_mode": {
              "Type": "String",
              "Optional": true,
              "Description": "Whether to override global settings or not."
            },
            "override_global_settings": {
              "Type": "Map",
              "Optional": true,
              "Description": "override global settings object.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "content_awareness": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Content Awareness blade enabled."
      },
      "dynamic_ip": {
        "Type": "Bool",
        "Description": "Dynamic IP address.",
        "Computed": true
      },
      "firewall": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Firewall blade enabled.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "firewall_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Firewall settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hardware": {
        "Type": "String",
        "Description": "Gateway platform hardware type.",
        "Computed": true
      },
      "icap_server": {
        "Type": "Bool",
        "Optional": true,
        "Description": "ICAP Server enabled."
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "interfaces": {
        "Type": "List",
        "Optional": true,
        "Description": "Network interfaces.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "anti_spoofing": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Anti spoofing.",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "anti_spoofing_settings": {
              "Type": "Map",
              "Optional": true,
              "Description": "Anti spoofing settings",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "color": {
              "Type": "String",
              "Optional": true,
              "Description": "Color of the object. Should be one of existing colors.",
              "Default": {
                "Type": "string",
                "Value": "black"
              }
            },
            "comments": {
              "Type": "String",
              "Optional": true,
              "Description": "Comments string."
            },
            "ipv4_address": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 address."
            },
            "ipv4_mask_length": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 network mask length."
            },
            "ipv4_network_mask": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 network address."
            },
            "ipv6_address": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv6 address."
            },
            "ipv6_mask_length": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv6 network mask length."
            },
            "ipv6_network_mask": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv6 network address."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Object name. Should be unique in the domain."
            },
            "security_zone": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Security zone.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "security_zone_settings": {
              "Type": "Map",
              "Optional": true,
              "Description": "Security zone settings.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "topology": {
              "Type": "String",
              "Optional": true,
              "Description": "Topology.",
              "Default": {
                "Type": "string",
                "Value": "automatic"
              }
            },
            "topology_automatic_calculation": {
              "Type": "String",
              "Description": "Shows the automatic topology calculation.",
              "Computed": true
            },
            "topology_settings": {
              "Type": "Map",
              "Optional": true,
              "Description": "Topology settings.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "ips": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Intrusion Prevention System blade enabled."
      },
      "ipv4_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv4 address."
      },
      "ipv6_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv6 address."
      },
      "logs_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Logs settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "one_time_password": {
        "Type": "String",
        "Optional": true,
        "Description": "SIC one time password."
      },
      "os_name": {
        "Type": "String",
        "Optional": true,
        "Description": "OS name.",
        "Default": {
          "Type": "string",
          "Value": "Gaia"
        }
      },
      "save_logs_locally": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Save logs locally."
      },
      "send_alerts_to_server": {
        "Type": "Set",
        "Optional": true,
        "Description": "Server(s) to send alerts to.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_backup_server": {
        "Type": "Set",
        "Optional": true,
        "Description": "Backup server(s) to send logs to.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_server": {
        "Type": "Set",
        "Optional": true,
        "Description": "Server(s) to send logs to.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "sic_name": {
        "Type": "String",
        "Description": "Secure Internal Communication name.",
        "Computed": true
      },
      "sic_state": {
        "Type": "String",
        "Description": "Secure Internal Communication state.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "threat_emulation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Threat Emulation blade enabled."
      },
      "threat_extraction": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Threat Extraction blade enabled."
      },
      "url_filtering": {
        "Type": "Bool",
        "Optional": true,
        "Description": "URL Filtering blade enabled."
      },
      "version": {
        "Type": "String",
        "Optional": true,
        "Description": "Gateway platform version."
      },
      "vpn": {
        "Type": "Bool",
        "Optional": true,
        "Description": "VPN blade enabled."
      },
      "vpn_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Gateway VPN settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_smtp_server": {
      "authentication": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Does the mail server requires authentication.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "domains_to_process": {
        "Type": "Set",
        "Optional": true,
        "Description": "Indicates which domains to process the commands on. It cannot be used with the details-level full, must be run from the System Domain only and with ignore-warnings true. Valid values are: CURRENT_DOMAIN, ALL_DOMAINS_ON_THIS_SERVER.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "encryption": {
        "Type": "String",
        "Optional": true,
        "Description": "Encryption type.",
        "Default": {
          "Type": "string",
          "Value": "none"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "A password for the SMTP server.\u003cbr\u003e\u003cfont color=\"red\"\u003eRequired only if\u003c/font\u003e authentication is set to true."
      },
      "port": {
        "Type": "Int",
        "Optional": true,
        "Description": "The SMTP port to use."
      },
      "server": {
        "Type": "String",
        "Optional": true,
        "Description": "The SMTP server address."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "username": {
        "Type": "String",
        "Optional": true,
        "Description": "A username for the SMTP server.\u003cbr\u003e\u003cfont color=\"red\"\u003eRequired only if\u003c/font\u003e authentication is set to true."
      }
    },
    "checkpoint_management_tacacs_group": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "members": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tacacs servers identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain"
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_tacacs_server": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "encryption": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Is there a secret key defined on the server. Must be set true when \"server-type\" was selected to be \"TACACS+\".",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "priority": {
        "Type": "Int",
        "Optional": true,
        "Description": "The priority of the TACACS Server in case it is a member of a TACACS Group.",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      },
      "secret_key": {
        "Type": "String",
        "Optional": true,
        "Description": "The server's secret key. Required only when \"server-type\" was selected to be \"TACACS+\"."
      },
      "server": {
        "Type": "String",
        "Required": true,
        "Description": "The UID or Name of the host that is the TACACS Server."
      },
      "server_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Server type, TACACS or TACACS+.",
        "Default": {
          "Type": "string",
          "Value": "TACACS"
        }
      },
      "service": {
        "Type": "String",
        "Optional": true,
        "Description": "Server service, only relevant when \"server-type\" is TACACS.",
        "Default": {
          "Type": "string",
          "Value": "TACACS"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_tag": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_test_sic_status": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Gateway, cluster member or Check Point host name."
      },
      "sic_message": {
        "Type": "String",
        "Description": "SIC message from the gateway.",
        "Computed": true
      },
      "sic_name": {
        "Type": "String",
        "Description": "SIC (Secure Internal Communication) name.",
        "Computed": true
      },
      "sic_status": {
        "Type": "String",
        "Description": "SIC Status reflects the state of the gateway after it has received the certificate issued by the ICA.",
        "Computed": true
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_threat_exception": {
      "action": {
        "Type": "String",
        "Optional": true,
        "Description": "Action-the enforced profile.",
        "Default": {
          "Type": "string",
          "Value": "Detect"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "destination": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "destination_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for destination.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable/Disable the rule.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "exception_group_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the exception-group."
      },
      "exception_group_uid": {
        "Type": "String",
        "Optional": true,
        "Description": "The UID of the exception-group."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "install_on": {
        "Type": "Set",
        "Optional": true,
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that the rule belongs to identified by the name or UID."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Rule name."
      },
      "owner": {
        "Type": "String",
        "Description": "Owner UID.",
        "Computed": true
      },
      "position": {
        "Type": "Map",
        "Required": true,
        "Description": "Position in the rulebase.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "protected_scope": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of objects defining Protected Scope identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "protected_scope_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for Protected Scope.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "protection_or_site": {
        "Type": "Set",
        "Optional": true,
        "Description": "Name of the protection or site.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "rule_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the parent rule."
      },
      "rule_uid": {
        "Type": "String",
        "Optional": true,
        "Description": "The UID of the parent rule."
      },
      "service": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for service.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "source": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "source_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for source.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "track": {
        "Type": "String",
        "Optional": true,
        "Description": "Packet tracking.",
        "Default": {
          "Type": "string",
          "Value": "Log"
        }
      }
    },
    "checkpoint_management_threat_indicator": {
      "action": {
        "Type": "String",
        "Optional": true,
        "Description": "The indicator's action.",
        "Default": {
          "Type": "string",
          "Value": "Prevent"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "observables": {
        "Type": "List",
        "Optional": true,
        "Description": "The indicator's observables.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "confidence": {
              "Type": "String",
              "Optional": true,
              "Description": "The confidence level the indicator has that a real threat has been uncovered."
            },
            "domain": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of a domain."
            },
            "ip_address": {
              "Type": "String",
              "Optional": true,
              "Description": "A valid IP-Address."
            },
            "ip_address_first": {
              "Type": "String",
              "Optional": true,
              "Description": "A valid IP-Address, the beginning of the range. If you configure this parameter with a value, you must also configure the value of the 'ip-address-last' parameter"
            },
            "ip_address_last": {
              "Type": "String",
              "Optional": true,
              "Description": "A valid IP-Address, the end of the range. If you configure this parameter with a value, you must also configure the value of the 'ip-address-first' parameter."
            },
            "mail_cc": {
              "Type": "String",
              "Optional": true,
              "Description": "A valid E-Mail address, cc field."
            },
            "mail_from": {
              "Type": "String",
              "Optional": true,
              "Description": "A valid E-Mail address, sender field."
            },
            "mail_reply_to": {
              "Type": "String",
              "Optional": true,
              "Description": "A valid E-Mail address, reply-to field."
            },
            "mail_subject": {
              "Type": "String",
              "Optional": true,
              "Description": "Subject of E-Mail."
            },
            "mail_to": {
              "Type": "String",
              "Optional": true,
              "Description": "A valid E-Mail address, recipient filed."
            },
            "md5": {
              "Type": "String",
              "Optional": true,
              "Description": "A valid MD5 sequence."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Object name. Should be unique in the domain."
            },
            "product": {
              "Type": "String",
              "Optional": true,
              "Description": "The software blade that processes the observable: AV - AntiVirus, AB - AntiBot."
            },
            "severity": {
              "Type": "String",
              "Optional": true,
              "Description": "The severity level of the threat."
            },
            "url": {
              "Type": "String",
              "Optional": true,
              "Description": "A valid URL."
            }
          }
        }
      },
      "profile_overrides": {
        "Type": "List",
        "Optional": true,
        "Description": "Profiles in which to override the indicator's default action.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Optional": true,
              "Description": "The indicator's action in this profile."
            },
            "profile": {
              "Type": "String",
              "Optional": true,
              "Description": "The profile in which to override the indicator's action."
            }
          }
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_threat_ioc_feed": {
      "action": {
        "Type": "String",
        "Optional": true,
        "Description": "The feed indicator's action.",
        "Default": {
          "Type": "string",
          "Value": "Prevent"
        }
      },
      "certificate_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Certificate SHA-1 fingerprint to access the feed."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "custom_comment": {
        "Type": "Int",
        "Optional": true,
        "Description": "Custom IOC feed - the column number of comment."
      },
      "custom_confidence": {
        "Type": "Int",
        "Optional": true,
        "Description": "Custom IOC feed - the column number of confidence."
      },
      "custom_header": {
        "Type": "List",
        "Optional": true,
        "Description": "Custom HTTP headers.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "header_name": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of the HTTP header we wish to add."
            },
            "header_value": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of the HTTP value we wish to add."
            }
          }
        }
      },
      "custom_name": {
        "Type": "Int",
        "Optional": true,
        "Description": "Custom IOC feed - the column number of name."
      },
      "custom_severity": {
        "Type": "Int",
        "Optional": true,
        "Description": "Custom IOC feed - the column number of severity."
      },
      "custom_type": {
        "Type": "Int",
        "Optional": true,
        "Description": "Custom IOC feed - the column number of type in case a specific type is not chosen."
      },
      "custom_value": {
        "Type": "Int",
        "Optional": true,
        "Description": "Custom IOC feed - the column number of value in case a specific type is chosen."
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Sets whether this indicator feed is enabled.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "feed_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Feed type to be enforced.",
        "Default": {
          "Type": "string",
          "Value": "domain"
        }
      },
      "feed_url": {
        "Type": "String",
        "Optional": true,
        "Description": "URL of the feed. URL should be written as http or https."
      },
      "fields_delimiter": {
        "Type": "String",
        "Optional": true,
        "Description": "The delimiter that separates between the columns in the feed."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_lines_that_start_with": {
        "Type": "String",
        "Optional": true,
        "Description": "A prefix that will determine which lines to ignore."
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "password for authenticating with the URL."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "use_custom_feed_settings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Set in order to configure a custom indicator feed."
      },
      "use_gateway_proxy": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Use the gateway's proxy for retrieving the feed.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "username": {
        "Type": "String",
        "Optional": true,
        "Description": "username for authenticating with the URL."
      }
    },
    "checkpoint_management_threat_layer": {
      "add_default_rule": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether to include a default rule in the new layer.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_threat_profile": {
      "activate_protections_by_extended_attributes": {
        "Type": "List",
        "Description": "Activate protections by these extended attributes.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "category": {
              "Type": "String",
              "Optional": true,
              "Description": "IPS tag category name."
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "IPS tag name."
            },
            "uid": {
              "Type": "String",
              "Optional": true,
              "Description": "IPS tag unique identifier."
            },
            "values": {
              "Type": "List",
              "Description": "IPS protection extended attribute values",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Description": "Object name.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Object unique identifier.",
                    "Computed": true
                  }
                }
              }
            }
          }
        }
      },
      "active_protections_performance_impact": {
        "Type": "String",
        "Optional": true,
        "Description": "Protections with this performance impact only will be activated in the profile."
      },
      "active_protections_severity": {
        "Type": "String",
        "Optional": true,
        "Description": "Protections with this severity only will be activated in the profile."
      },
      "anti_bot": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Is Anti-Bot blade activated.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "anti_virus": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Is Anti-Virus blade activated.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "confidence_level_high": {
        "Type": "String",
        "Optional": true,
        "Description": "Action for protections with high confidence level.",
        "Default": {
          "Type": "string",
          "Value": "Prevent"
        }
      },
      "confidence_level_low": {
        "Type": "String",
        "Optional": true,
        "Description": "Action for protections with low confidence level.",
        "Default": {
          "Type": "string",
          "Value": "Detect"
        }
      },
      "confidence_level_medium": {
        "Type": "String",
        "Optional": true,
        "Description": "Action for protections with medium confidence level.",
        "Default": {
          "Type": "string",
          "Value": "Prevent"
        }
      },
      "deactivate_protections_by_extended_attributes": {
        "Type": "List",
        "Optional": true,
        "Description": "Deactivate protections by these extended attributes.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "category": {
              "Type": "String",
              "Optional": true,
              "Description": "IPS tag category name."
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "IPS tag name."
            },
            "uid": {
              "Type": "String",
              "Optional": true,
              "Description": "IPS tag unique identifier."
            },
            "values": {
              "Type": "List",
              "Description": "IPS protection extended attribute values",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Description": "Object name.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Object unique identifier.",
                    "Computed": true
                  }
                }
              }
            }
          }
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "indicator_overrides": {
        "Type": "List",
        "Optional": true,
        "Description": "Indicators whose action will be overridden in this profile.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Optional": true,
              "Description": "The indicator's action in this profile."
            },
            "indicator": {
              "Type": "String",
              "Optional": true,
              "Description": "The indicator whose action is to be overriden."
            }
          }
        }
      },
      "ips": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Is IPS blade activated.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "ips_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "IPS blade settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "malicious_mail_policy_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Malicious Mail Policy for MTA Gateways.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "overrides": {
        "Type": "List",
        "Optional": true,
        "Description": "Overrides per profile for this protection.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Required": true,
              "Description": "Protection action."
            },
            "capture_packets": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Capture packets."
            },
            "default": {
              "Type": "Map",
              "Description": "Default settings.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "final": {
              "Type": "Map",
              "Description": "Final settings.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "protection": {
              "Type": "String",
              "Required": true,
              "Description": "IPS protection identified by name."
            },
            "protection_external_info": {
              "Type": "Set",
              "Description": "Collection of industry reference (CVE).",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "protection_uid": {
              "Type": "String",
              "Description": "IPS protection unique identifier.",
              "Computed": true
            },
            "track": {
              "Type": "String",
              "Optional": true,
              "Description": "Tracking method for protection."
            }
          }
        }
      },
      "scan_malicious_links": {
        "Type": "Map",
        "Optional": true,
        "Description": "Scans malicious links (URLs) inside email messages.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "threat_emulation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Is Threat Emulation blade activated.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "use_extended_attributes": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to activate/deactivate IPS protections according to the extended attributes."
      },
      "use_indicators": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether the profile should make use of indicators.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      }
    },
    "checkpoint_management_threat_rule": {
      "action": {
        "Type": "String",
        "Optional": true,
        "Description": "Action-the enforced profile.",
        "Default": {
          "Type": "string",
          "Value": "Optimized"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "destination": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "destination_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for destination.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable/Disable the rule.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "exceptions": {
        "Type": "Set",
        "Description": "Collection of rule's exceptions identified by UID",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "install_on": {
        "Type": "Set",
        "Optional": true,
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that the rule belongs to identified by the name or UID."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Rule name."
      },
      "position": {
        "Type": "Map",
        "Required": true,
        "Description": "Position in the rulebase.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "protected_scope": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of objects defining Protected Scope identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "protected_scope_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for Protected Scope.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "service": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for service.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "source": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "source_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for source.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "track": {
        "Type": "String",
        "Optional": true,
        "Description": "Packet tracking.",
        "Default": {
          "Type": "string",
          "Value": "Log"
        }
      },
      "track_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Threat rule track settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_time": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "end": {
        "Type": "Map",
        "Optional": true,
        "Description": "End time. Note: Each gateway may interpret this time differently according to its time zone.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "end_never": {
        "Type": "Bool",
        "Optional": true,
        "Description": "End never.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "hours_ranges": {
        "Type": "List",
        "Optional": true,
        "Description": "Hours recurrence. Note: Each gateway may interpret this time differently according to its time zone.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "enabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Is hour range enabled."
            },
            "from": {
              "Type": "String",
              "Optional": true,
              "Description": "Time in format HH:MM."
            },
            "index": {
              "Type": "Int",
              "Optional": true,
              "Description": "Hour range index."
            },
            "to": {
              "Type": "String",
              "Optional": true,
              "Description": "Time in format HH:MM."
            }
          }
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "recurrence": {
        "Type": "List",
        "Optional": true,
        "Description": "Days recurrence.",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "days": {
              "Type": "Set",
              "Optional": true,
              "Description": "Valid on specific days. Multiple options, support range of days in months. Example:[\"1\",\"3\",\"9-20\"].",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "month": {
              "Type": "String",
              "Optional": true,
              "Description": "Valid on month. Example: \"1\", \"2\",\"12\",\"Any\"."
            },
            "pattern": {
              "Type": "String",
              "Optional": true,
              "Description": "Valid on \"Interval\", \"Daily\", \"Weekly\", \"Monthly\" base."
            },
            "weekdays": {
              "Type": "Set",
              "Optional": true,
              "Description": "Valid on weekdays. Example: \"Sun\", \"Mon\"...\"Sat\".",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "start": {
        "Type": "Map",
        "Optional": true,
        "Description": "Starting time. Note: Each gateway may interpret this time differently according to its time zone.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "start_now": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Start immediately.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_time_group": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "members": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Time Group objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_trusted_client": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "domains_assignment": {
        "Type": "Set",
        "Optional": true,
        "Description": "Domains to be added to this profile. Use domain name only. See example below: \"add-trusted-client (with domain)\".",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ipv4_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv4 address."
      },
      "ipv4_address_first": {
        "Type": "String",
        "Optional": true,
        "Description": "First IPv4 address in the range."
      },
      "ipv4_address_last": {
        "Type": "String",
        "Optional": true,
        "Description": "Last IPv4 address in the range."
      },
      "ipv6_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv6 address."
      },
      "ipv6_address_first": {
        "Type": "String",
        "Optional": true,
        "Description": "First IPv6 address in the range."
      },
      "ipv6_address_last": {
        "Type": "String",
        "Optional": true,
        "Description": "Last IPv6 address in the range."
      },
      "mask_length4": {
        "Type": "Int",
        "Optional": true,
        "Description": "IPv4 mask length."
      },
      "mask_length6": {
        "Type": "Int",
        "Optional": true,
        "Description": "IPv6 mask length."
      },
      "multi_domain_server_trusted_client": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Let this trusted client connect to all Multi-Domain Servers in the deployment.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "Trusted client type.",
        "Default": {
          "Type": "string",
          "Value": "ipv4 address"
        }
      },
      "wild_card": {
        "Type": "String",
        "Optional": true,
        "Description": "IP wild card (e.g. 192.0.2.*)."
      }
    },
    "checkpoint_management_uninstall_software_package": {
      "cluster_installation_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Installation settings for cluster.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "concurrency_limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "The number of targets, on which the same package is installed at the same time."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the software package."
      },
      "targets": {
        "Type": "Set",
        "Required": true,
        "Description": "On what targets to execute this command. Targets may be identified by their name, or object unique identifier.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_unlock_administrator": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      }
    },
    "checkpoint_management_update_provisioned_satellites": {
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      },
      "vpn_center_gateways": {
        "Type": "Set",
        "Required": true,
        "Description": "On what targets to execute this command. Targets may be identified by their name, or object unique identifier. The targets should be a corporate gateways.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_update_updatable_objects_repository_content": {
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_user": {
      "allowed_locations": {
        "Type": "Map",
        "Optional": true,
        "Description": "User allowed locations.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "authentication_method": {
        "Type": "String",
        "Optional": true,
        "Description": "Authentication method."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "connect_daily": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Connect every day."
      },
      "connect_on_days": {
        "Type": "Set",
        "Optional": true,
        "Description": "Days users allow to connect.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "email": {
        "Type": "String",
        "Optional": true,
        "Description": "User email."
      },
      "encryption": {
        "Type": "Map",
        "Optional": true,
        "Description": "User encryption.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "expiration_date": {
        "Type": "String",
        "Optional": true,
        "Description": "Expiration date in format: yyyy-MM-dd."
      },
      "from_hour": {
        "Type": "String",
        "Optional": true,
        "Description": "Allow users connect from hour."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "Checkpoint password authentication method identified by the name or UID. Must be set when \"authentication-method\" was selected to be \"Check Point Password\"."
      },
      "phone_number": {
        "Type": "String",
        "Optional": true,
        "Description": "User phone number."
      },
      "radius_server": {
        "Type": "String",
        "Optional": true,
        "Description": "RADIUS server object identified by the name or UID. Must be set when \"authentication-method\" was selected to be \"RADIUS\"."
      },
      "tacacs_server": {
        "Type": "String",
        "Optional": true,
        "Description": "TACACS server object identified by the name or UID. Must be set when \"authentication-method\" was selected to be \"TACACS\"."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "template": {
        "Type": "String",
        "Optional": true,
        "Description": "User template name or UID.",
        "Default": {
          "Type": "string",
          "Value": "Default"
        }
      },
      "to_hour": {
        "Type": "String",
        "Optional": true,
        "Description": "Allow users connect until hour."
      }
    },
    "checkpoint_management_user_group": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "email": {
        "Type": "String",
        "Optional": true,
        "Description": "Email Address."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "members": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of User Group objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_user_template": {
      "allowed_locations": {
        "Type": "Map",
        "Optional": true,
        "Description": "User allowed locations.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "authentication_method": {
        "Type": "String",
        "Optional": true,
        "Description": "Authentication method.",
        "Default": {
          "Type": "string",
          "Value": "undefined"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "connect_daily": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Connect every day.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "connect_on_days": {
        "Type": "Set",
        "Optional": true,
        "Description": "Days users allow to connect.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "encryption": {
        "Type": "Map",
        "Optional": true,
        "Description": "User encryption.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "expiration_by_global_properties": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Expiration date according to global properties."
      },
      "expiration_date": {
        "Type": "String",
        "Optional": true,
        "Description": "Expiration date in format: yyyy-MM-dd."
      },
      "from_hour": {
        "Type": "String",
        "Optional": true,
        "Description": "Allow users connect from hour.",
        "Default": {
          "Type": "string",
          "Value": "00:00"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "radius_server": {
        "Type": "String",
        "Optional": true,
        "Description": "RADIUS server object identified by the name or UID. Must be set when \"authentication-method\" was selected to be \"RADIUS\"."
      },
      "tacacs_server": {
        "Type": "String",
        "Optional": true,
        "Description": "TACACS server object identified by the name or UID. Must be set when \"authentication-method\" was selected to be \"TACACS\"."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "to_hour": {
        "Type": "String",
        "Optional": true,
        "Description": "Allow users connect until hour.",
        "Default": {
          "Type": "string",
          "Value": "23:59"
        }
      }
    },
    "checkpoint_management_verify_policy": {
      "policy_package": {
        "Type": "String",
        "Required": true,
        "Description": "Policy package identified by the name or UID."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_verify_revert": {
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      },
      "to_session": {
        "Type": "String",
        "Required": true,
        "Description": "Session unique identifier. Specify the session you would like to verify a revert operation to."
      }
    },
    "checkpoint_management_verify_software_package": {
      "concurrency_limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "The number of targets, on which the same package is installed at the same time."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the software package."
      },
      "targets": {
        "Type": "Set",
        "Required": true,
        "Description": "On what targets to execute this command. Targets may be identified by their name, or object unique identifier.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_vmware_data_center_server": {
      "certificate_fingerprint": {
        "Type": "String",
        "Optional": true,
        "Description": "Specify the SHA-1 or SHA-256 fingerprint of the Data Center Server's certificate."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "hostname": {
        "Type": "String",
        "Required": true,
        "Description": "IP Address or hostname of the vCenter server."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings. By Setting this parameter to 'true' test connection failure will be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the vCenter server."
      },
      "password_base64": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the vCenter server encoded in Base64."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "VMWare object type. nsx or nsxt or vcenter."
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "Username of the vCenter server"
      }
    },
    "checkpoint_management_vpn_community_meshed": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "encryption_method": {
        "Type": "String",
        "Optional": true,
        "Description": "The encryption method to be used."
      },
      "encryption_suite": {
        "Type": "String",
        "Optional": true,
        "Description": "The encryption suite to be used."
      },
      "gateways": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Gateway objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "granular_encryptions": {
        "Type": "List",
        "Optional": true,
        "Description": "VPN granular encryption settings.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "encryption_method": {
              "Type": "String",
              "Optional": true,
              "Description": "The encryption method to be used."
            },
            "encryption_suite": {
              "Type": "String",
              "Optional": true,
              "Description": "The encryption suite to be used."
            },
            "external_gateway": {
              "Type": "String",
              "Required": true,
              "Description": "Externally managed or 3rd party gateway identified by name or UID."
            },
            "ike_phase_1": {
              "Type": "Map",
              "Optional": true,
              "Description": "Ike Phase 1 settings. Only applicable when the encryption-suite is set to [custom].",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "ike_phase_2": {
              "Type": "Map",
              "Optional": true,
              "Description": "Ike Phase 2 settings. Only applicable when the encryption-suite is set to [custom].",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "internal_gateway": {
              "Type": "String",
              "Required": true,
              "Description": "Internally managed Check Point gateway identified by name or UID, or 'Any' for all internal-gateways participants in this community."
            }
          }
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ike_phase_1": {
        "Type": "Map",
        "Optional": true,
        "Description": "Ike Phase 1 settings. Only applicable when the encryption-suite is set to [custom].",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ike_phase_2": {
        "Type": "Map",
        "Optional": true,
        "Description": "Ike Phase 2 settings. Only applicable when the encryption-suite is set to [custom].",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "override_vpn_domains": {
        "Type": "List",
        "Optional": true,
        "Description": "The Overrides VPN Domains of the participants GWs.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "gateway": {
              "Type": "String",
              "Optional": true,
              "Description": "Participant gateway in override VPN domain identified by the name or UID."
            },
            "vpn_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "VPN domain network identified by the name or UID."
            }
          }
        }
      },
      "shared_secrets": {
        "Type": "List",
        "Optional": true,
        "Description": "Shared secrets for external gateways.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "external_gateway": {
              "Type": "String",
              "Optional": true,
              "Description": "External gateway identified by the name or UID."
            },
            "shared_secret": {
              "Type": "String",
              "Optional": true,
              "Description": "Shared secret."
            }
          }
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tunnel_granularity": {
        "Type": "String",
        "Optional": true,
        "Description": "VPN tunnel sharing option to be used."
      },
      "use_shared_secret": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether the shared secret should be used for all external gateways.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      }
    },
    "checkpoint_management_vpn_community_remote_access": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "gateways": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Gateway objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored."
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "user_groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of User group objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_vpn_community_star": {
      "center_gateways": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Gateway objects representing center gateways identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "encryption_method": {
        "Type": "String",
        "Optional": true,
        "Description": "The encryption method to be used."
      },
      "encryption_suite": {
        "Type": "String",
        "Optional": true,
        "Description": "The encryption suite to be used."
      },
      "granular_encryptions": {
        "Type": "List",
        "Optional": true,
        "Description": "VPN granular encryption settings.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "encryption_method": {
              "Type": "String",
              "Optional": true,
              "Description": "The encryption method to be used."
            },
            "encryption_suite": {
              "Type": "String",
              "Optional": true,
              "Description": "The encryption suite to be used."
            },
            "external_gateway": {
              "Type": "String",
              "Required": true,
              "Description": "Externally managed or 3rd party gateway identified by name or UID."
            },
            "ike_phase_1": {
              "Type": "Map",
              "Optional": true,
              "Description": "Ike Phase 1 settings. Only applicable when the encryption-suite is set to [custom].",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "ike_phase_2": {
              "Type": "Map",
              "Optional": true,
              "Description": "Ike Phase 2 settings. Only applicable when the encryption-suite is set to [custom].",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "internal_gateway": {
              "Type": "String",
              "Required": true,
              "Description": "Internally managed Check Point gateway identified by name or UID, or 'Any' for all internal-gateways participants in this community."
            }
          }
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ike_phase_1": {
        "Type": "Map",
        "Optional": true,
        "Description": "Ike Phase 1 settings. Only applicable when the encryption-suite is set to [custom].",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ike_phase_2": {
        "Type": "Map",
        "Optional": true,
        "Description": "Ike Phase 2 settings. Only applicable when the encryption-suite is set to [custom].",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "mesh_center_gateways": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether the meshed community is in center.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "override_vpn_domains": {
        "Type": "List",
        "Optional": true,
        "Description": "The Overrides VPN Domains of the participants GWs.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "gateway": {
              "Type": "String",
              "Optional": true,
              "Description": "Participant gateway in override VPN domain identified by the name or UID."
            },
            "vpn_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "VPN domain network identified by the name or UID."
            }
          }
        }
      },
      "satellite_gateways": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Gateway objects representing satellite gateways identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "shared_secrets": {
        "Type": "List",
        "Optional": true,
        "Description": "Shared secrets for external gateways.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "external_gateway": {
              "Type": "String",
              "Optional": true,
              "Description": "External gateway identified by the name or UID."
            },
            "shared_secret": {
              "Type": "String",
              "Optional": true,
              "Description": "Shared secret."
            }
          }
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tunnel_granularity": {
        "Type": "String",
        "Optional": true,
        "Description": "VPN tunnel sharing option to be used."
      },
      "use_shared_secret": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether the shared secret should be used for all external gateways.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      }
    },
    "checkpoint_management_where_used": {
      "dereference_group_members": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether to dereference \"members\" field by details level for every object in reply."
      },
      "indirect": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Search for indirect usage."
      },
      "indirect_max_depth": {
        "Type": "Int",
        "Optional": true,
        "Description": "Maximum nesting level during indirect usage search."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "show_membership": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether to calculate and show \"groups\" field for every object in reply."
      }
    },
    "checkpoint_management_wildcard": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ipv4_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv4 address."
      },
      "ipv4_mask_wildcard": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv4 mask wildcard."
      },
      "ipv6_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv6 address."
      },
      "ipv6_mask_wildcard": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv6 mask wildcard."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_physical_interface": {
      "auto_negotiation": {
        "Type": "String",
        "Optional": true,
        "Description": "Activating auto_negotiation will skip the speed and duplex configuration",
        "Default": {
          "Type": "string",
          "Value": "Not-Configured"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "comments"
      },
      "duplex": {
        "Type": "String",
        "Optional": true,
        "Description": "Duplex is not relevant when 'auto_negotiation' is enabled.",
        "Default": {
          "Type": "string",
          "Value": "Not-Configured"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true
      },
      "ipv4_address": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Not-Configured"
        }
      },
      "ipv4_mask_length": {
        "Type": "Int",
        "Optional": true
      },
      "ipv6_address": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Not-Configured"
        }
      },
      "ipv6_autoconfig": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Not-Configured"
        }
      },
      "ipv6_mask_length": {
        "Type": "Int",
        "Optional": true
      },
      "mac_addr": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Not-Configured"
        }
      },
      "monitor_mode": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Not-Configured"
        }
      },
      "mtu": {
        "Type": "Int",
        "Optional": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "interface name"
      },
      "rx_ringsize": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Not-Configured"
        }
      },
      "speed": {
        "Type": "String",
        "Optional": true,
        "Description": "Speed is not relevant when 'auto_negotiation' is enabled",
        "Default": {
          "Type": "string",
          "Value": "Not-Configured"
        }
      },
      "tx_ringsize": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Not-Configured"
        }
      }
    },
    "checkpoint_put_file": {
      "file_name": {
        "Type": "String",
        "Required": true,
        "Description": "Filename include the desired path. The file will be created in the user home directory if the full path wasn't provided"
      },
      "override": {
        "Type": "Bool",
        "Optional": true,
        "Description": "comments"
      },
      "text_content": {
        "Type": "String",
        "Required": true
      }
    }
  },
  "data-sources": {
    "checkpoint_management_access_point_name": {
      "apn": {
        "Type": "String",
        "Description": "APN name.",
        "Computed": true
      },
      "block_traffic_other_end_user_domains": {
        "Type": "Bool",
        "Description": "Block MS to MS traffic between this and other APN end user domains.",
        "Computed": true
      },
      "block_traffic_this_end_user_domain": {
        "Type": "Bool",
        "Description": "Block MS to MS traffic within this end user domain.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "end_user_domain": {
        "Type": "String",
        "Description": "End user domain name or UID.",
        "Computed": true
      },
      "enforce_end_user_domain": {
        "Type": "Bool",
        "Description": "Enable enforce end user domain.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_access_rulebase": {
      "dereference_group_members": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When true, the source, destination and services \u0026 applications parameters are displayed as ranges of IP addresses and port numbers rather than network objects.\nObjects that are not represented using IP addresses or port numbers are presented as objects.\nIn addition, the response of each rule does not contain the parameters: source, source-negate, destination, destination-negate, service and service-negate, but instead it contains the parameters: source-ranges, destination-ranges and service-ranges.\n\nNote: Requesting to show rules as ranges is limited up to 20 rules per request, otherwise an error is returned. If you wish to request more rules, use the offset and limit parameters to limit your request.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "filter": {
        "Type": "String",
        "Optional": true,
        "Description": "Search expression to filter the rulebase. The provided text should be exactly the same as it would be given in Smart Console. The logical operators in the expression ('AND', 'OR') should be provided in capital letters. If an operator is not used, the default OR operator applies."
      },
      "filter_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Sets filter preferences.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hits_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "N/A",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximal number of returned results.",
        "Default": {
          "Type": "int",
          "Value": "50"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "offset": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of the results to initially skip.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "order": {
        "Type": "List",
        "Optional": true,
        "Description": "Sorts the results by search criteria. Automatically sorts the results by Name, in the ascending order.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "asc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in ascending order."
            },
            "desc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in descending order."
            }
          }
        }
      },
      "package": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the package."
      },
      "rulebase": {
        "Type": "List",
        "Description": "The show rulebase api reply",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "from": {
              "Type": "Int",
              "Description": "From which element number the query was done.",
              "Computed": true
            },
            "objects_dictionary": {
              "Type": "List",
              "Description": "Level of details in the output corresponds to the number of details for search. This table shows the level of details in the Standard level.",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Description": "Object name. Must be unique in the domain",
                    "Computed": true
                  },
                  "type": {
                    "Type": "String",
                    "Description": "Object type.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Object unique identifier.",
                    "Computed": true
                  }
                }
              }
            },
            "rulebase": {
              "Type": "List",
              "Description": "N/A",
              "Computed": true,
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action": {
                    "Type": "String",
                    "Description": "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User Auth\", \"Client Auth\", \"Apply Layer\".",
                    "Computed": true
                  },
                  "action_settings": {
                    "Type": "Map",
                    "Description": "Action settings.",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "comments": {
                    "Type": "String",
                    "Description": "Comments string.",
                    "Computed": true
                  },
                  "content": {
                    "Type": "Set",
                    "Description": "List of processed file types that this rule applies on.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "content_direction": {
                    "Type": "String",
                    "Description": "On which direction the file types processing is applied.",
                    "Computed": true
                  },
                  "content_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for data.",
                    "Computed": true
                  },
                  "custom_fields": {
                    "Type": "Map",
                    "Description": "Custom fields.",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "destination": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "destination_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for destination.",
                    "Computed": true
                  },
                  "enabled": {
                    "Type": "Bool",
                    "Description": "Enable/Disable the rule.",
                    "Computed": true
                  },
                  "from": {
                    "Type": "Int",
                    "Description": "From which element number the query was done.",
                    "Computed": true
                  },
                  "inline_layer": {
                    "Type": "String",
                    "Description": "Inline Layer identified by the name or UID. Relevant only if \"Action\" was set to \"Apply Layer\".",
                    "Computed": true
                  },
                  "install_on": {
                    "Type": "List",
                    "Description": "Which Gateways identified by the name or UID to install the policy on.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "name": {
                    "Type": "String",
                    "Description": "Rules name.",
                    "Computed": true
                  },
                  "rule_number": {
                    "Type": "Int",
                    "Description": "Number of the rule.",
                    "Computed": true
                  },
                  "rulebase": {
                    "Type": "List",
                    "Description": "N/A",
                    "Computed": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "ComputedBlock",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "action": {
                          "Type": "String",
                          "Description": "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User Auth\", \"Client Auth\", \"Apply Layer\".",
                          "Computed": true
                        },
                        "action_settings": {
                          "Type": "Map",
                          "Description": "Action settings.",
                          "Computed": true,
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "comments": {
                          "Type": "String",
                          "Description": "Comments string.",
                          "Computed": true
                        },
                        "content": {
                          "Type": "Set",
                          "Description": "List of processed file types that this rule applies on.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "content_direction": {
                          "Type": "String",
                          "Description": "On which direction the file types processing is applied.",
                          "Computed": true
                        },
                        "content_negate": {
                          "Type": "Bool",
                          "Description": "True if negate is set for data.",
                          "Computed": true
                        },
                        "custom_fields": {
                          "Type": "Map",
                          "Description": "Custom fields.",
                          "Computed": true,
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "destination": {
                          "Type": "List",
                          "Description": "Collection of Network objects identified by the name or UID.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        },
                        "destination_negate": {
                          "Type": "Bool",
                          "Description": "True if negate is set for destination.",
                          "Computed": true
                        },
                        "enabled": {
                          "Type": "Bool",
                          "Description": "Enable/Disable the rule.",
                          "Computed": true
                        },
                        "inline_layer": {
                          "Type": "String",
                          "Description": "Inline Layer identified by the name or UID. Relevant only if \"Action\" was set to \"Apply Layer\".",
                          "Computed": true
                        },
                        "install_on": {
                          "Type": "List",
                          "Description": "Which Gateways identified by the name or UID to install the policy on.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        },
                        "name": {
                          "Type": "String",
                          "Description": "Rules name.",
                          "Computed": true
                        },
                        "rule_number": {
                          "Type": "Int",
                          "Description": "Number of the rule.",
                          "Computed": true
                        },
                        "service": {
                          "Type": "List",
                          "Description": "Collection of Network objects identified by the name or UID.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        },
                        "service_negate": {
                          "Type": "Bool",
                          "Description": "True if negate is set for service.",
                          "Computed": true
                        },
                        "service_resource": {
                          "Type": "String",
                          "Description": "service resource.",
                          "Computed": true
                        },
                        "source": {
                          "Type": "List",
                          "Description": "Collection of Network objects identified by the name or UID.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        },
                        "source_negate": {
                          "Type": "Bool",
                          "Description": "True if negate is set for source.",
                          "Computed": true
                        },
                        "time": {
                          "Type": "Set",
                          "Description": "List of time objects. For example: \"Weekend\", \"Off-Work\", \"Every-Day\".",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "track": {
                          "Type": "Map",
                          "Description": "Track Settings.",
                          "Computed": true,
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "type": {
                          "Type": "String",
                          "Description": "Rules type.",
                          "Computed": true
                        },
                        "uid": {
                          "Type": "String",
                          "Description": "Rules uid.",
                          "Computed": true
                        },
                        "vpn": {
                          "Type": "List",
                          "Description": "Communities or Directional.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        }
                      }
                    }
                  },
                  "service": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "service_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for service.",
                    "Computed": true
                  },
                  "service_resource": {
                    "Type": "String",
                    "Description": "service resource.",
                    "Computed": true
                  },
                  "source": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "source_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for source.",
                    "Computed": true
                  },
                  "time": {
                    "Type": "Set",
                    "Description": "List of time objects. For example: \"Weekend\", \"Off-Work\", \"Every-Day\".",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "to": {
                    "Type": "Int",
                    "Description": "To which element number the query was done.",
                    "Computed": true
                  },
                  "track": {
                    "Type": "Map",
                    "Description": "Track Settings.",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "type": {
                    "Type": "String",
                    "Description": "Rules type.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Rules uid.",
                    "Computed": true
                  },
                  "vpn": {
                    "Type": "List",
                    "Description": "Communities or Directional.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  }
                }
              }
            },
            "to": {
              "Type": "Int",
              "Description": "To which element number the query was done.",
              "Computed": true
            },
            "total": {
              "Type": "Int",
              "Description": "Total number of elements returned by the query.",
              "Computed": true
            }
          }
        }
      },
      "show_as_ranges": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When true, the source, destination and services \u0026 applications parameters are displayed as ranges of IP addresses and port numbers rather than network objects.\nObjects that are not represented using IP addresses or port numbers are presented as objects.\nIn addition, the response of each rule does not contain the parameters: source, source-negate, destination, destination-negate, service and service-negate, but instead it contains the parameters: source-ranges, destination-ranges and service-ranges.\n\nNote: Requesting to show rules as ranges is limited up to 20 rules per request, otherwise an error is returned. If you wish to request more rules, use the offset and limit parameters to limit your request.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "show_hits": {
        "Type": "Bool",
        "Optional": true,
        "Description": "N/A"
      },
      "show_membership": {
        "Type": "Bool",
        "Optional": true,
        "Description": "N/A",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_aci_data_center_server": {
      "certificate_fingerprint": {
        "Type": "String",
        "Description": "Specify the SHA-1 or SHA-256 fingerprint of the Data Center Server's certificate.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Computed": true
      },
      "urls": {
        "Type": "List",
        "Description": "Address of APIC cluster members.\nExample: http(s)://\u003chost1 ip/url\u003e.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "username": {
        "Type": "String",
        "Description": "User ID of the Cisco APIC server.\nWhen using commonLoginLogic Domains use the following syntax:\napic:\u003cdomain\u003e\\\u003cusername\u003e.",
        "Computed": true
      }
    },
    "checkpoint_management_api_settings": {
      "accepted_api_calls_from": {
        "Type": "String",
        "Description": "Clients allowed to connect to the API Server.",
        "Computed": true
      },
      "automatic_start": {
        "Type": "Bool",
        "Description": "MGMT API will start after server will start.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "Object name. Must be unique in the domain.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "type": {
        "Type": "String",
        "Description": "Object type.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Description": "Object unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_automatic_purge": {
      "enabled": {
        "Type": "Bool",
        "Description": "Turn on/off the automatic-purge feature.",
        "Computed": true
      },
      "keep_sessions_by_count": {
        "Type": "Bool",
        "Description": "Whether or not to keep the latest N sessions.",
        "Computed": true
      },
      "keep_sessions_by_days": {
        "Type": "Bool",
        "Description": "Whether or not to keep the sessions for D days.",
        "Computed": true
      },
      "number_of_days_to_keep": {
        "Type": "Int",
        "Description": "When \"keep-sessions-by-days = true\" this sets the number of days to keep the sessions.",
        "Computed": true
      },
      "number_of_sessions_to_keep": {
        "Type": "Int",
        "Description": "The number of newest sessions to preserve, by the sessions's publish date.",
        "Computed": true
      },
      "scheduling": {
        "Type": "List",
        "Description": "When to purge sessions that do not meet the \"keep\" criteria. Note: when the automatic purge feature is enabled, this field must be set.",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "check_interval": {
              "Type": "Int",
              "Description": "Number of time-units between two purge checks.  Note: when the automatic purge feature is enabled, this field must be set.",
              "Computed": true
            },
            "last_check": {
              "Type": "String",
              "Description": "Last time purge check was executed.",
              "Computed": true
            },
            "next_check": {
              "Type": "String",
              "Description": "Next time purge check will be executed.",
              "Computed": true
            },
            "start_date": {
              "Type": "String",
              "Description": "The first time to check whether or not there are sessions to purge. ISO 8601. If timezone isn't specified in the input, the Management server's timezone is used. Instead - If you want to start immediately, type: \"now\". Note: when the automatic purge feature is enabled, this field must be set.",
              "Computed": true
            },
            "time_units": {
              "Type": "String",
              "Description": "Note: when the automatic purge feature is enabled, this field must be set.",
              "Computed": true
            }
          }
        }
      }
    },
    "checkpoint_management_aws_data_center_server": {
      "access_key_id": {
        "Type": "String",
        "Description": "Access key ID for the AWS account.\nRequired for authentication-method: user-authentication.",
        "Computed": true
      },
      "authentication_method": {
        "Type": "String",
        "Description": "user-authentication\nUses the Access keys to authenticate.\nrole-authentication\nUses the AWS IAM role to authenticate.\nThis option requires the Security Management Server be deployed in AWS and has an IAM Role.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Computed": true
      },
      "enable_sts_assume_role": {
        "Type": "Bool",
        "Description": "Enables the STS Assume Role option. After it is enabled, the sts-role field is mandatory, whereas the sts-external-id is optional.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "region": {
        "Type": "String",
        "Description": "Select the AWS region.",
        "Computed": true
      },
      "sts_external_id": {
        "Type": "String",
        "Description": "An optional STS External-Id to use when assuming the role.",
        "Computed": true
      },
      "sts_role": {
        "Type": "String",
        "Description": "The STS RoleARN of the role to be assumed.\nRequired for enable-sts-assume-role: true.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_azure_data_center_server": {
      "application_id": {
        "Type": "String",
        "Description": "The Application ID of the Service Principal, in UUID format.\nRequired for authentication-method: service-principal-authentication.",
        "Computed": true
      },
      "authentication_method": {
        "Type": "String",
        "Description": "user-authentication\nUses the Azure AD User to authenticate.\nservice-principal-authentication\nUses the Service Principal to authenticate.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Computed": true
      },
      "directory_id": {
        "Type": "String",
        "Description": "The Directory ID of the Azure AD, in UUID format.\nRequired for authentication-method: service-principal-authentication.",
        "Computed": true
      },
      "environment": {
        "Type": "String",
        "Description": "Select the Azure Cloud Environment.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "username": {
        "Type": "String",
        "Description": "An Azure Active Directory user Format \u003cusername\u003e@\u003cdomain\u003e.\nRequired for authentication-method: user-authentication.",
        "Computed": true
      }
    },
    "checkpoint_management_checkpoint_host": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "hardware": {
        "Type": "String",
        "Description": "Hardware name.",
        "Computed": true
      },
      "interfaces": {
        "Type": "List",
        "Description": "Checkpoint host interfaces.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "color": {
              "Type": "String",
              "Description": "Color of the object. Should be one of existing colors.",
              "Computed": true
            },
            "comments": {
              "Type": "String",
              "Description": "Comments string.",
              "Computed": true
            },
            "mask_length4": {
              "Type": "Int",
              "Description": "IPv4 network mask length.",
              "Computed": true
            },
            "mask_length6": {
              "Type": "Int",
              "Description": "IPv6 network mask length.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Interface name.",
              "Computed": true
            },
            "subnet4": {
              "Type": "String",
              "Description": "IPv4 network address.",
              "Computed": true
            },
            "subnet6": {
              "Type": "String",
              "Description": "IPv6 network address.",
              "Computed": true
            },
            "subnet_mask": {
              "Type": "String",
              "Description": "IPv4 network mask.",
              "Computed": true
            }
          }
        }
      },
      "ipv4_address": {
        "Type": "String",
        "Description": "IPv4 address.",
        "Computed": true
      },
      "ipv6_address": {
        "Type": "String",
        "Description": "IPv6 address.",
        "Computed": true
      },
      "logs_settings": {
        "Type": "Map",
        "Description": "Logs settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "management_blades": {
        "Type": "Map",
        "Optional": true,
        "Description": "Management blades.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "nat_settings": {
        "Type": "Map",
        "Description": "NAT settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "os": {
        "Type": "String",
        "Description": "Operating system name.",
        "Computed": true
      },
      "save_logs_locally": {
        "Type": "Bool",
        "Description": "Enable save logs locally.",
        "Computed": true
      },
      "send_alerts_to_server": {
        "Type": "Set",
        "Description": "Collection of Server(s) to send alerts to identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_backup_server": {
        "Type": "Set",
        "Description": "Collection of Backup server(s) to send logs to identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_server": {
        "Type": "Set",
        "Description": "Collection of Server(s) to send logs to identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "sic_name": {
        "Type": "String",
        "Description": "Name of the Secure Internal Connection Trust.",
        "Computed": true
      },
      "sic_state": {
        "Type": "String",
        "Description": "State the Secure Internal Connection Trust.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "version": {
        "Type": "String",
        "Description": "Checkpoint host platform version.",
        "Computed": true
      }
    },
    "checkpoint_management_cloud_services": {
      "connected_at": {
        "Type": "Map",
        "Description": "The time of the connection between the Management Server and the Infinity Portal.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "management_url": {
        "Type": "String",
        "Description": "The Management Server's public URL.",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "Status of the connection to the Infinity Portal.",
        "Computed": true
      }
    },
    "checkpoint_management_cluster_member": {
      "cluster_uid": {
        "Type": "String",
        "Description": "Cluster object (the owner of this member) uid.",
        "Computed": true
      },
      "interfaces": {
        "Type": "List",
        "Description": "Cluster member network interfaces.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ipv4_address": {
              "Type": "String",
              "Description": "IPv4 address.",
              "Computed": true
            },
            "ipv4_mask_length": {
              "Type": "Int",
              "Description": "IPv4 network mask length.",
              "Computed": true
            },
            "ipv4_network_mask": {
              "Type": "String",
              "Description": "IPv4 network mask.",
              "Computed": true
            },
            "ipv6_address": {
              "Type": "String",
              "Description": "IPv6 address.",
              "Computed": true
            },
            "ipv6_mask_length": {
              "Type": "Int",
              "Description": "IPv6 network mask length.",
              "Computed": true
            },
            "ipv6_network_mask": {
              "Type": "String",
              "Description": "IPv6 network mask.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Cluster member interface name.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "Cluster member interface object UID.",
              "Computed": true
            }
          }
        }
      },
      "ip_address": {
        "Type": "String",
        "Description": "Cluster member IP address.",
        "Computed": true
      },
      "ipv6_address": {
        "Type": "String",
        "Description": "Cluster member IPv6 address.",
        "Computed": true
      },
      "limit_interfaces": {
        "Type": "String",
        "Optional": true,
        "Description": "Limit number of cluster member interfaces to show.",
        "Default": {
          "Type": "int",
          "Value": "50"
        }
      },
      "name": {
        "Type": "String",
        "Description": "N/A",
        "Computed": true
      },
      "nat_settings": {
        "Type": "Map",
        "Description": "NAT settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "priority": {
        "Type": "Int",
        "Description": "In a High Availability New mode cluster each machine is given a priority. The highest priority machine serves as the gateway in normal circumstances. If this machine fails, control is passed to the next highest priority machine. If that machine fails, control is passed to the next machine, and so on. In Load Sharing Unicast mode cluster, the highest priority is the pivot machine. The values must be in a range from 1 to N, where N is number of cluster members.",
        "Computed": true
      },
      "sic_message": {
        "Type": "String",
        "Description": "Secure Internal Communication message.",
        "Computed": true
      },
      "sic_state": {
        "Type": "String",
        "Description": "Secure Internal Communication state.",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Description": "Object type.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Required": true,
        "Description": "Cluster member unique identifier."
      }
    },
    "checkpoint_management_data_access_layer": {
      "applications_and_url_filtering": {
        "Type": "Bool",
        "Description": "Whether to enable Applications \u0026 URL Filtering blade on the layer.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "content_awareness": {
        "Type": "Bool",
        "Description": "Whether to enable Content Awareness blade on the layer.",
        "Computed": true
      },
      "detect_using_x_forward_for": {
        "Type": "Bool",
        "Description": "Whether to use X-Forward-For HTTP header, which is added by the  proxy server to keep track of the original source IP.",
        "Computed": true
      },
      "firewall": {
        "Type": "Bool",
        "Description": "Whether to enable Firewall blade on the layer.",
        "Computed": true
      },
      "implicit_cleanup_action": {
        "Type": "String",
        "Description": "The default \"catch-all\" action for traffic that does not match any explicit or implied rules in the layer.",
        "Computed": true
      },
      "mobile_access": {
        "Type": "Bool",
        "Description": "Whether to enable Mobile Access blade on the layer.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "shared": {
        "Type": "Bool",
        "Description": "Whether this layer is shared.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_access_role": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "machines": {
        "Type": "List",
        "Description": "Machines that can access the system.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "base_dn": {
              "Type": "String",
              "Description": "When source is \"Active Directory\" use \"base-dn\" to refine the query in AD database.",
              "Computed": true
            },
            "selection": {
              "Type": "Set",
              "Description": "Name or UID of an object selected from source.",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "source": {
              "Type": "String",
              "Description": "Active Directory name or UID or Identity Tag.",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "networks": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID that can access the system.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "remote_access_clients": {
        "Type": "String",
        "Description": "Remote access clients identified by name or UID.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "users": {
        "Type": "List",
        "Description": "Users that can access the system.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "base_dn": {
              "Type": "String",
              "Description": "When source is \"Active Directory\" use \"base-dn\" to refine the query in AD database.",
              "Computed": true
            },
            "selection": {
              "Type": "Set",
              "Description": "Name or UID of an object selected from source.",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "source": {
              "Type": "String",
              "Description": "Active Directory name or UID or Identity Tag  or Internal User Groups or LDAP groups or Guests.",
              "Computed": true
            }
          }
        }
      }
    },
    "checkpoint_management_data_access_rule": {
      "action": {
        "Type": "String",
        "Description": "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User Auth\", \"Client Auth\", \"Apply Layer\".",
        "Computed": true
      },
      "action_settings": {
        "Type": "Map",
        "Description": "Action settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "content": {
        "Type": "Set",
        "Description": "List of processed file types that this rule applies on.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "content_direction": {
        "Type": "String",
        "Description": "On which direction the file types processing is applied.",
        "Computed": true
      },
      "content_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for data.",
        "Computed": true
      },
      "custom_fields": {
        "Type": "Map",
        "Description": "Custom fields.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "destination": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "destination_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for destination.",
        "Computed": true
      },
      "enabled": {
        "Type": "Bool",
        "Description": "Enable/Disable the rule.",
        "Computed": true
      },
      "inline_layer": {
        "Type": "String",
        "Description": "Inline Layer identified by the name or UID. Relevant only if \"Action\" was set to \"Apply Layer\".",
        "Computed": true
      },
      "install_on": {
        "Type": "Set",
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that the rule belongs to identified by the name or UID."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "service": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for service.",
        "Computed": true
      },
      "source": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "source_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for source.",
        "Computed": true
      },
      "time": {
        "Type": "Set",
        "Description": "List of time objects. For example: \"Weekend\", \"Off-Work\", \"Every-Day\".",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "track": {
        "Type": "Map",
        "Description": "Track Settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "user_check": {
        "Type": "List",
        "Description": "User check settings.",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "confirm": {
              "Type": "String",
              "Description": "N/A",
              "Computed": true
            },
            "custom_frequency": {
              "Type": "List",
              "Description": "N/A",
              "Computed": true,
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "every": {
                    "Type": "Int",
                    "Description": "N/A",
                    "Computed": true
                  },
                  "unit": {
                    "Type": "String",
                    "Description": "N/A",
                    "Computed": true
                  }
                }
              }
            },
            "frequency": {
              "Type": "String",
              "Description": "N/A",
              "Computed": true
            },
            "interaction": {
              "Type": "String",
              "Description": "N/A",
              "Computed": true
            }
          }
        }
      },
      "vpn": {
        "Type": "String",
        "Description": "Communities or Directional.",
        "Computed": true
      }
    },
    "checkpoint_management_data_access_section": {
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that the rule belongs to identified by the name or UID."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_address_range": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ipv4_address_first": {
        "Type": "String",
        "Description": "First IPv4 address in the range.",
        "Computed": true
      },
      "ipv4_address_last": {
        "Type": "String",
        "Description": "Last IPv4 address in the range.",
        "Computed": true
      },
      "ipv6_address_first": {
        "Type": "String",
        "Description": "First IPv6 address in the range.",
        "Computed": true
      },
      "ipv6_address_last": {
        "Type": "String",
        "Description": "Last IPv6 address in the range.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "nat_settings": {
        "Type": "Map",
        "Description": "NAT settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_application_site": {
      "additional_categories": {
        "Type": "Set",
        "Description": "Used to configure or edit the additional categories of a custom application / site used in the Application and URL Filtering or Threat Prevention.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "application_signature": {
        "Type": "String",
        "Description": "Application signature generated by \u003ca href=\"https://supportcenter.checkpoint.com/supportcenter/portal?eventSubmit_doGoviewsolutiondetails=\u0026solutionid=sk103051\"\u003eSignature Tool\u003c/a\u003e.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "A description for the application.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "primary_category": {
        "Type": "String",
        "Description": "Each application is assigned to one primary category based on its most defining aspect.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "url_list": {
        "Type": "Set",
        "Description": "URLs that determine this particular application.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "urls_defined_as_regular_expression": {
        "Type": "Bool",
        "Description": "States whether the URL is defined as a Regular Expression or not.",
        "Computed": true
      }
    },
    "checkpoint_management_data_application_site_category": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "N/A",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_application_site_group": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "members": {
        "Type": "Set",
        "Description": "Collection of application and URL filtering objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_center_content": {
      "data_center_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the Data Center Server where to search for objects."
      },
      "data_center_uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique identifier of the Data Center Server where to search for objects."
      },
      "filter": {
        "Type": "Map",
        "Optional": true,
        "Description": "Return results matching the specified filter.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "from": {
        "Type": "Int",
        "Description": "From which element number the query was done.",
        "Computed": true
      },
      "limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximal number of returned results.",
        "Default": {
          "Type": "int",
          "Value": "50"
        }
      },
      "objects": {
        "Type": "List",
        "Description": "Remote objects views.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "additional_properties": {
              "Type": "Map",
              "Description": "Additional properties on the object.\nRemote objects views.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "data_center_object": {
              "Type": "Map",
              "Description": "The imported management object (if exists). Level of details in the output corresponds to the number of details for search. This table shows the level of details in the Standard level.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Description": "Object management name.",
              "Computed": true
            },
            "name_in_data_center": {
              "Type": "String",
              "Description": "Object name in the Data Center.",
              "Computed": true
            },
            "type_in_data_center": {
              "Type": "String",
              "Description": "Object type in Data Center.",
              "Computed": true
            },
            "uid_in_data_center": {
              "Type": "String",
              "Description": "Unique identifier of the object in the Data Center.",
              "Computed": true
            }
          }
        }
      },
      "offset": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of the results to initially skip.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "order": {
        "Type": "List",
        "Optional": true,
        "Description": "Sorts the results by search criteria. Automatically sorts the results by Name, in the ascending order.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "asc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in ascending order."
            },
            "desc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in descending order."
            }
          }
        }
      },
      "to": {
        "Type": "Int",
        "Description": "To which element number the query was done.",
        "Computed": true
      },
      "total": {
        "Type": "Int",
        "Description": "Total number of elements returned by the query.",
        "Computed": true
      },
      "uid_in_data_center": {
        "Type": "String",
        "Optional": true,
        "Description": "Return result matching the unique identifier of the object on the Data Center Server."
      }
    },
    "checkpoint_management_data_center_query": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "data_centers": {
        "Type": "List",
        "Description": "Collection of Data Center servers identified by the name or UID. Use \"All\" to select all data centers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "query_rules": {
        "Type": "List",
        "Description": "Data Center Query Rules.\u003cbr\u003eThere is an 'AND' operation between multiple Query Rules.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "key": {
              "Type": "String",
              "Optional": true,
              "Description": "Defines in which Data Center property to query.\u003cbr\u003eFor key-type \"predefined\", use these keys: type-in-data-center, name-in-data-center, and ip-address.\u003cbr\u003eFor key-type \"tag\", use the Data Center tag key to query.\u003cbr\u003eKeys are case-insensitive."
            },
            "key_type": {
              "Type": "String",
              "Optional": true,
              "Description": "The type of the \"key\" parameter.\u003cbr\u003eUse \"predefined\" for these keys: type-in-data-center, name-in-data-center, and ip-address.\u003cbr\u003eUse \"tag\" to query the Data Center tag�s property."
            },
            "values": {
              "Type": "List",
              "Optional": true,
              "Description": "The value(s) of the Data Center property to match the Query Rule.\u003cbr\u003eValues are case-insensitive.\u003cbr\u003eThere is an 'OR' operation between multiple values.\u003cbr\u003eFor key-type \"predefined\" and key 'ip-address', the values must be an IPv4 or IPv6 address.\u003cbr\u003eFor key-type \"tag\", the values must be the Data Center tag values.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_dns_domain": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "is_sub_domain": {
        "Type": "Bool",
        "Description": "Whether to match sub-domains in addition to the domain itself.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_dynamic_object": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_exception_group": {
      "applied_profile": {
        "Type": "String",
        "Description": "The threat profile to apply this group to in the case of apply-on threat-rules-with-specific-profile.",
        "Computed": true
      },
      "apply_on": {
        "Type": "String",
        "Description": "An exception group can be set to apply on all threat rules, all threat rules which have a specific profile, or those rules manually chosen by the user.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_group": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group name.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "members": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_group_with_exclusion": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "except": {
        "Type": "String",
        "Description": "Name or UID of an object which the group excludes.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "include": {
        "Type": "String",
        "Description": "Name or UID of an object which the group includes.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_host": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "host_servers": {
        "Type": "List",
        "Description": "Servers Configuration.",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dns_server": {
              "Type": "Bool",
              "Description": "Gets True if this server is a DNS Server.",
              "Computed": true
            },
            "mail_server": {
              "Type": "Bool",
              "Description": "Gets True if this server is a Mail Server.",
              "Computed": true
            },
            "web_server": {
              "Type": "Bool",
              "Description": "Gets True if this server is a Web Server.",
              "Computed": true
            },
            "web_server_config": {
              "Type": "List",
              "Description": "Web Server configuration.",
              "Computed": true,
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "additional_ports": {
                    "Type": "Set",
                    "Description": "Server additional ports.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "application_engines": {
                    "Type": "Set",
                    "Description": "Application engines of this web server.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "listen_standard_port": {
                    "Type": "Bool",
                    "Description": "Whether server listens to standard port.",
                    "Computed": true
                  },
                  "operating_system": {
                    "Type": "String",
                    "Description": "Operating System.",
                    "Computed": true
                  },
                  "protected_by": {
                    "Type": "String",
                    "Description": "Network object which protects this server identified by the name or UID.",
                    "Computed": true
                  }
                }
              }
            }
          }
        }
      },
      "interfaces": {
        "Type": "List",
        "Description": "Host interfaces.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "color": {
              "Type": "String",
              "Description": "Color of the object. Should be one of existing colors.",
              "Computed": true
            },
            "comments": {
              "Type": "String",
              "Description": "Comments string.",
              "Computed": true
            },
            "mask_length4": {
              "Type": "Int",
              "Description": "IPv4 network mask length.",
              "Computed": true
            },
            "mask_length6": {
              "Type": "Int",
              "Description": "IPv6 network mask length.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Object name. Should be unique in the domain.",
              "Computed": true
            },
            "subnet4": {
              "Type": "String",
              "Description": "IPv4 network address.",
              "Computed": true
            },
            "subnet6": {
              "Type": "String",
              "Description": "IPv6 network address.",
              "Computed": true
            }
          }
        }
      },
      "ipv4_address": {
        "Type": "String",
        "Description": "IPv4 address.",
        "Computed": true
      },
      "ipv6_address": {
        "Type": "String",
        "Description": "IPv6 address.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "nat_settings": {
        "Type": "Map",
        "Description": "NAT settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_https_layer": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "shared": {
        "Type": "Bool",
        "Description": "Define the Layer as Shared (TRUE/FALSE).",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_https_rule": {
      "action": {
        "Type": "String",
        "Description": "Rule inspect level. \"Bypass\" or \"Inspect\".",
        "Computed": true
      },
      "blade": {
        "Type": "Set",
        "Description": "Blades for HTTPS Inspection. Identified by Name or UID to enable the inspection for. \"Anti Bot\",\"Anti Virus\",\"Application Control\",\"Data Awareness\",\"DLP\",\"IPS\",\"Threat Emulation\",\"Url Filtering\".",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "certificate": {
        "Type": "String",
        "Description": "Internal Server Certificate identified by Name or UID, otherwise, \"Outbound Certificate\" is a default value.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "destination": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by Name or UID that represents connection destination.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "destination_negate": {
        "Type": "Bool",
        "Description": "TRUE if \"negate\" value is set for Destination.",
        "Computed": true
      },
      "enabled": {
        "Type": "Bool",
        "Description": "Enable/Disable the rule.",
        "Computed": true
      },
      "install_on": {
        "Type": "Set",
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that holds the Object. Identified by the Name or UID."
      },
      "name": {
        "Type": "String",
        "Description": "Object name.",
        "Computed": true
      },
      "rule_number": {
        "Type": "String",
        "Optional": true,
        "Description": "HTTPS rule number."
      },
      "service": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by Name or UID that represents connection service.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service_negate": {
        "Type": "Bool",
        "Description": "TRUE if \"negate\" value is set for Service.",
        "Computed": true
      },
      "site_category": {
        "Type": "Set",
        "Description": "Collection of Site Categories objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "site_category_negate": {
        "Type": "Bool",
        "Description": "TRUE if \"negate\" value is set for Site Category.",
        "Computed": true
      },
      "source": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by Name or UID that represents connection source.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "source_negate": {
        "Type": "Bool",
        "Description": "TRUE if \"negate\" value is set for Source.",
        "Computed": true
      },
      "track": {
        "Type": "String",
        "Description": "\"None\",\"Log\",\"Alert\",\"Mail\",\"SNMP trap\",\"Mail\",\"User Alert\", \"User Alert 2\", \"User Alert 3\".",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_https_section": {
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that holds the Object. Identified by the Name or UID."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_multicast_address_range": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ipv4_address": {
        "Type": "String",
        "Description": "IPv4 address.",
        "Computed": true
      },
      "ipv4_address_first": {
        "Type": "String",
        "Description": "First IPv4 address in the range.",
        "Computed": true
      },
      "ipv4_address_last": {
        "Type": "String",
        "Description": "Last IPv4 address in the range.",
        "Computed": true
      },
      "ipv6_address": {
        "Type": "String",
        "Description": "IPv6 address.",
        "Computed": true
      },
      "ipv6_address_first": {
        "Type": "String",
        "Description": "First IPv6 address in the range.",
        "Computed": true
      },
      "ipv6_address_last": {
        "Type": "String",
        "Description": "Last IPv6 address in the range.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_network": {
      "broadcast": {
        "Type": "String",
        "Description": "Allow broadcast address inclusion.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of group identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "mask_length4": {
        "Type": "Int",
        "Description": "IPv4 network mask length.",
        "Computed": true
      },
      "mask_length6": {
        "Type": "Int",
        "Description": "IPv6 network mask length.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "nat_settings": {
        "Type": "Map",
        "Description": "NAT settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "subnet4": {
        "Type": "String",
        "Description": "IPv4 network address.",
        "Computed": true
      },
      "subnet6": {
        "Type": "String",
        "Description": "IPv6 network address.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_opsec_application": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "cpmi": {
        "Type": "Map",
        "Description": "Used to setup the CPMI client entity.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "lea": {
        "Type": "Map",
        "Description": "Used to setup the LEA client entity.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_package": {
      "access": {
        "Type": "Bool",
        "Description": "True - enables, False - disables access \u0026 NAT policies, empty - nothing is changed.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "desktop_security": {
        "Type": "Bool",
        "Description": "True - enables, False - disables Desktop security policy, empty - nothing is changed.",
        "Computed": true
      },
      "installation_targets": {
        "Type": "Set",
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "qos": {
        "Type": "Bool",
        "Description": "True - enables, False - disables QoS policy, empty - nothing is changed.",
        "Computed": true
      },
      "qos_policy_type": {
        "Type": "String",
        "Description": "QoS policy type.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "threat_prevention": {
        "Type": "Bool",
        "Description": "True - enables, False - disables Threat policy, empty - nothing is changed.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "vpn_traditional_mode": {
        "Type": "Bool",
        "Description": "True - enables, False - disables VPN traditional mode, empty - nothing is changed.",
        "Computed": true
      }
    },
    "checkpoint_management_data_security_zone": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_service_dce_rpc": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "interface_uuid": {
        "Type": "String",
        "Description": "Network interface UUID.",
        "Computed": true
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_service_group": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group name.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "members": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_service_icmp": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "icmp_code": {
        "Type": "Int",
        "Description": "As listed in: \u003ca href=\"http://www.iana.org/assignments/icmp-parameters\" target=\"_blank\"\u003eRFC 792\u003c/a\u003e.",
        "Computed": true
      },
      "icmp_type": {
        "Type": "Int",
        "Description": "As listed in: \u003ca href=\"http://www.iana.org/assignments/icmp-parameters\" target=\"_blank\"\u003eRFC 792\u003c/a\u003e.",
        "Computed": true
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_service_icmp6": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "icmp_code": {
        "Type": "Int",
        "Description": "As listed in: \u003ca href=\"http://www.iana.org/assignments/icmp-parameters\" target=\"_blank\"\u003eRFC 792\u003c/a\u003e.",
        "Computed": true
      },
      "icmp_type": {
        "Type": "Int",
        "Description": "As listed in: \u003ca href=\"http://www.iana.org/assignments/icmp-parameters\" target=\"_blank\"\u003eRFC 792\u003c/a\u003e.",
        "Computed": true
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_service_other": {
      "accept_replies": {
        "Type": "Bool",
        "Description": "Specifies whether Other Service replies are to be accepted.",
        "Computed": true
      },
      "action": {
        "Type": "String",
        "Description": "Contains an INSPECT expression that defines the action to take if a rule containing this service is matched. Example: set r_mhandler \u0026open_ssl_handler sets a handler on the connection.",
        "Computed": true
      },
      "aggressive_aging": {
        "Type": "Map",
        "Description": "Sets short (aggressive) timeouts for idle connections.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ip_protocol": {
        "Type": "Int",
        "Description": "IP protocol number.",
        "Computed": true
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Computed": true
      },
      "match": {
        "Type": "String",
        "Description": "Contains an INSPECT expression that defines the matching criteria. The connection is examined against the expression during the first packet. Example: tcp, dport = 21, direction = 0 matches incoming FTP control connections.",
        "Computed": true
      },
      "match_for_any": {
        "Type": "Bool",
        "Description": "Indicates whether this service is used when 'Any' is set as the rule's service and there are several service objects with the same source port and protocol.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "override_default_settings": {
        "Type": "Bool",
        "Description": "Indicates whether this service is a Data Domain service which has been overridden.",
        "Computed": true
      },
      "session_timeout": {
        "Type": "Int",
        "Description": "Time (in seconds) before the session times out.",
        "Computed": true
      },
      "sync_connections_on_cluster": {
        "Type": "Bool",
        "Description": "Enables state-synchronized High Availability or Load Sharing on a ClusterXL or OPSEC-certified cluster.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "use_default_session_timeout": {
        "Type": "Bool",
        "Description": "Use default virtual session timeout.",
        "Computed": true
      }
    },
    "checkpoint_management_data_service_rpc": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "program_number": {
        "Type": "Int",
        "Description": "N/A",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_service_sctp": {
      "aggressive_aging": {
        "Type": "Map",
        "Description": "Sets short (aggressive) timeouts for idle connections.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Computed": true
      },
      "match_for_any": {
        "Type": "Bool",
        "Description": "Indicates whether this service is used when 'Any' is set as the rule's service and there are several service objects with the same source port and protocol.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "port": {
        "Type": "String",
        "Description": "Port number. To specify a port range add a hyphen between the lowest and the highest port numbers, for example 44-45.",
        "Computed": true
      },
      "session_timeout": {
        "Type": "Int",
        "Description": "Time (in seconds) before the session times out.",
        "Computed": true
      },
      "source_port": {
        "Type": "String",
        "Description": "Source port number. To specify a port range add a hyphen between the lowest and the highest port numbers, for example 44-45.",
        "Computed": true
      },
      "sync_connections_on_cluster": {
        "Type": "Bool",
        "Description": "Enables state-synchronized High Availability or Load Sharing on a ClusterXL or OPSEC-certified cluster.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "use_default_session_timeout": {
        "Type": "Bool",
        "Description": "Use default virtual session timeout.",
        "Computed": true
      }
    },
    "checkpoint_management_data_service_tcp": {
      "aggressive_aging": {
        "Type": "Map",
        "Description": "Sets short (aggressive) timeouts for idle connections.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group name.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Computed": true
      },
      "match_by_protocol_signature": {
        "Type": "Bool",
        "Description": "A value of true enables matching by the selected protocol's signature - the signature identifies the protocol as genuine. Select this option to limit the port to the specified protocol. If the selected protocol does not support matching by signature, this field cannot be set to true.",
        "Computed": true
      },
      "match_for_any": {
        "Type": "Bool",
        "Description": "Indicates whether this service is used when 'Any' is set as the rule's service and there are several service objects with the same source port and protocol.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "override_default_settings": {
        "Type": "Bool",
        "Description": "Indicates whether this service is a Data Domain service which has been overridden.",
        "Computed": true
      },
      "port": {
        "Type": "String",
        "Description": "The number of the port used to provide this service. To specify a port range, place a hyphen between the lowest and highest port numbers, for example 44-55.",
        "Computed": true
      },
      "protocol": {
        "Type": "String",
        "Description": "Select the protocol type associated with the service, and by implication, the management server (if any) that enforces Content Security and Authentication for the service. Selecting a Protocol Type invokes the specific protocol handlers for each protocol type, thus enabling higher level of security by parsing the protocol, and higher level of connectivity by tracking dynamic actions (such as opening of ports).",
        "Computed": true
      },
      "session_timeout": {
        "Type": "Int",
        "Description": "Time (in seconds) before the session times out.",
        "Computed": true
      },
      "source_port": {
        "Type": "String",
        "Description": "Port number for the client side service. If specified, only those Source port Numbers will be Accepted, Dropped, or Rejected during packet inspection. Otherwise, the source port is not inspected.",
        "Computed": true
      },
      "sync_connections_on_cluster": {
        "Type": "Bool",
        "Description": "Enables state-synchronized High Availability or Load Sharing on a ClusterXL or OPSEC-certified cluster.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "use_default_session_timeout": {
        "Type": "Bool",
        "Description": "Use default virtual session timeout.",
        "Computed": true
      }
    },
    "checkpoint_management_data_service_udp": {
      "accept_replies": {
        "Type": "Bool",
        "Description": "N/A",
        "Computed": true
      },
      "aggressive_aging": {
        "Type": "Map",
        "Description": "Sets short (aggressive) timeouts for idle connections.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group name.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Computed": true
      },
      "match_by_protocol_signature": {
        "Type": "Bool",
        "Description": "A value of true enables matching by the selected protocol's signature - the signature identifies the protocol as genuine. Select this option to limit the port to the specified protocol. If the selected protocol does not support matching by signature, this field cannot be set to true.",
        "Computed": true
      },
      "match_for_any": {
        "Type": "Bool",
        "Description": "Indicates whether this service is used when 'Any' is set as the rule's service and there are several service objects with the same source port and protocol.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "override_default_settings": {
        "Type": "Bool",
        "Description": "Indicates whether this service is a Data Domain service which has been overridden.",
        "Computed": true
      },
      "port": {
        "Type": "String",
        "Description": "The number of the port used to provide this service. To specify a port range, place a hyphen between the lowest and highest port numbers, for example 44-55.",
        "Computed": true
      },
      "protocol": {
        "Type": "String",
        "Description": "Select the protocol type associated with the service, and by implication, the management server (if any) that enforces Content Security and Authentication for the service. Selecting a Protocol Type invokes the specific protocol handlers for each protocol type, thus enabling higher level of security by parsing the protocol, and higher level of connectivity by tracking dynamic actions (such as opening of ports).",
        "Computed": true
      },
      "session_timeout": {
        "Type": "Int",
        "Description": "Time (in seconds) before the session times out.",
        "Computed": true
      },
      "source_port": {
        "Type": "String",
        "Description": "Port number for the client side service. If specified, only those Source port Numbers will be Accepted, Dropped, or Rejected during packet inspection. Otherwise, the source port is not inspected.",
        "Computed": true
      },
      "sync_connections_on_cluster": {
        "Type": "Bool",
        "Description": "Enables state-synchronized High Availability or Load Sharing on a ClusterXL or OPSEC-certified cluster.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "use_default_session_timeout": {
        "Type": "Bool",
        "Description": "Use default virtual session timeout.",
        "Computed": true
      }
    },
    "checkpoint_management_data_threat_indicator": {
      "action": {
        "Type": "String",
        "Description": "The indicator's action.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "profile_overrides": {
        "Type": "List",
        "Description": "Profiles in which to override the indicator's default action.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Description": "The indicator's action in this profile.",
              "Computed": true
            },
            "profile": {
              "Type": "String",
              "Description": "The profile in which to override the indicator's action.",
              "Computed": true
            }
          }
        }
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_time_group": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "members": {
        "Type": "Set",
        "Description": "Collection of Time Group objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_vpn_community_meshed": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "encryption_method": {
        "Type": "String",
        "Description": "The encryption method to be used.",
        "Computed": true
      },
      "encryption_suite": {
        "Type": "String",
        "Description": "The encryption suite to be used.",
        "Computed": true
      },
      "gateways": {
        "Type": "Set",
        "Description": "Collection of Gateway objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "granular_encryptions": {
        "Type": "List",
        "Description": "VPN granular encryption settings.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "encryption_method": {
              "Type": "String",
              "Description": "The encryption method to be used.",
              "Computed": true
            },
            "encryption_suite": {
              "Type": "String",
              "Description": "The encryption suite to be used.",
              "Computed": true
            },
            "external_gateway": {
              "Type": "String",
              "Description": "Externally managed or 3rd party gateway identified by name or UID.",
              "Computed": true
            },
            "ike_phase_1": {
              "Type": "Map",
              "Description": "Ike Phase 1 settings. Only applicable when the encryption-suite is set to [custom].",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "ike_phase_2": {
              "Type": "Map",
              "Description": "Ike Phase 2 settings. Only applicable when the encryption-suite is set to [custom].",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "internal_gateway": {
              "Type": "String",
              "Description": "Internally managed Check Point gateway identified by name or UID, or 'Any' for all internal-gateways participants in this community.",
              "Computed": true
            }
          }
        }
      },
      "ike_phase_1": {
        "Type": "Map",
        "Description": "Ike Phase 1 settings. Only applicable when the encryption-suite is set to [custom].",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ike_phase_2": {
        "Type": "Map",
        "Description": "Ike Phase 2 settings. Only applicable when the encryption-suite is set to [custom].",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "override_vpn_domains": {
        "Type": "List",
        "Description": "The Overrides VPN Domains of the participants GWs.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "gateway": {
              "Type": "String",
              "Description": "Participant gateway in override VPN domain identified by the name or UID.",
              "Computed": true
            },
            "vpn_domain": {
              "Type": "String",
              "Description": "VPN domain network identified by the name or UID.",
              "Computed": true
            }
          }
        }
      },
      "shared_secrets": {
        "Type": "List",
        "Description": "Shared secrets for external gateways.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "external_gateway": {
              "Type": "String",
              "Description": "External gateway identified by the name or UID.",
              "Computed": true
            },
            "shared_secret": {
              "Type": "String",
              "Description": "Shared secret.",
              "Computed": true
            }
          }
        }
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tunnel_granularity": {
        "Type": "String",
        "Description": "VPN tunnel sharing option to be used.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "use_shared_secret": {
        "Type": "Bool",
        "Description": "Indicates whether the shared secret should be used for all external gateways.",
        "Computed": true
      }
    },
    "checkpoint_management_data_vpn_community_star": {
      "center_gateways": {
        "Type": "Set",
        "Description": "Collection of Gateway objects representing center gateways identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "encryption_method": {
        "Type": "String",
        "Description": "The encryption method to be used.",
        "Computed": true
      },
      "encryption_suite": {
        "Type": "String",
        "Description": "The encryption suite to be used.",
        "Computed": true
      },
      "granular_encryptions": {
        "Type": "List",
        "Description": "VPN granular encryption settings.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "encryption_method": {
              "Type": "String",
              "Description": "The encryption method to be used.",
              "Computed": true
            },
            "encryption_suite": {
              "Type": "String",
              "Description": "The encryption suite to be used.",
              "Computed": true
            },
            "external_gateway": {
              "Type": "String",
              "Description": "Externally managed or 3rd party gateway identified by name or UID.",
              "Computed": true
            },
            "ike_phase_1": {
              "Type": "Map",
              "Description": "Ike Phase 1 settings. Only applicable when the encryption-suite is set to [custom].",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "ike_phase_2": {
              "Type": "Map",
              "Description": "Ike Phase 2 settings. Only applicable when the encryption-suite is set to [custom].",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "internal_gateway": {
              "Type": "String",
              "Description": "Internally managed Check Point gateway identified by name or UID, or 'Any' for all internal-gateways participants in this community.",
              "Computed": true
            }
          }
        }
      },
      "ike_phase_1": {
        "Type": "Map",
        "Description": "Ike Phase 1 settings. Only applicable when the encryption-suite is set to [custom].",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ike_phase_2": {
        "Type": "Map",
        "Description": "Ike Phase 2 settings. Only applicable when the encryption-suite is set to [custom].",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "mesh_center_gateways": {
        "Type": "Bool",
        "Description": "Indicates whether the meshed community is in center.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "override_vpn_domains": {
        "Type": "List",
        "Description": "The Overrides VPN Domains of the participants GWs.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "gateway": {
              "Type": "String",
              "Description": "Participant gateway in override VPN domain identified by the name or UID.",
              "Computed": true
            },
            "vpn_domain": {
              "Type": "String",
              "Description": "VPN domain network identified by the name or UID.",
              "Computed": true
            }
          }
        }
      },
      "satellite_gateways": {
        "Type": "Set",
        "Description": "Collection of Gateway objects representing satellite gateways identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "shared_secrets": {
        "Type": "List",
        "Description": "Shared secrets for external gateways.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "external_gateway": {
              "Type": "String",
              "Description": "External gateway identified by the name or UID.",
              "Computed": true
            },
            "shared_secret": {
              "Type": "String",
              "Description": "Shared secret.",
              "Computed": true
            }
          }
        }
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tunnel_granularity": {
        "Type": "String",
        "Description": "VPN tunnel sharing option to be used.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "use_shared_secret": {
        "Type": "Bool",
        "Description": "Indicates whether the shared secret should be used for all external gateways.",
        "Computed": true
      }
    },
    "checkpoint_management_data_wildcard": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ipv4_address": {
        "Type": "String",
        "Description": "IPv4 address.",
        "Computed": true
      },
      "ipv4_mask_wildcard": {
        "Type": "String",
        "Description": "IPv4 mask wildcard.",
        "Computed": true
      },
      "ipv6_address": {
        "Type": "String",
        "Description": "IPv6 address.",
        "Computed": true
      },
      "ipv6_mask_wildcard": {
        "Type": "String",
        "Description": "IPv6 mask wildcard.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_domain": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "servers": {
        "Type": "List",
        "Description": "Domain servers.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "active": {
              "Type": "Bool",
              "Description": "Activate domain server. Only one domain server is allowed to be active.",
              "Computed": true
            },
            "ipv4_address": {
              "Type": "String",
              "Description": "IPv4 address.",
              "Computed": true
            },
            "ipv6_address": {
              "Type": "String",
              "Description": "IPv6 address.",
              "Computed": true
            },
            "multi_domain_server": {
              "Type": "String",
              "Required": true,
              "Description": "Multi Domain server name or UID."
            },
            "name": {
              "Type": "String",
              "Description": "Object name. Must be unique in the domain.",
              "Computed": true
            },
            "skip_start_domain_server": {
              "Type": "Bool",
              "Description": "Set this value to be true to prevent starting the new created domain.",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Domain server type.",
              "Computed": true
            }
          }
        }
      },
      "uid": {
        "Type": "String",
        "Description": "Object unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_domain_permissions_profile": {
      "access_control": {
        "Type": "List",
        "Description": "Access Control permissions.\u003cbr\u003eOnly a 'Customized' permission-type profile can edit these permissions.",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_control_objects_and_settings": {
              "Type": "String",
              "Description": "Allow editing of the following objet types: VPN Community, Access Role, Custom application group,Custom application, Custom category, Limit, Application - Match Settings, Application Category - Match Settings,Override Categorization, Application and URL filtering blade - Advanced Settings, Content Awareness blade - Advanced Settings.",
              "Computed": true
            },
            "app_control_and_url_filtering_update": {
              "Type": "Bool",
              "Description": "Install Application and URL Filtering updates.",
              "Computed": true
            },
            "dlp_policy": {
              "Type": "String",
              "Description": "Configure DLP rules and Policies.",
              "Computed": true
            },
            "geo_control_policy": {
              "Type": "String",
              "Description": "Work with Access Control rules that control traffic to and from specified countries.",
              "Computed": true
            },
            "install_policy": {
              "Type": "Bool",
              "Description": "Install Access Control Policies.",
              "Computed": true
            },
            "nat_policy": {
              "Type": "String",
              "Description": "Work with NAT in Access Control rules.",
              "Computed": true
            },
            "policy_layers": {
              "Type": "List",
              "Description": "Layer editing permissions.\u003cbr\u003eAvailable only if show-policy is set to true.",
              "Computed": true,
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "app_control_and_url_filtering": {
                    "Type": "Bool",
                    "Description": "Use Application and URL Filtering in Access Control rules.\u003cbr\u003eAvailable only if edit-layers is set to \"By Software Blades\".",
                    "Computed": true
                  },
                  "content_awareness": {
                    "Type": "Bool",
                    "Description": "Use specified data types in Access Control rules.\u003cbr\u003eAvailable only if edit-layers is set to \"By Software Blades\".",
                    "Computed": true
                  },
                  "edit_layers": {
                    "Type": "String",
                    "Description": "\"By Software Blades\" - Edit Access Control layers that contain the blades enabled in the Permissions Profile.\u003cbr\u003e\"By Selected Profile In A Layer Editor\" - Administrators can only edit the layer if the Access Control layer editor gives editing permission to their profiles.",
                    "Computed": true
                  },
                  "firewall": {
                    "Type": "Bool",
                    "Description": "Work with Access Control and other Software Blades that do not have their own Policies.\u003cbr\u003eAvailable only if edit-layers is set to \"By Software Blades\".",
                    "Computed": true
                  },
                  "mobile_access": {
                    "Type": "Bool",
                    "Description": "Work with Mobile Access rules.\u003cbr\u003eAvailable only if edit-layers is set to \"By Software Blades\".",
                    "Computed": true
                  }
                }
              }
            },
            "qos_policy": {
              "Type": "String",
              "Description": "Work with QoS Policies and rules.",
              "Computed": true
            },
            "show_policy": {
              "Type": "Bool",
              "Description": "Select to let administrators work with Access Control rules and NAT rules. If not selected, administrators cannot see these rules.",
              "Computed": true
            }
          }
        }
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "edit_common_objects": {
        "Type": "Bool",
        "Description": "Define and manage objects in the Check Point database: Network Objects, Services, Custom Application Site, VPN Community, Users, Servers, Resources, Time, UserCheck, and Limit.\u003cbr\u003eOnly a 'Customized' permission-type profile can edit this permission.",
        "Computed": true
      },
      "endpoint": {
        "Type": "Map",
        "Description": "Endpoint permissions. Not supported for Multi-Domain Servers.\u003cbr\u003eOnly a 'Customized' permission-type profile can edit these permissions.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "events_and_reports": {
        "Type": "Map",
        "Description": "Events and Reports permissions.\u003cbr\u003eOnly a 'Customized' permission-type profile can edit these permissions.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "gateways": {
        "Type": "Map",
        "Description": "Gateways permissions. \u003cbr\u003eOnly a 'Customized' permission-type profile can edit these permissions.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "management": {
        "Type": "Map",
        "Description": "Management permissions.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "monitoring_and_logging": {
        "Type": "Map",
        "Description": "Monitoring and Logging permissions.\u003cbr\u003e'Customized' permission-type profile can edit all these permissions. \"Read Write All\" permission-type can edit only dlp-logs-including-confidential-fields and manage-dlp-messages permissions.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "others": {
        "Type": "Map",
        "Description": "Additional permissions.\u003cbr\u003eOnly a 'Customized' permission-type profile can edit these permissions.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "permission_type": {
        "Type": "String",
        "Description": "The type of the Permissions Profile.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "threat_prevention": {
        "Type": "Map",
        "Description": "Threat Prevention permissions.\u003cbr\u003eOnly a 'Customized' permission-type profile can edit these permissions.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      }
    },
    "checkpoint_management_gcp_data_center_server": {
      "authentication_method": {
        "Type": "String",
        "Description": "key-authentication\nUses the Service Account private key file to authenticate.\nvm-instance-authentication\nUses the Service Account VM Instance to authenticate.\nThis option requires the Security Management Server deployed in a GCP, and runs as a Service Account with the required permissions.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_generic_data_center_server": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Computed": true
      },
      "custom_header": {
        "Type": "Bool",
        "Description": "When set to false, The admin is not using Key and Value for a Custom Header in order to connect to the feed server.\n\nWhen set to true, The admin is using Key and Value for a Custom Header in order to connect to the feed server.",
        "Computed": true
      },
      "custom_key": {
        "Type": "String",
        "Description": "Key for the Custom Header, relevant and required only when custom_header set to true.",
        "Computed": true
      },
      "custom_value": {
        "Type": "String",
        "Description": "Value for the Custom Header, relevant and required only when custom_header set to true.",
        "Computed": true
      },
      "interval": {
        "Type": "String",
        "Description": "Update interval of the feed in seconds.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "url": {
        "Type": "String",
        "Description": "URL of the JSON feed (e.g. https://example.com/file.json).",
        "Computed": true
      }
    },
    "checkpoint_management_global_domain": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "domain_type": {
        "Type": "String",
        "Description": "N/A",
        "Computed": true
      },
      "global_domain_assignments": {
        "Type": "List",
        "Description": "N/A",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "assignment_status": {
              "Type": "String",
              "Description": "N/A",
              "Computed": true
            },
            "assignment_up_to_date": {
              "Type": "Map",
              "Description": "The time when the assignment was assigned.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "color": {
              "Type": "String",
              "Description": "Color of the object. Should be one of existing colors.",
              "Computed": true
            },
            "comments": {
              "Type": "String",
              "Description": "Comments string.",
              "Computed": true
            },
            "dependent_domain": {
              "Type": "Map",
              "Description": "Dependent domain. Level of details in the output corresponds to the number of details for search. This table shows the level of details in the Standard level.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "global_access_policy": {
              "Type": "String",
              "Description": "Global domain access policy that is assigned to a dependent domain.",
              "Computed": true
            },
            "global_threat_prevention_policy": {
              "Type": "String",
              "Description": "Global domain threat prevention policy that is assigned to a dependent domain.",
              "Computed": true
            },
            "manage_protection_actions": {
              "Type": "Bool",
              "Description": "N/A",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Object name. Must be unique in the domain.",
              "Computed": true
            },
            "tags": {
              "Type": "List",
              "Description": "Collection of tag identifiers.",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "color": {
                    "Type": "String",
                    "Description": "Color of the object. Should be one of existing colors.",
                    "Computed": true
                  },
                  "name": {
                    "Type": "String",
                    "Description": "Object name. Must be unique in the domain.",
                    "Computed": true
                  },
                  "type": {
                    "Type": "String",
                    "Description": "Object type.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Object unique identifier.",
                    "Computed": true
                  }
                }
              }
            },
            "type": {
              "Type": "String",
              "Description": "Object type.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "Object unique identifier.",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "servers": {
        "Type": "List",
        "Description": "Domain servers.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "active": {
              "Type": "Bool",
              "Description": "Domain server status.",
              "Computed": true
            },
            "ipv4_address": {
              "Type": "String",
              "Description": "IPv4 address.",
              "Computed": true
            },
            "ipv6_address": {
              "Type": "String",
              "Description": "IPv6 address.",
              "Computed": true
            },
            "multi_domain_server": {
              "Type": "String",
              "Description": "Multi Domain server name or UID.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Object name. Must be unique in the domain.",
              "Computed": true
            },
            "skip_start_domain_server": {
              "Type": "Bool",
              "Description": "Set this value to be true to prevent starting the new created domain.",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Domain server type.",
              "Computed": true
            }
          }
        }
      },
      "tags": {
        "Type": "List",
        "Description": "Collection of tag objects identified by the name or UID. Level of details in the output corresponds to the number of details for search. This table shows the level of details in the Standard level.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "color": {
              "Type": "String",
              "Description": "Color of the object. Should be one of existing colors.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Object name. Must be unique in the domain.",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Object type.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "Object unique identifier.",
              "Computed": true
            }
          }
        }
      },
      "type": {
        "Type": "String",
        "Description": "Object type.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_gsn_handover_group": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "enforce_gtp": {
        "Type": "Bool",
        "Description": "Enable enforce GTP signal packet rate limit from this group.",
        "Computed": true
      },
      "gtp_rate": {
        "Type": "Int",
        "Description": "Limit of the GTP rate in PDU/sec.",
        "Computed": true
      },
      "members": {
        "Type": "Set",
        "Description": "Collection of GSN handover group members identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_https_rulebase": {
      "dereference_group_members": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When true, the source, destination and services \u0026 applications parameters are displayed as ranges of IP addresses and port numbers rather than network objects.\nObjects that are not represented using IP addresses or port numbers are presented as objects.\nIn addition, the response of each rule does not contain the parameters: source, source-negate, destination, destination-negate, service and service-negate, but instead it contains the parameters: source-ranges, destination-ranges and service-ranges.\n\nNote: Requesting to show rules as ranges is limited up to 20 rules per request, otherwise an error is returned. If you wish to request more rules, use the offset and limit parameters to limit your request.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "filter": {
        "Type": "String",
        "Optional": true,
        "Description": "Search expression to filter the rulebase. The provided text should be exactly the same as it would be given in Smart Console. The logical operators in the expression ('AND', 'OR') should be provided in capital letters. If an operator is not used, the default OR operator applies."
      },
      "filter_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Sets filter preferences.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximal number of returned results.",
        "Default": {
          "Type": "int",
          "Value": "50"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "offset": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of the results to initially skip.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "order": {
        "Type": "List",
        "Optional": true,
        "Description": "Sorts the results by search criteria. Automatically sorts the results by Name, in the ascending order.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "asc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in ascending order."
            },
            "desc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in descending order."
            }
          }
        }
      },
      "package": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the package."
      },
      "rulebase": {
        "Type": "List",
        "Description": "The show rulebase api reply",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "from": {
              "Type": "Int",
              "Description": "From which element number the query was done.",
              "Computed": true
            },
            "objects_dictionary": {
              "Type": "List",
              "Description": "Level of details in the output corresponds to the number of details for search. This table shows the level of details in the Standard level.",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Description": "Object name. Must be unique in the domain",
                    "Computed": true
                  },
                  "type": {
                    "Type": "String",
                    "Description": "Object type.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Object unique identifier.",
                    "Computed": true
                  }
                }
              }
            },
            "rulebase": {
              "Type": "List",
              "Description": "N/A",
              "Computed": true,
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action": {
                    "Type": "String",
                    "Description": "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User Auth\", \"Client Auth\", \"Apply Layer\".",
                    "Computed": true
                  },
                  "blade": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "certificate": {
                    "Type": "String",
                    "Description": "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User Auth\", \"Client Auth\", \"Apply Layer\".",
                    "Computed": true
                  },
                  "comments": {
                    "Type": "String",
                    "Description": "Comments string.",
                    "Computed": true
                  },
                  "destination": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "destination_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for destination.",
                    "Computed": true
                  },
                  "enabled": {
                    "Type": "Bool",
                    "Description": "Enable/Disable the rule.",
                    "Computed": true
                  },
                  "from": {
                    "Type": "Int",
                    "Description": "From which element number the query was done.",
                    "Computed": true
                  },
                  "install_on": {
                    "Type": "List",
                    "Description": "Which Gateways identified by the name or UID to install the policy on.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "layer": {
                    "Type": "String",
                    "Description": "Comments string.",
                    "Computed": true
                  },
                  "name": {
                    "Type": "String",
                    "Description": "Rules name.",
                    "Computed": true
                  },
                  "rule_number": {
                    "Type": "Int",
                    "Description": "Number of the rule.",
                    "Computed": true
                  },
                  "rulebase": {
                    "Type": "List",
                    "Description": "N/A",
                    "Computed": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "ComputedBlock",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "action": {
                          "Type": "String",
                          "Description": "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User Auth\", \"Client Auth\", \"Apply Layer\".",
                          "Computed": true
                        },
                        "blade": {
                          "Type": "List",
                          "Description": "Collection of Network objects identified by the name or UID.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        },
                        "certificate": {
                          "Type": "String",
                          "Description": "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User Auth\", \"Client Auth\", \"Apply Layer\".",
                          "Computed": true
                        },
                        "comments": {
                          "Type": "String",
                          "Description": "Comments string.",
                          "Computed": true
                        },
                        "destination": {
                          "Type": "List",
                          "Description": "Collection of Network objects identified by the name or UID.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        },
                        "destination_negate": {
                          "Type": "Bool",
                          "Description": "True if negate is set for destination.",
                          "Computed": true
                        },
                        "enabled": {
                          "Type": "Bool",
                          "Description": "Enable/Disable the rule.",
                          "Computed": true
                        },
                        "install_on": {
                          "Type": "List",
                          "Description": "Which Gateways identified by the name or UID to install the policy on.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        },
                        "layer": {
                          "Type": "String",
                          "Description": "Comments string.",
                          "Computed": true
                        },
                        "name": {
                          "Type": "String",
                          "Description": "Rules name.",
                          "Computed": true
                        },
                        "rule_number": {
                          "Type": "Int",
                          "Description": "Number of the rule.",
                          "Computed": true
                        },
                        "service": {
                          "Type": "List",
                          "Description": "Collection of Network objects identified by the name or UID.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        },
                        "service_negate": {
                          "Type": "Bool",
                          "Description": "True if negate is set for service.",
                          "Computed": true
                        },
                        "site_category": {
                          "Type": "List",
                          "Description": "Collection of Network objects identified by the name or UID.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        },
                        "site_category_negate": {
                          "Type": "Bool",
                          "Description": "True if negate is set for source.",
                          "Computed": true
                        },
                        "source": {
                          "Type": "List",
                          "Description": "Collection of Network objects identified by the name or UID.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        },
                        "source_negate": {
                          "Type": "Bool",
                          "Description": "True if negate is set for source.",
                          "Computed": true
                        },
                        "track": {
                          "Type": "String",
                          "Description": "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User Auth\", \"Client Auth\", \"Apply Layer\".",
                          "Computed": true
                        },
                        "type": {
                          "Type": "String",
                          "Description": "Rules type.",
                          "Computed": true
                        },
                        "uid": {
                          "Type": "String",
                          "Description": "Rules uid.",
                          "Computed": true
                        }
                      }
                    }
                  },
                  "service": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "service_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for service.",
                    "Computed": true
                  },
                  "site_category": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "site_category_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for source.",
                    "Computed": true
                  },
                  "source": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "source_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for source.",
                    "Computed": true
                  },
                  "to": {
                    "Type": "Int",
                    "Description": "To which element number the query was done.",
                    "Computed": true
                  },
                  "track": {
                    "Type": "String",
                    "Description": "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User Auth\", \"Client Auth\", \"Apply Layer\".",
                    "Computed": true
                  },
                  "type": {
                    "Type": "String",
                    "Description": "Rules type.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Rules uid.",
                    "Computed": true
                  }
                }
              }
            },
            "to": {
              "Type": "Int",
              "Description": "To which element number the query was done.",
              "Computed": true
            },
            "total": {
              "Type": "Int",
              "Description": "Total number of elements returned by the query.",
              "Computed": true
            }
          }
        }
      },
      "show_membership": {
        "Type": "Bool",
        "Optional": true,
        "Description": "N/A",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_identity_tag": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "external_identifier": {
        "Type": "String",
        "Description": "External identifier. For example: Cisco ISE security group tag.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_idp_administrator_group": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "group_id": {
        "Type": "String",
        "Description": "Group ID or Name should be set base on the source attribute of 'groups' in the Saml Assertion.",
        "Computed": true
      },
      "multi_domain_profile": {
        "Type": "String",
        "Description": "Administrator multi-domain profile.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "permissions_profile": {
        "Type": "List",
        "Description": "Administrator permissions profile. Permissions profile should not be provided when multi-domain-profile is set to \"Multi-Domain Super User\" or \"Domain Super User\".",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "domain": {
              "Type": "String",
              "Description": "N/A",
              "Computed": true
            },
            "profile": {
              "Type": "String",
              "Description": "Permission profile.",
              "Computed": true
            }
          }
        }
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      }
    },
    "checkpoint_management_idp_default_assignment": {
      "identity_provider": {
        "Type": "String",
        "Description": "Represents the Identity Provider to be used for Login by this assignment identified by the name or UID, to cancel existing assignment should set to 'none'.",
        "Computed": true
      },
      "identity_provider_set": {
        "Type": "Bool",
        "Description": "True if 'identity-provider' value is set.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      }
    },
    "checkpoint_management_idp_to_domain_assignment": {
      "assigned_domain": {
        "Type": "String",
        "Optional": true,
        "Description": "Represents the Domain assigned by 'idp-to-domain-assignment', need to be domain name or UID."
      },
      "identity_provider": {
        "Type": "String",
        "Description": "Represents the Identity Provider to be used for Login by this assignment. Must be set when \"using-default\" was set to be false.",
        "Computed": true
      },
      "identity_provider_set": {
        "Type": "Bool",
        "Description": "True if 'identity-provider' value is set.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "using_default": {
        "Type": "Bool",
        "Description": "Is this assignment override by 'idp-default-assignment'.",
        "Computed": true
      }
    },
    "checkpoint_management_interoperable_device": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "domains_to_process": {
        "Type": "Set",
        "Description": "Indicates which domains to process the commands on. It cannot be used with the details-level full, must be run from the System Domain only and with ignore-warnings true. Valid values are: CURRENT_DOMAIN, ALL_DOMAINS_ON_THIS_SERVER.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "groups": {
        "Type": "List",
        "Description": "Level of details in the output corresponds to the number of details for search. This table shows the level of details in the Standard level.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "color": {
              "Type": "String",
              "Description": "Color of the object. Should be one of existing colors.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Object name. Must be unique in the domain.",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Object type.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "Object unique identifier.",
              "Computed": true
            }
          }
        }
      },
      "interfaces": {
        "Type": "List",
        "Description": "Network interfaces.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "color": {
              "Type": "String",
              "Description": "Color of the object. Should be one of existing colors.",
              "Computed": true
            },
            "comments": {
              "Type": "String",
              "Description": "Comments string.",
              "Computed": true
            },
            "domains_to_process": {
              "Type": "Set",
              "Description": "Indicates which domains to process the commands on. It cannot be used with the details-level full, must be run from the System Domain only and with ignore-warnings true. Valid values are: CURRENT_DOMAIN, ALL_DOMAINS_ON_THIS_SERVER.",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "ignore_errors": {
              "Type": "Bool",
              "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
              "Computed": true
            },
            "ignore_warnings": {
              "Type": "Bool",
              "Description": "Apply changes ignoring warnings.",
              "Computed": true
            },
            "ipv4_address": {
              "Type": "String",
              "Description": "IPv4 address.",
              "Computed": true
            },
            "ipv4_mask_length": {
              "Type": "String",
              "Description": "IPv4 network mask length.",
              "Computed": true
            },
            "ipv4_network_mask": {
              "Type": "String",
              "Description": "IPv4 network address.",
              "Computed": true
            },
            "ipv6_address": {
              "Type": "String",
              "Description": "IPv6 address.",
              "Computed": true
            },
            "ipv6_mask_length": {
              "Type": "String",
              "Description": "IPv6 network mask length.",
              "Computed": true
            },
            "ipv6_network_mask": {
              "Type": "String",
              "Description": "IPv6 network address.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Object name. Must be unique in the domain.",
              "Computed": true
            },
            "tags": {
              "Type": "Set",
              "Description": "Collection of tag identifiers.",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "topology": {
              "Type": "String",
              "Description": "Topology configuration.",
              "Computed": true
            },
            "topology_settings": {
              "Type": "List",
              "Description": "Internal topology settings.",
              "Computed": true,
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "interface_leads_to_dmz": {
                    "Type": "Bool",
                    "Description": "Whether this interface leads to demilitarized zone (perimeter network).",
                    "Computed": true
                  },
                  "ip_address_behind_this_interface": {
                    "Type": "String",
                    "Description": "Network settings behind this interface.",
                    "Computed": true
                  },
                  "specific_network": {
                    "Type": "String",
                    "Description": "Network behind this interface.",
                    "Computed": true
                  }
                }
              }
            }
          }
        }
      },
      "ipv4_address": {
        "Type": "String",
        "Description": "IPv4 address of the Interoperable Device.",
        "Computed": true
      },
      "ipv6_address": {
        "Type": "String",
        "Description": "IPv6 address of the Interoperable Device.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "vpn_settings": {
        "Type": "Map",
        "Description": "VPN domain properties for the Interoperable Device.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_ips_protection_extended_attribute": {
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "values": {
        "Type": "List",
        "Description": "N/A",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Description": "Object name. Must be unique in the domain.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "Object unique identifier.",
              "Computed": true
            }
          }
        }
      }
    },
    "checkpoint_management_ips_update_schedule": {
      "enabled": {
        "Type": "Bool",
        "Description": "IPS Update Schedule status.",
        "Computed": true
      },
      "recurrence": {
        "Type": "List",
        "Description": "Days recurrence.",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "days": {
              "Type": "Set",
              "Description": "Valid on specific days. Multiple options, support range of days in months. Example:[\"1\",\"3\",\"9-20\"].",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "minutes": {
              "Type": "Int",
              "Description": "Valid on interval. The length of time in minutes between updates.",
              "Computed": true
            },
            "pattern": {
              "Type": "String",
              "Description": "Valid on \"Interval\", \"Daily\", \"Weekly\", \"Monthly\" base.",
              "Computed": true
            },
            "weekdays": {
              "Type": "Set",
              "Description": "Valid on weekdays. Example: \"Sun\", \"Mon\"...\"Sat\".",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "time": {
        "Type": "String",
        "Description": "Time in format HH:mm.",
        "Computed": true
      }
    },
    "checkpoint_management_ise_data_center_server": {
      "certificate_fingerprint": {
        "Type": "String",
        "Description": "Specify the SHA-1 or SHA-256 fingerprint of the Data Center Server's certificate.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Computed": true
      },
      "hostnames": {
        "Type": "List",
        "Description": "Address of APIC cluster members.\nExample: http(s)://\u003chost1 ip/url\u003e.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Computed": true
      },
      "username": {
        "Type": "String",
        "Description": "User ID of the Cisco ISE administrator.\nWhen using commonLoginLogic Domains use the following syntax:\napic:\u003cdomain\u003e\\\u003cusername\u003e.",
        "Computed": true
      }
    },
    "checkpoint_management_kubernetes_data_center_server": {
      "ca_certificate": {
        "Type": "String",
        "Description": "The Kubernetes public certificate key encoded in base64.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Computed": true
      },
      "hostname": {
        "Type": "String",
        "Description": "IP address or hostname of the Kubernetes server.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "token_file": {
        "Type": "String",
        "Description": "Kubernetes access token encoded in base64.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Computed": true
      }
    },
    "checkpoint_management_login_message": {
      "header": {
        "Type": "String",
        "Description": "Login message header.",
        "Computed": true
      },
      "message": {
        "Type": "String",
        "Description": "Login message body.",
        "Computed": true
      },
      "show_message": {
        "Type": "Bool",
        "Description": "Whether to show login message.",
        "Computed": true
      },
      "warning": {
        "Type": "Bool",
        "Description": "Add warning sign.",
        "Computed": true
      }
    },
    "checkpoint_management_lsm_cluster_profile": {
      "advanced_settings": {
        "Type": "List",
        "Description": "N/A",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "connection_persistence": {
              "Type": "String",
              "Optional": true,
              "Description": "Handling established connections when installing a new policy."
            },
            "sam": {
              "Type": "List",
              "Description": "SAM.",
              "Computed": true,
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "forward_to_other_sam_servers": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Forward SAM clients' requests to other SAM servers."
                  },
                  "purge_sam_file": {
                    "Type": "Map",
                    "Description": "Purge SAM File.",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "use_early_versions": {
                    "Type": "Map",
                    "Description": "N/A",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "anti_bot": {
        "Type": "Bool",
        "Description": "Anti-Bot blade enabled.",
        "Computed": true
      },
      "anti_virus": {
        "Type": "Bool",
        "Description": "Anti-Virus blade enabled.",
        "Computed": true
      },
      "application_control": {
        "Type": "Bool",
        "Description": "Application Control blade enabled.",
        "Computed": true
      },
      "application_control_and_url_filtering_settings": {
        "Type": "List",
        "Description": "Gateway Application Control and URL filtering settings.",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "global_settings_mode": {
              "Type": "String",
              "Optional": true,
              "Description": "Whether to override global settings or not."
            },
            "override_global_settings": {
              "Type": "Map",
              "Description": "override global settings object.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "cluster_interfaces": {
        "Type": "List",
        "Description": "N/A",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Description": "Object name. Must be unique in the domain.",
              "Computed": true
            },
            "network_address": {
              "Type": "String",
              "Description": "N/A",
              "Computed": true
            },
            "network_mask": {
              "Type": "String",
              "Description": "N/A",
              "Computed": true
            },
            "network_type": {
              "Type": "String",
              "Description": "N/A",
              "Computed": true
            },
            "topology": {
              "Type": "Map",
              "Description": "N/A",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "cluster_members": {
        "Type": "List",
        "Description": "N/A",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "comments": {
              "Type": "String",
              "Description": "Comments string.",
              "Computed": true
            },
            "ip_address": {
              "Type": "String",
              "Description": "N/A",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Object name. Must be unique in the domain.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "Object unique identifier.",
              "Computed": true
            }
          }
        }
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "content_awareness": {
        "Type": "Bool",
        "Description": "Content Awareness blade enabled.",
        "Computed": true
      },
      "data_loss_prevention": {
        "Type": "Bool",
        "Description": "Data Loss Prevention.",
        "Computed": true
      },
      "dynamic_ip": {
        "Type": "Bool",
        "Description": "Dynamic IP address.",
        "Computed": true
      },
      "enable_https_inspection": {
        "Type": "Bool",
        "Description": "Enable HTTPS Inspection after defining an outbound inspection certificate.\nTo define the outbound certificate use \"set outbound-inspection-certificate\".",
        "Computed": true
      },
      "firewall": {
        "Type": "Bool",
        "Description": "Firewall blade enabled.",
        "Computed": true
      },
      "groups": {
        "Type": "List",
        "Description": "Level of details in the output corresponds to the number of details for search. This table shows the level of details in the Standard level.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "color": {
              "Type": "String",
              "Description": "Color of the object. Should be one of existing colors.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Object name. Must be unique in the domain.",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Object type.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "Object unique identifier.",
              "Computed": true
            }
          }
        }
      },
      "hit_count": {
        "Type": "Bool",
        "Description": "Hit count tracks the number of connections each rule matches.",
        "Computed": true
      },
      "https_inspection": {
        "Type": "List",
        "Description": "HTTPS inspection.",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bypass_on_failure": {
              "Type": "Map",
              "Description": "Set to be true in order to bypass all requests (Fail-open) in case of internal system error.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "deny_expired_server_cert": {
              "Type": "Map",
              "Description": "Action settings.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "deny_revoked_server_cert": {
              "Type": "Map",
              "Description": "Action settings.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "deny_untrusted_server_cert": {
              "Type": "Map",
              "Description": "Action settings.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "site_categorization_allow_mode": {
              "Type": "Map",
              "Description": "Set to 'background' in order to allowed requests until categorization is complete.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "interfaces": {
        "Type": "List",
        "Description": "Cluster network interfaces.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ips": {
        "Type": "Bool",
        "Description": "Intrusion Prevention System blade enabled.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "nat_hide_internal_interfaces": {
        "Type": "Bool",
        "Description": "Hide internal networks behind the Gateway's external IP.",
        "Computed": true
      },
      "nat_settings": {
        "Type": "Map",
        "Description": "NAT settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "os_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Gateway platform operating system."
      },
      "proxy_settings": {
        "Type": "Map",
        "Description": "N/A",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "qos": {
        "Type": "Bool",
        "Description": "QoS.",
        "Computed": true
      },
      "save_logs_locally": {
        "Type": "Bool",
        "Description": "Save logs locally on the gateway.",
        "Computed": true
      },
      "send_alerts_to_server": {
        "Type": "List",
        "Description": "Server(s) to send alerts to.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_backup_server": {
        "Type": "List",
        "Description": "Backup server(s) to send logs to.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_server": {
        "Type": "List",
        "Description": "Servers(s) to send logs to.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag objects identified by the name or UID. Level of details in the output corresponds to the number of details for search. This table shows the level of details in the Standard level.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "threat_emulation": {
        "Type": "Bool",
        "Description": "Threat Emulation blade enabled.",
        "Computed": true
      },
      "threat_extraction": {
        "Type": "Bool",
        "Description": "Threat Extraction blade enabled.",
        "Computed": true
      },
      "threat_prevention_mode": {
        "Type": "String",
        "Description": "The mode of Threat Prevention to use. When using Autonomous Threat Prevention, disabling the Threat Prevention blades is not allowed.",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Description": "Object type.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "url_filtering": {
        "Type": "Bool",
        "Description": "URL Filtering blade enabled.",
        "Computed": true
      },
      "version": {
        "Type": "String",
        "Description": "Gateway platform version.",
        "Computed": true
      },
      "vpn": {
        "Type": "Bool",
        "Description": "VPN blade enabled.",
        "Computed": true
      },
      "zero_phishing": {
        "Type": "Bool",
        "Description": "Zero Phishing blade enabled.",
        "Computed": true
      },
      "zero_phishing_fqdn": {
        "Type": "String",
        "Description": "Zero Phishing gateway FQDN.",
        "Computed": true
      }
    },
    "checkpoint_management_lsm_gateway_profile": {
      "advanced_settings": {
        "Type": "List",
        "Description": "N/A",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "connection_persistence": {
              "Type": "String",
              "Optional": true,
              "Description": "Handling established connections when installing a new policy."
            },
            "sam": {
              "Type": "List",
              "Description": "SAM.",
              "Computed": true,
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "forward_to_other_sam_servers": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Forward SAM clients' requests to other SAM servers."
                  },
                  "purge_sam_file": {
                    "Type": "Map",
                    "Description": "Purge SAM File.",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "use_early_versions": {
                    "Type": "Map",
                    "Description": "N/A",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "anti_bot": {
        "Type": "Bool",
        "Description": "Anti-Bot blade enabled.",
        "Computed": true
      },
      "anti_virus": {
        "Type": "Bool",
        "Description": "Anti-Virus blade enabled.",
        "Computed": true
      },
      "application_control": {
        "Type": "Bool",
        "Description": "Application Control blade enabled.",
        "Computed": true
      },
      "application_control_and_url_filtering_settings": {
        "Type": "List",
        "Description": "Gateway Application Control and URL filtering settings.",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "global_settings_mode": {
              "Type": "String",
              "Description": "Whether to override global settings or not.",
              "Computed": true
            },
            "override_global_settings": {
              "Type": "Map",
              "Description": "override global settings object.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "content_awareness": {
        "Type": "Bool",
        "Description": "Content Awareness blade enabled.",
        "Computed": true
      },
      "data_loss_prevention": {
        "Type": "Bool",
        "Description": "Data Loss Prevention.",
        "Computed": true
      },
      "dynamic_ip": {
        "Type": "Bool",
        "Description": "Dynamic IP address.",
        "Computed": true
      },
      "enable_https_inspection": {
        "Type": "Bool",
        "Description": "Enable HTTPS Inspection after defining an outbound inspection certificate.\nTo define the outbound certificate use \"set outbound-inspection-certificate\".",
        "Computed": true
      },
      "firewall": {
        "Type": "Bool",
        "Description": "Firewall blade enabled.",
        "Computed": true
      },
      "groups": {
        "Type": "List",
        "Description": "Level of details in the output corresponds to the number of details for search. This table shows the level of details in the Standard level.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "color": {
              "Type": "String",
              "Description": "Color of the object. Should be one of existing colors.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Object name. Must be unique in the domain.",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Object type.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "Object unique identifier.",
              "Computed": true
            }
          }
        }
      },
      "hit_count": {
        "Type": "Bool",
        "Description": "Hit count tracks the number of connections each rule matches.",
        "Computed": true
      },
      "https_inspection": {
        "Type": "List",
        "Description": "HTTPS inspection.",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bypass_on_failure": {
              "Type": "Map",
              "Description": "Set to be true in order to bypass all requests (Fail-open) in case of internal system error.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "deny_expired_server_cert": {
              "Type": "Map",
              "Description": "Action settings.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "deny_revoked_server_cert": {
              "Type": "Map",
              "Description": "Action settings.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "deny_untrusted_server_cert": {
              "Type": "Map",
              "Description": "Action settings.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "site_categorization_allow_mode": {
              "Type": "Map",
              "Description": "Set to 'background' in order to allowed requests until categorization is complete.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "interfaces": {
        "Type": "List",
        "Description": "Cluster network interfaces.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ips": {
        "Type": "Bool",
        "Description": "Intrusion Prevention System blade enabled.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "nat_hide_internal_interfaces": {
        "Type": "Bool",
        "Description": "Hide internal networks behind the Gateway's external IP.",
        "Computed": true
      },
      "nat_settings": {
        "Type": "Map",
        "Description": "NAT settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "os_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Gateway platform operating system."
      },
      "proxy_settings": {
        "Type": "Map",
        "Description": "N/A",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "qos": {
        "Type": "Bool",
        "Description": "QoS.",
        "Computed": true
      },
      "save_logs_locally": {
        "Type": "Bool",
        "Description": "Save logs locally on the gateway.",
        "Computed": true
      },
      "send_alerts_to_server": {
        "Type": "List",
        "Description": "Server(s) to send alerts to.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_backup_server": {
        "Type": "List",
        "Description": "Backup server(s) to send logs to.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_server": {
        "Type": "List",
        "Description": "Servers(s) to send logs to.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag objects identified by the name or UID. Level of details in the output corresponds to the number of details for search. This table shows the level of details in the Standard level.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "threat_emulation": {
        "Type": "Bool",
        "Description": "Threat Emulation blade enabled.",
        "Computed": true
      },
      "threat_extraction": {
        "Type": "Bool",
        "Description": "Threat Extraction blade enabled.",
        "Computed": true
      },
      "threat_prevention_mode": {
        "Type": "String",
        "Description": "The mode of Threat Prevention to use. When using Autonomous Threat Prevention, disabling the Threat Prevention blades is not allowed.",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Description": "Object type.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "url_filtering": {
        "Type": "Bool",
        "Description": "URL Filtering blade enabled.",
        "Computed": true
      },
      "version": {
        "Type": "String",
        "Description": "Gateway platform version.",
        "Computed": true
      },
      "vpn": {
        "Type": "Bool",
        "Description": "VPN blade enabled.",
        "Computed": true
      },
      "zero_phishing": {
        "Type": "Bool",
        "Description": "Zero Phishing blade enabled.",
        "Computed": true
      },
      "zero_phishing_fqdn": {
        "Type": "String",
        "Description": "Zero Phishing gateway FQDN.",
        "Computed": true
      }
    },
    "checkpoint_management_lsv_profile": {
      "allowed_ip_addresses": {
        "Type": "Set",
        "Description": "Collection of network objects identified by name or UID that represent IP addresses allowed in profile's VPN domain.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "certificate_authority": {
        "Type": "String",
        "Description": "Trusted Certificate authority for establishing trust between VPN peers, identified by name or UID.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "restrict_allowed_addresses": {
        "Type": "Bool",
        "Description": "Indicate whether the IP addresses allowed in the VPN Domain will be restricted or not, according to allowed-ip-addresses field.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag objects identified by the name or UID. Level of details in the output corresponds to the number of details for search. This table shows the level of details in the Standard level.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "vpn_domain": {
        "Type": "Map",
        "Description": "peers' VPN Domain properties.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_md_permissions_profile": {
      "cme_operations": {
        "Type": "String",
        "Description": "Permission to read / edit the Cloud Management Extension (CME) configuration.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "default_profile_global_domains": {
        "Type": "String",
        "Description": "Name or UID of the required default profile for all global domains.",
        "Computed": true
      },
      "default_profile_local_domains": {
        "Type": "String",
        "Description": "Name or UID of the required default profile for all local domains.",
        "Computed": true
      },
      "domains_to_process": {
        "Type": "Set",
        "Description": "Indicates which domains to process the commands on. It cannot be used with the details-level full, must be run from the System Domain only and with ignore-warnings true. Valid values are: CURRENT_DOMAIN, ALL_DOMAINS_ON_THIS_SERVER.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "enable_default_profile_for_global_domains": {
        "Type": "Bool",
        "Description": "Enable the option to specify a default profile for all global domains.",
        "Computed": true
      },
      "enable_default_profile_for_local_domains": {
        "Type": "Bool",
        "Description": "Enable the option to specify a default profile for all local domains.",
        "Computed": true
      },
      "global_vpn_management": {
        "Type": "Bool",
        "Description": "Lets the administrator select Enable global use for a Security Gateway shown in the MDS Gateways \u0026 Servers view.\u003cbr\u003eOnly a 'Manager' permission-level profile can edit this permission.",
        "Computed": true
      },
      "manage_admins": {
        "Type": "Bool",
        "Description": "Create and manage Multi-Domain Security Management administrators with the same or lower permission level. For example, a Domain manager cannot create Superusers or global managers.\u003cbr\u003eOnly a 'Manager' permission-level profile can edit this permission.",
        "Computed": true
      },
      "manage_global_assignments": {
        "Type": "Bool",
        "Description": "Controls the ability to create, edit and delete global assignment and not the ability to reassign, which is set according to the specific Domain's permission profile.",
        "Computed": true
      },
      "manage_sessions": {
        "Type": "Bool",
        "Description": "Connect/disconnect Domain sessions, publish changes, and delete other administrator sessions.\u003cbr\u003eOnly a 'Manager' permission-level profile can edit this permission.",
        "Computed": true
      },
      "management_api_login": {
        "Type": "Bool",
        "Description": "Permission to log in to the Security Management Server and run API commands using these tools: mgmt_cli (Linux and Windows binaries), Gaia CLI (clish) and Web Services (REST). Useful if you want to prevent administrators from running automatic scripts on the Management.\u003cbr\u003eNote: This permission is not required to run commands from within the API terminal in SmartConsole.",
        "Computed": true
      },
      "mds_provisioning": {
        "Type": "Bool",
        "Description": "Create and manage Multi-Domain Servers and Multi-Domain Log Servers.\u003cbr\u003eOnly a \"Super User\" permission-level profile can select this option.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "permission_level": {
        "Type": "String",
        "Description": "The level of the Multi Domain Permissions Profile.\u003cbr\u003eThe level cannot be changed after creation.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "view_global_objects_in_domain": {
        "Type": "Bool",
        "Description": "Lets an administrator with no global objects permissions view the global objects in the domain. This option is required for valid domain management.",
        "Computed": true
      }
    },
    "checkpoint_management_mds": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "domains": {
        "Type": "Set",
        "Description": "Collection of Domain objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "global_domains": {
        "Type": "Set",
        "Description": "Collection of Global domain objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hardware": {
        "Type": "String",
        "Description": "Hardware name. For example: Open server, Smart-1, Other.",
        "Computed": true
      },
      "ip_pool_first": {
        "Type": "String",
        "Description": "First IP address in the range.",
        "Computed": true
      },
      "ip_pool_last": {
        "Type": "String",
        "Description": "Last IP address in the range.",
        "Computed": true
      },
      "ipv4_address": {
        "Type": "String",
        "Description": "IPv4 address.",
        "Computed": true
      },
      "ipv6_address": {
        "Type": "String",
        "Description": "IPv6 address.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "os": {
        "Type": "String",
        "Description": "Operating system name. For example: Gaia, Linux, SecurePlatform.",
        "Computed": true
      },
      "server_type": {
        "Type": "String",
        "Description": "Type of the management server.",
        "Computed": true
      },
      "sic_name": {
        "Type": "String",
        "Description": "Name of the Secure Internal Connection Trust.",
        "Computed": true
      },
      "sic_state": {
        "Type": "String",
        "Description": "State the Secure Internal Connection Trust.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "version": {
        "Type": "String",
        "Description": "System version.",
        "Computed": true
      }
    },
    "checkpoint_management_nat_rule": {
      "auto_generated": {
        "Type": "Bool",
        "Description": "Auto generated.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "enabled": {
        "Type": "Bool",
        "Description": "Enable/Disable the rule.",
        "Computed": true
      },
      "install_on": {
        "Type": "Set",
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "method": {
        "Type": "String",
        "Description": "Nat method.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Rule name."
      },
      "original_destination": {
        "Type": "String",
        "Description": "Original destination.",
        "Computed": true
      },
      "original_service": {
        "Type": "String",
        "Description": "Original service.",
        "Computed": true
      },
      "original_source": {
        "Type": "String",
        "Description": "Original source.",
        "Computed": true
      },
      "package": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the package."
      },
      "translated_destination": {
        "Type": "String",
        "Description": "Translated destination.",
        "Computed": true
      },
      "translated_service": {
        "Type": "String",
        "Description": "Translated service.",
        "Computed": true
      },
      "translated_source": {
        "Type": "String",
        "Description": "Translated source.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Rule UID."
      }
    },
    "checkpoint_management_nat_rulebase": {
      "dereference_group_members": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When true, the source, destination and services \u0026 applications parameters are displayed as ranges of IP addresses and port numbers rather than network objects.\nObjects that are not represented using IP addresses or port numbers are presented as objects.\nIn addition, the response of each rule does not contain the parameters: source, source-negate, destination, destination-negate, service and service-negate, but instead it contains the parameters: source-ranges, destination-ranges and service-ranges.\n\nNote: Requesting to show rules as ranges is limited up to 20 rules per request, otherwise an error is returned. If you wish to request more rules, use the offset and limit parameters to limit your request.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "filter": {
        "Type": "String",
        "Optional": true,
        "Description": "Search expression to filter the rulebase. The provided text should be exactly the same as it would be given in Smart Console. The logical operators in the expression ('AND', 'OR') should be provided in capital letters. If an operator is not used, the default OR operator applies."
      },
      "filter_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Sets filter preferences.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximal number of returned results.",
        "Default": {
          "Type": "int",
          "Value": "50"
        }
      },
      "offset": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of the results to initially skip.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "order": {
        "Type": "List",
        "Optional": true,
        "Description": "Sorts the results by search criteria. Automatically sorts the results by Name, in the ascending order.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "asc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in ascending order."
            },
            "desc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in descending order."
            }
          }
        }
      },
      "package": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the package."
      },
      "rulebase": {
        "Type": "List",
        "Description": "The show rulebase api reply",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "from": {
              "Type": "Int",
              "Description": "From which element number the query was done.",
              "Computed": true
            },
            "objects_dictionary": {
              "Type": "List",
              "Description": "Level of details in the output corresponds to the number of details for search. This table shows the level of details in the Standard level.",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Description": "Object name. Must be unique in the domain",
                    "Computed": true
                  },
                  "type": {
                    "Type": "String",
                    "Description": "Object type.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Object unique identifier.",
                    "Computed": true
                  }
                }
              }
            },
            "rulebase": {
              "Type": "List",
              "Description": "N/A",
              "Computed": true,
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "auto_generated": {
                    "Type": "Bool",
                    "Description": "service resource.",
                    "Computed": true
                  },
                  "comments": {
                    "Type": "String",
                    "Description": "Comments string.",
                    "Computed": true
                  },
                  "enabled": {
                    "Type": "Bool",
                    "Description": "Enable/Disable the rule.",
                    "Computed": true
                  },
                  "install_on": {
                    "Type": "List",
                    "Description": "Which Gateways identified by the name or UID to install the policy on.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "method": {
                    "Type": "String",
                    "Description": "Communities or Directional.",
                    "Computed": true
                  },
                  "name": {
                    "Type": "String",
                    "Description": "Rules name.",
                    "Computed": true
                  },
                  "original_destination": {
                    "Type": "String",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true
                  },
                  "original_service": {
                    "Type": "String",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true
                  },
                  "original_source": {
                    "Type": "String",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true
                  },
                  "rule_number": {
                    "Type": "Int",
                    "Description": "Number of the rule.",
                    "Computed": true
                  },
                  "rulebase": {
                    "Type": "List",
                    "Description": "N/A",
                    "Computed": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "ComputedBlock",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "auto_generated": {
                          "Type": "Bool",
                          "Description": "service resource.",
                          "Computed": true
                        },
                        "comments": {
                          "Type": "String",
                          "Description": "Comments string.",
                          "Computed": true
                        },
                        "enabled": {
                          "Type": "Bool",
                          "Description": "Enable/Disable the rule.",
                          "Computed": true
                        },
                        "install_on": {
                          "Type": "List",
                          "Description": "Which Gateways identified by the name or UID to install the policy on.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        },
                        "method": {
                          "Type": "String",
                          "Description": "Communities or Directional.",
                          "Computed": true
                        },
                        "name": {
                          "Type": "String",
                          "Description": "Rules name.",
                          "Computed": true
                        },
                        "original_destination": {
                          "Type": "String",
                          "Description": "Collection of Network objects identified by the name or UID.",
                          "Computed": true
                        },
                        "original_service": {
                          "Type": "String",
                          "Description": "Collection of Network objects identified by the name or UID.",
                          "Computed": true
                        },
                        "original_source": {
                          "Type": "String",
                          "Description": "Collection of Network objects identified by the name or UID.",
                          "Computed": true
                        },
                        "rule_number": {
                          "Type": "Int",
                          "Description": "Number of the rule.",
                          "Computed": true
                        },
                        "translated_destination": {
                          "Type": "String",
                          "Description": "True if negate is set for destination.",
                          "Computed": true
                        },
                        "translated_service": {
                          "Type": "String",
                          "Description": "True if negate is set for service.",
                          "Computed": true
                        },
                        "translated_source": {
                          "Type": "String",
                          "Description": "True if negate is set for source.",
                          "Computed": true
                        },
                        "type": {
                          "Type": "String",
                          "Description": "Rules type.",
                          "Computed": true
                        },
                        "uid": {
                          "Type": "String",
                          "Description": "Rules uid.",
                          "Computed": true
                        }
                      }
                    }
                  },
                  "translated_destination": {
                    "Type": "String",
                    "Description": "True if negate is set for destination.",
                    "Computed": true
                  },
                  "translated_service": {
                    "Type": "String",
                    "Description": "True if negate is set for service.",
                    "Computed": true
                  },
                  "translated_source": {
                    "Type": "String",
                    "Description": "True if negate is set for source.",
                    "Computed": true
                  },
                  "type": {
                    "Type": "String",
                    "Description": "Rules type.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Rules uid.",
                    "Computed": true
                  }
                }
              }
            },
            "to": {
              "Type": "Int",
              "Description": "To which element number the query was done.",
              "Computed": true
            },
            "total": {
              "Type": "Int",
              "Description": "Total number of elements returned by the query.",
              "Computed": true
            }
          }
        }
      },
      "show_membership": {
        "Type": "Bool",
        "Optional": true,
        "Description": "N/A",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_nat_section": {
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "package": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the package."
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_network_feed": {
      "certificate_id": {
        "Type": "String",
        "Description": "Certificate SHA-1 fingerprint to access the feed.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "custom_header": {
        "Type": "List",
        "Description": "Headers to allow different authentication methods with the URL.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "header_name": {
              "Type": "String",
              "Description": "The name of the HTTP header we wish to add.",
              "Computed": true
            },
            "header_value": {
              "Type": "String",
              "Description": "The name of the HTTP value we wish to add.",
              "Computed": true
            }
          }
        }
      },
      "data_column": {
        "Type": "Int",
        "Description": "Number of the column that contains the feed's data.",
        "Computed": true
      },
      "domains_to_process": {
        "Type": "Set",
        "Description": "Indicates which domains to process the commands on. It cannot be used with the details-level full, must be run from the System Domain only and with ignore-warnings true. Valid values are: CURRENT_DOMAIN, ALL_DOMAINS_ON_THIS_SERVER.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "feed_format": {
        "Type": "String",
        "Description": "Feed file format.",
        "Computed": true
      },
      "feed_type": {
        "Type": "String",
        "Description": "Feed type to be enforced.",
        "Computed": true
      },
      "feed_url": {
        "Type": "String",
        "Description": "URL of the feed. URL should be written as http or https.",
        "Computed": true
      },
      "fields_delimiter": {
        "Type": "String",
        "Description": "The delimiter that separates between the columns in the feed. For feed format 'Flat List' default is '\n'(new line).",
        "Computed": true
      },
      "ignore_lines_that_start_with": {
        "Type": "String",
        "Description": "A prefix that will determine which lines to ignore.",
        "Computed": true
      },
      "json_query": {
        "Type": "String",
        "Description": "JQ query to be parsed.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "update_interval": {
        "Type": "Int",
        "Description": "Interval in minutes for updating the feed on the Security Gateway.",
        "Computed": true
      },
      "use_gateway_proxy": {
        "Type": "Bool",
        "Description": "Use the gateway's proxy for retrieving the feed.",
        "Computed": true
      },
      "username": {
        "Type": "String",
        "Description": "username for authenticating with the URL.",
        "Computed": true
      }
    },
    "checkpoint_management_nuage_data_center_server": {
      "certificate_fingerprint": {
        "Type": "String",
        "Description": "Specify the SHA-1 or SHA-256 fingerprint of the Data Center Server's certificate.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Computed": true
      },
      "hostname": {
        "Type": "String",
        "Description": "IP address or hostname of the Nuage server.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "organization": {
        "Type": "String",
        "Description": "Organization name or enterprise.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Computed": true
      },
      "username": {
        "Type": "String",
        "Description": "Username of the Nuage administrator.",
        "Computed": true
      }
    },
    "checkpoint_management_objects": {
      "dereference_group_members": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether to dereference \"members\" field by details level for every object in reply.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "domains_to_process": {
        "Type": "Set",
        "Optional": true,
        "Description": "Indicates which domains to process the commands on. It cannot be used with the details-level full, must be run from the System Domain only and with ignore-warnings true. Valid values are: CURRENT_DOMAIN, ALL_DOMAINS_ON_THIS_SERVER.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "filter": {
        "Type": "String",
        "Optional": true,
        "Description": "Search expression to filter objects by. The provided text should be exactly the same as it would be given in Smart Console. The logical operators in the expression ('AND', 'OR') should be provided in capital letters. By default, the search involves both a textual search and a IP search. To use IP search only, set the \"ip-only\" parameter to true."
      },
      "from": {
        "Type": "Int",
        "Description": "From which element number the query was done.",
        "Computed": true
      },
      "ip_only": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If using \"filter\", use this field to search objects by their IP address only, without involving the textual search.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximal number of returned results.",
        "Default": {
          "Type": "int",
          "Value": "50"
        }
      },
      "objects": {
        "Type": "List",
        "Description": "Level of details in the output corresponds to the number of details for search. This table shows the level of details in the Standard level. In case of details-level is set to full, all unsupported objects will be shown with a warning saying that the response could change when support for these object is added.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "color": {
              "Type": "String",
              "Description": "Color of the object. Should be one of existing colors.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Object name. Must be unique in the domain.",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Object type.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "Object unique identifier.",
              "Computed": true
            }
          }
        }
      },
      "offset": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of the results to initially skip.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "order": {
        "Type": "List",
        "Optional": true,
        "Description": "Sorts the results by search criteria. Automatically sorts the results by Name, in the ascending order.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "asc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in ascending order."
            },
            "desc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in descending order."
            }
          }
        }
      },
      "show_membership": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether to calculate and show \"groups\" field for every object in reply."
      },
      "to": {
        "Type": "Int",
        "Description": "To which element number the query was done.",
        "Computed": true
      },
      "total": {
        "Type": "Int",
        "Description": "Total number of elements returned by the query.",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "The objects' type, e.g.: host, service-tcp, network, address-range...",
        "Default": {
          "Type": "string",
          "Value": "object"
        }
      },
      "uids": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of UIDs of the objects to retrieve.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_openstack_data_center_server": {
      "certificate_fingerprint": {
        "Type": "String",
        "Description": "Specify the SHA-1 or SHA-256 fingerprint of the Data Center Server's certificate.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Computed": true
      },
      "hostname": {
        "Type": "String",
        "Description": "URL of the OpenStack server.\nhttp(s)://\u003chost\u003e:\u003cport\u003e/\u003cversion\u003e\nExample: https://1.2.3.4:5000/v2.0",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Computed": true
      },
      "username": {
        "Type": "String",
        "Description": "Username of the OpenStack server.\nTo login to specific domain insert domain name before username.\nExample: \u003cdomain\u003e/\u003cusername\u003e",
        "Computed": true
      }
    },
    "checkpoint_management_policy_settings": {
      "last_in_cell": {
        "Type": "String",
        "Description": "Added object after removing the last object in cell.",
        "Computed": true
      },
      "none_object_behavior": {
        "Type": "String",
        "Description": "'None' object behavior. Rules with object 'None' will never be matched.",
        "Computed": true
      },
      "security_access_defaults": {
        "Type": "Map",
        "Description": "Access Policy default values.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_provisioning_profile": {
      "configuration_script": {
        "Type": "Map",
        "Description": "NAT settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "dns": {
        "Type": "Map",
        "Description": "DNS Settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "domain_name": {
        "Type": "Map",
        "Description": "Domain Name Settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "groups": {
        "Type": "List",
        "Description": "Level of details in the output corresponds to the number of details for search. This table shows the level of details in the Standard level.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "color": {
              "Type": "String",
              "Description": "Color of the object. Should be one of existing colors.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Object name. Must be unique in the domain.",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Object type.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "Object unique identifier.",
              "Computed": true
            }
          }
        }
      },
      "hosts": {
        "Type": "List",
        "Description": "Hosts Settings.",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "hosts": {
              "Type": "List",
              "Description": "Hosts Settings.",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "host_ip_address": {
                    "Type": "String",
                    "Description": "Host IP-Address.",
                    "Computed": true
                  },
                  "host_name": {
                    "Type": "String",
                    "Description": "Host Name.",
                    "Computed": true
                  }
                }
              }
            },
            "manage_settings": {
              "Type": "String",
              "Optional": true,
              "Description": "Manage settings mode: locally on the device or centrally from this application."
            },
            "override_settings": {
              "Type": "String",
              "Optional": true,
              "Description": "Override settings mode: allowed, mandatory or denied. Relevant only when settings are managed centrally."
            }
          }
        }
      },
      "hotspot": {
        "Type": "List",
        "Description": "Hotspot Settings. Relevant only for Gaia Embedded (SMB) profile.",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "allow_users_from_specific_group": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Allow users from specific group."
            },
            "allowed_users_groups": {
              "Type": "List",
              "Description": "Allowed users groups.",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "display_terms_of_use": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Use terms of use."
            },
            "enabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Hotspot enabled on device."
            },
            "manage_settings": {
              "Type": "String",
              "Optional": true,
              "Description": "Manage settings mode: locally on the device or centrally from this application."
            },
            "override_settings": {
              "Type": "String",
              "Optional": true,
              "Description": "Override settings mode: allowed, mandatory or denied. Relevant only when settings are managed centrally."
            },
            "portal_message": {
              "Type": "String",
              "Optional": true,
              "Description": "Portal message."
            },
            "portal_title": {
              "Type": "String",
              "Optional": true,
              "Description": "Portal title."
            },
            "require_authentication": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Require authentication."
            },
            "terms_of_use": {
              "Type": "String",
              "Optional": true,
              "Description": "Terms of use."
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "N/A"
      },
      "radius": {
        "Type": "List",
        "Description": "RADIUS Servers Settings. Relevant only for Gaia Embedded (SMB) profile.",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "allow_administrators_from_specific_radius_group_only": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Allow administrators from specific radius group only."
            },
            "allowed_radius_groups": {
              "Type": "List",
              "Description": "Allowed radius groups.",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "enabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Hotspot enabled on device."
            },
            "manage_settings": {
              "Type": "String",
              "Optional": true,
              "Description": "Manage settings mode: locally on the device or centrally from this application."
            },
            "override_settings": {
              "Type": "String",
              "Optional": true,
              "Description": "Override settings mode: allowed, mandatory or denied. Relevant only when settings are managed centrally."
            },
            "radius_servers": {
              "Type": "List",
              "Description": "RADIUS Servers.",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "radius_server_name": {
                    "Type": "String",
                    "Description": "Radius server Name.",
                    "Computed": true
                  }
                }
              }
            }
          }
        }
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag objects identified by the name or UID. Level of details in the output corresponds to the number of details for search. This table shows the level of details in the Standard level.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "type": {
        "Type": "String",
        "Description": "Object type.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Cluster member unique identifier."
      }
    },
    "checkpoint_management_radius_group": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "members": {
        "Type": "Set",
        "Description": "Collection of radius servers identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_radius_server": {
      "accounting": {
        "Type": "Map",
        "Description": "Accounting settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "priority": {
        "Type": "Int",
        "Description": "The priority of the RADIUS Server in case it is a member of a RADIUS Group.",
        "Computed": true
      },
      "protocol": {
        "Type": "String",
        "Description": "The type of authentication protocol that will be used when authenticating the user to the RADIUS server.",
        "Computed": true
      },
      "server": {
        "Type": "String",
        "Description": "The UID or Name of the host that is the RADIUS Server.",
        "Computed": true
      },
      "service": {
        "Type": "String",
        "Description": "The UID or Name of the Service to which the RADIUS server listens.",
        "Computed": true
      },
      "shared_secret": {
        "Type": "String",
        "Description": "The secret between the RADIUS server and the Security Gateway.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "version": {
        "Type": "String",
        "Description": "The version can be either RADIUS Version 1.0, which is RFC 2138 compliant, and RADIUS Version 2.0 which is RFC 2865 compliant.",
        "Computed": true
      }
    },
    "checkpoint_management_repository_package": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the repository package."
      },
      "task_id": {
        "Type": "String",
        "Description": "Unique identifier of the 'show-repository-package' task. Use the 'show-task' command to check the progress of the task.",
        "Computed": true
      }
    },
    "checkpoint_management_repository_script": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "script_body": {
        "Type": "String",
        "Description": "The entire content of the script.",
        "Computed": true
      },
      "script_body_base64": {
        "Type": "String",
        "Description": "The entire content of the script encoded in Base64.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      }
    },
    "checkpoint_management_service_citrix_tcp": {
      "application": {
        "Type": "String",
        "Description": "Citrix application name.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_service_compound_tcp": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "compound_service": {
        "Type": "String",
        "Description": "Compound service type.",
        "Computed": true
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_show_objects": {
      "filter": {
        "Type": "String",
        "Optional": true,
        "Description": "Search expression to filter objects by. The provided text should be exactly the same as it would be given in Smart Console. The logical operators in the expression ('AND', 'OR') should be provided in capital letters. By default, the search involves both a textual search and a IP search. To use IP search only, set the \"ip-only\" parameter to true."
      },
      "from": {
        "Type": "Int",
        "Description": "From which element number the query was done.",
        "Computed": true
      },
      "ip_only": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If using \"filter\", use this field to search objects by their IP address only, without involving the textual search."
      },
      "limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximal number of returned results."
      },
      "objects": {
        "Type": "List",
        "Description": "Objects list",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "domain": {
              "Type": "Map",
              "Description": "Information about the domain that holds the Object.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Description": "Object name.",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Object type.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "Object unique identifier.",
              "Computed": true
            }
          }
        }
      },
      "offset": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of the results to initially skip."
      },
      "order": {
        "Type": "List",
        "Optional": true,
        "Description": "Sorts the results by search criteria. Automatically sorts the results by Name, in the ascending order.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "asc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in ascending order."
            },
            "desc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in descending order."
            }
          }
        }
      },
      "to": {
        "Type": "Int",
        "Description": "To which element number the query was done.",
        "Computed": true
      },
      "total": {
        "Type": "Int",
        "Description": "Total number of elements returned by the query.",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "The objects' type, e.g.: host, service-tcp, network, address-range...",
        "Default": {
          "Type": "string",
          "Value": "object"
        }
      }
    },
    "checkpoint_management_show_updatable_objects_repository_content": {
      "filter": {
        "Type": "Map",
        "Optional": true,
        "Description": "Return results matching the specified filter.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "from": {
        "Type": "Int",
        "Description": "From which element number the query was done.",
        "Computed": true
      },
      "limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximal number of returned results."
      },
      "objects": {
        "Type": "List",
        "Description": "Objects list",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "additional_properties": {
              "Type": "Map",
              "Description": "Additional properties on the object.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name_in_updatable_objects_repository": {
              "Type": "String",
              "Description": "Object name in the Updatable Objects Repository.",
              "Computed": true
            },
            "uid_in_updatable_objects_repository": {
              "Type": "String",
              "Description": "Unique identifier of the object in the Updatable Objects Repository.",
              "Computed": true
            },
            "updatable_object": {
              "Type": "Map",
              "Description": "The imported management object (if exists).",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "offset": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of the results to initially skip."
      },
      "order": {
        "Type": "List",
        "Optional": true,
        "Description": "Sorts the results by search criteria. Automatically sorts the results by Name, in the ascending order.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "asc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in ascending order."
            },
            "desc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in descending order."
            }
          }
        }
      },
      "to": {
        "Type": "Int",
        "Description": "To which element number the query was done.",
        "Computed": true
      },
      "total": {
        "Type": "Int",
        "Description": "Total number of elements returned by the query.",
        "Computed": true
      },
      "uid_in_updatable_objects_repository": {
        "Type": "String",
        "Optional": true,
        "Description": "The object's unique identifier in the Updatable Objects repository."
      }
    },
    "checkpoint_management_simple_cluster": {
      "anti_bot": {
        "Type": "Bool",
        "Description": "Anti-Bot blade enabled.",
        "Computed": true
      },
      "anti_virus": {
        "Type": "Bool",
        "Description": "Anti-Virus blade enabled.",
        "Computed": true
      },
      "application_control": {
        "Type": "Bool",
        "Description": "Application Control blade enabled.",
        "Computed": true
      },
      "cluster_mode": {
        "Type": "String",
        "Description": "Cluster mode.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "content_awareness": {
        "Type": "Bool",
        "Description": "Content Awareness blade enabled.",
        "Computed": true
      },
      "data_awareness": {
        "Type": "Bool",
        "Description": "Data Awareness blade enabled.",
        "Computed": true
      },
      "dynamic_ip": {
        "Type": "Bool",
        "Description": "Dynamic IP address.",
        "Computed": true
      },
      "firewall": {
        "Type": "Bool",
        "Description": "Firewall blade enabled.",
        "Computed": true
      },
      "firewall_settings": {
        "Type": "Map",
        "Description": "Firewall settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hardware": {
        "Type": "String",
        "Description": "Cluster platform hardware.",
        "Computed": true
      },
      "interfaces": {
        "Type": "List",
        "Description": "Network interfaces.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "anti_spoofing": {
              "Type": "Bool",
              "Description": "Anti spoofing.",
              "Computed": true
            },
            "anti_spoofing_settings": {
              "Type": "Map",
              "Description": "Anti spoofing settings",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "color": {
              "Type": "String",
              "Description": "Color of the object. Should be one of existing colors.",
              "Computed": true
            },
            "comments": {
              "Type": "String",
              "Description": "Comments string.",
              "Computed": true
            },
            "interface_type": {
              "Type": "String",
              "Description": "Cluster interface type.",
              "Computed": true
            },
            "ipv4_address": {
              "Type": "String",
              "Description": "IPv4 address.",
              "Computed": true
            },
            "ipv4_mask_length": {
              "Type": "String",
              "Description": "IPv4 network mask length.",
              "Computed": true
            },
            "ipv4_network_mask": {
              "Type": "String",
              "Description": "IPv4 network address.",
              "Computed": true
            },
            "ipv6_address": {
              "Type": "String",
              "Description": "IPv6 address.",
              "Computed": true
            },
            "ipv6_mask_length": {
              "Type": "String",
              "Description": "IPv6 network mask length.",
              "Computed": true
            },
            "ipv6_network_mask": {
              "Type": "String",
              "Description": "IPv6 network address.",
              "Computed": true
            },
            "multicast_address": {
              "Type": "String",
              "Description": "Multicast IP Address.",
              "Computed": true
            },
            "multicast_address_type": {
              "Type": "String",
              "Description": "Multicast Address Type.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Object name. Should be unique in the domain.",
              "Computed": true
            },
            "security_zone": {
              "Type": "Bool",
              "Description": "Security zone.",
              "Computed": true
            },
            "security_zone_settings": {
              "Type": "Map",
              "Description": "Security zone settings.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "topology": {
              "Type": "String",
              "Description": "Topology.",
              "Computed": true
            },
            "topology_automatic_calculation": {
              "Type": "String",
              "Description": "Shows the automatic topology calculation.",
              "Computed": true
            },
            "topology_settings": {
              "Type": "Map",
              "Description": "Topology settings.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "ips": {
        "Type": "Bool",
        "Description": "Intrusion Prevention System blade enabled.",
        "Computed": true
      },
      "ipv4_address": {
        "Type": "String",
        "Description": "IPv4 address.",
        "Computed": true
      },
      "ipv6_address": {
        "Type": "String",
        "Description": "IPv6 address.",
        "Computed": true
      },
      "logs_settings": {
        "Type": "Map",
        "Description": "Logs settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "members": {
        "Type": "List",
        "Description": "Cluster members.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "interfaces": {
              "Type": "List",
              "Description": "Network interfaces.",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "ipv4_address": {
                    "Type": "String",
                    "Description": "IPv4 address.",
                    "Computed": true
                  },
                  "ipv4_mask_length": {
                    "Type": "String",
                    "Description": "IPv4 network mask length.",
                    "Computed": true
                  },
                  "ipv4_network_mask": {
                    "Type": "String",
                    "Description": "IPv4 network address.",
                    "Computed": true
                  },
                  "ipv6_address": {
                    "Type": "String",
                    "Description": "IPv6 address.",
                    "Computed": true
                  },
                  "ipv6_mask_length": {
                    "Type": "String",
                    "Description": "IPv6 network mask length.",
                    "Computed": true
                  },
                  "ipv6_network_mask": {
                    "Type": "String",
                    "Description": "IPv6 network address.",
                    "Computed": true
                  },
                  "name": {
                    "Type": "String",
                    "Description": "Object name. Should be unique in the domain.",
                    "Computed": true
                  }
                }
              }
            },
            "ip_address": {
              "Type": "String",
              "Description": "IPv4 or IPv6 address.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Object name. Should be unique in the domain.",
              "Computed": true
            },
            "sic_message": {
              "Type": "String",
              "Description": "Secure Internal Communication state.",
              "Computed": true
            },
            "sic_state": {
              "Type": "String",
              "Description": "Secure Internal Communication name.",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "os_name": {
        "Type": "String",
        "Description": "OS name.",
        "Computed": true
      },
      "save_logs_locally": {
        "Type": "Bool",
        "Description": "Save logs locally.",
        "Computed": true
      },
      "send_alerts_to_server": {
        "Type": "Set",
        "Description": "Server(s) to send alerts to.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_backup_server": {
        "Type": "Set",
        "Description": "Backup server(s) to send logs to.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_server": {
        "Type": "Set",
        "Description": "Server(s) to send logs to.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "sic_name": {
        "Type": "String",
        "Description": "Secure Internal Communication name.",
        "Computed": true
      },
      "sic_state": {
        "Type": "String",
        "Description": "Secure Internal Communication state.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "threat_emulation": {
        "Type": "Bool",
        "Description": "Threat Emulation blade enabled.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "url_filtering": {
        "Type": "Bool",
        "Description": "URL Filtering blade enabled.",
        "Computed": true
      },
      "version": {
        "Type": "String",
        "Description": "Cluster platform version.",
        "Computed": true
      },
      "vpn": {
        "Type": "Bool",
        "Description": "VPN blade enabled.",
        "Computed": true
      },
      "vpn_settings": {
        "Type": "Map",
        "Description": "Gateway VPN settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_simple_gateway": {
      "anti_bot": {
        "Type": "Bool",
        "Description": "Anti-Bot blade enabled.",
        "Computed": true
      },
      "anti_virus": {
        "Type": "Bool",
        "Description": "Anti-Virus blade enabled.",
        "Computed": true
      },
      "application_control": {
        "Type": "Bool",
        "Description": "Application Control blade enabled.",
        "Computed": true
      },
      "application_control_and_url_filtering_settings": {
        "Type": "List",
        "Description": "Gateway Application Control and URL filtering settings.",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "global_settings_mode": {
              "Type": "String",
              "Description": "Whether to override global settings or not.",
              "Computed": true
            },
            "override_global_settings": {
              "Type": "Map",
              "Description": "override global settings object.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "content_awareness": {
        "Type": "Bool",
        "Description": "Content Awareness blade enabled.",
        "Computed": true
      },
      "dynamic_ip": {
        "Type": "Bool",
        "Description": "Dynamic IP address.",
        "Computed": true
      },
      "firewall": {
        "Type": "Bool",
        "Description": "Firewall blade enabled.",
        "Computed": true
      },
      "firewall_settings": {
        "Type": "Map",
        "Description": "Firewall settings",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hardware": {
        "Type": "String",
        "Description": "Gateway platform hardware type.",
        "Computed": true
      },
      "icap_server": {
        "Type": "Bool",
        "Description": "ICAP Server enabled.",
        "Computed": true
      },
      "interfaces": {
        "Type": "List",
        "Description": "Network interfaces.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "anti_spoofing": {
              "Type": "Bool",
              "Description": "Anti spoofing.",
              "Computed": true
            },
            "anti_spoofing_settings": {
              "Type": "Map",
              "Description": "Anti spoofing settings",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "color": {
              "Type": "String",
              "Description": "Color of the object. Should be one of existing colors.",
              "Computed": true
            },
            "comments": {
              "Type": "String",
              "Description": "Comments string.",
              "Computed": true
            },
            "ipv4_address": {
              "Type": "String",
              "Description": "IPv4 address.",
              "Computed": true
            },
            "ipv4_mask_length": {
              "Type": "String",
              "Description": "IPv4 network mask length.",
              "Computed": true
            },
            "ipv4_network_mask": {
              "Type": "String",
              "Description": "IPv4 network address.",
              "Computed": true
            },
            "ipv6_address": {
              "Type": "String",
              "Description": "IPv6 address.",
              "Computed": true
            },
            "ipv6_mask_length": {
              "Type": "String",
              "Description": "IPv6 network mask length.",
              "Computed": true
            },
            "ipv6_network_mask": {
              "Type": "String",
              "Description": "IPv6 network address.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Object name. Should be unique in the domain.",
              "Computed": true
            },
            "security_zone": {
              "Type": "Bool",
              "Description": "Security zone.",
              "Computed": true
            },
            "security_zone_settings": {
              "Type": "Map",
              "Description": "Security zone settings.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "topology": {
              "Type": "String",
              "Description": "Topology.",
              "Computed": true
            },
            "topology_automatic_calculation": {
              "Type": "String",
              "Description": "Shows the automatic topology calculation.",
              "Computed": true
            },
            "topology_settings": {
              "Type": "Map",
              "Description": "Topology settings.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "ips": {
        "Type": "Bool",
        "Description": "Intrusion Prevention System blade enabled.",
        "Computed": true
      },
      "ipv4_address": {
        "Type": "String",
        "Description": "IPv4 address.",
        "Computed": true
      },
      "ipv6_address": {
        "Type": "String",
        "Description": "IPv6 address.",
        "Computed": true
      },
      "logs_settings": {
        "Type": "Map",
        "Description": "Logs settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "one_time_password": {
        "Type": "String",
        "Description": "SIC one time password.",
        "Computed": true
      },
      "os_name": {
        "Type": "String",
        "Description": "OS name.",
        "Computed": true
      },
      "save_logs_locally": {
        "Type": "Bool",
        "Description": "Save logs locally.",
        "Computed": true
      },
      "send_alerts_to_server": {
        "Type": "Set",
        "Description": "Server(s) to send alerts to.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_backup_server": {
        "Type": "Set",
        "Description": "Backup server(s) to send logs to.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_server": {
        "Type": "Set",
        "Description": "Server(s) to send logs to.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "sic_name": {
        "Type": "String",
        "Description": "Secure Internal Communication name.",
        "Computed": true
      },
      "sic_state": {
        "Type": "String",
        "Description": "Secure Internal Communication state.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "threat_emulation": {
        "Type": "Bool",
        "Description": "Threat Emulation blade enabled.",
        "Computed": true
      },
      "threat_extraction": {
        "Type": "Bool",
        "Description": "Threat Extraction blade enabled.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "url_filtering": {
        "Type": "Bool",
        "Description": "URL Filtering blade enabled.",
        "Computed": true
      },
      "version": {
        "Type": "String",
        "Description": "Gateway platform version.",
        "Computed": true
      },
      "vpn": {
        "Type": "Bool",
        "Description": "VPN blade enabled.",
        "Computed": true
      },
      "vpn_settings": {
        "Type": "Map",
        "Description": "Gateway VPN settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_smart_task_trigger": {
      "before_operation": {
        "Type": "Bool",
        "Description": "Whether or not this trigger is fired before an operation.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The level of detail for some of the fields in the response can vary from showing only the UID value of the object to a fully detailed representation of the object."
      },
      "type": {
        "Type": "String",
        "Description": "Object type.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_smtp_server": {
      "authentication": {
        "Type": "Bool",
        "Description": "Does the mail server requires authentication.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "domains_to_process": {
        "Type": "Set",
        "Description": "Indicates which domains to process the commands on. It cannot be used with the details-level full, must be run from the System Domain only and with ignore-warnings true. Valid values are: CURRENT_DOMAIN, ALL_DOMAINS_ON_THIS_SERVER.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "encryption": {
        "Type": "String",
        "Description": "Encryption type.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "password": {
        "Type": "String",
        "Description": "A password for the SMTP server.\u003cbr\u003e\u003cfont color=\"red\"\u003eRequired only if\u003c/font\u003e authentication is set to true.",
        "Computed": true
      },
      "port": {
        "Type": "Int",
        "Description": "The SMTP port to use.",
        "Computed": true
      },
      "server": {
        "Type": "String",
        "Description": "The SMTP server address.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "username": {
        "Type": "String",
        "Description": "A username for the SMTP server.\u003cbr\u003e\u003cfont color=\"red\"\u003eRequired only if\u003c/font\u003e authentication is set to true.",
        "Computed": true
      }
    },
    "checkpoint_management_tacacs_group": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "members": {
        "Type": "Set",
        "Description": "Collection of tacacs servers identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain"
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_tag": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain"
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_task": {
      "task_id": {
        "Type": "Set",
        "Required": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tasks": {
        "Type": "List",
        "Description": "N/A",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "comments": {
              "Type": "String",
              "Description": "Comments string.",
              "Computed": true
            },
            "progress_percentage": {
              "Type": "Int",
              "Description": "N/A",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "Task status.",
              "Computed": true
            },
            "suppressed": {
              "Type": "Bool",
              "Description": "N/A",
              "Computed": true
            },
            "task_id": {
              "Type": "String",
              "Description": "Asynchronous task unique identifier. Use show-task command to check the progress of the task.",
              "Computed": true
            },
            "task_name": {
              "Type": "String",
              "Description": "N/A",
              "Computed": true
            }
          }
        }
      }
    },
    "checkpoint_management_threat_advanced_settings": {
      "feed_retrieving_interval": {
        "Type": "String",
        "Description": "Feed retrieving intervals of External Feed, in the form of HH:MM.",
        "Computed": true
      },
      "httpi_non_standard_ports": {
        "Type": "Bool",
        "Description": "Enable HTTP Inspection on non standard ports for Threat Prevention blades.",
        "Computed": true
      },
      "internal_error_fail_mode": {
        "Type": "String",
        "Description": "In case of internal system error, allow or block all connections.",
        "Computed": true
      },
      "log_unification_timeout": {
        "Type": "Int",
        "Description": "Session unification timeout for logs (minutes).",
        "Computed": true
      },
      "resource_classification": {
        "Type": "Map",
        "Description": "Allow (Background) or Block (Hold) requests until categorization is complete.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "type": {
        "Type": "String",
        "Description": "Object type.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Description": "Object unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_threat_exception": {
      "action": {
        "Type": "String",
        "Description": "Action-the enforced profile.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "destination": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "destination_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for destination.",
        "Computed": true
      },
      "enabled": {
        "Type": "Bool",
        "Description": "Enable/Disable the rule.",
        "Computed": true
      },
      "exception_group_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the exception-group."
      },
      "exception_group_uid": {
        "Type": "String",
        "Optional": true,
        "Description": "The UID of the exception-group."
      },
      "install_on": {
        "Type": "Set",
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that the rule belongs to identified by the name or UID."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the exception."
      },
      "owner": {
        "Type": "String",
        "Description": "Owner UID.",
        "Computed": true
      },
      "protected_scope": {
        "Type": "Set",
        "Description": "Collection of objects defining Protected Scope identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "protected_scope_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for Protected Scope.",
        "Computed": true
      },
      "protection_or_site": {
        "Type": "Set",
        "Description": "Name of the protection or site.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "rule_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the parent rule."
      },
      "rule_uid": {
        "Type": "String",
        "Optional": true,
        "Description": "The UID of the parent rule."
      },
      "service": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for service.",
        "Computed": true
      },
      "source": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "source_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for source.",
        "Computed": true
      },
      "track": {
        "Type": "String",
        "Description": "Packet tracking.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_threat_ioc_feed": {
      "action": {
        "Type": "String",
        "Description": "The feed indicator's action.",
        "Computed": true
      },
      "certificate_id": {
        "Type": "String",
        "Description": "Certificate SHA-1 fingerprint to access the feed.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "custom_comment": {
        "Type": "Int",
        "Description": "Custom IOC feed - the column number of comment.",
        "Computed": true
      },
      "custom_confidence": {
        "Type": "Int",
        "Description": "Custom IOC feed - the column number of confidence.",
        "Computed": true
      },
      "custom_headers": {
        "Type": "List",
        "Description": "Custom HTTP headers.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "header_name": {
              "Type": "String",
              "Description": "The name of the HTTP header we wish to add.",
              "Computed": true
            },
            "header_value": {
              "Type": "String",
              "Description": "The name of the HTTP value we wish to add.",
              "Computed": true
            }
          }
        }
      },
      "custom_name": {
        "Type": "Int",
        "Description": "Custom IOC feed - the column number of name.",
        "Computed": true
      },
      "custom_severity": {
        "Type": "Int",
        "Description": "Custom IOC feed - the column number of severity.",
        "Computed": true
      },
      "custom_type": {
        "Type": "Int",
        "Description": "Custom IOC feed - the column number of type in case a specific type is not chosen.",
        "Computed": true
      },
      "custom_value": {
        "Type": "Int",
        "Description": "Custom IOC feed - the column number of value in case a specific type is chosen.",
        "Computed": true
      },
      "enabled": {
        "Type": "Bool",
        "Description": "Sets whether this indicator feed is enabled.",
        "Computed": true
      },
      "feed_type": {
        "Type": "String",
        "Description": "Feed type to be enforced.",
        "Computed": true
      },
      "feed_url": {
        "Type": "String",
        "Description": "URL of the feed. URL should be written as http or https.",
        "Computed": true
      },
      "fields_delimiter": {
        "Type": "String",
        "Description": "The delimiter that separates between the columns in the feed.",
        "Computed": true
      },
      "ignore_lines_that_start_with": {
        "Type": "String",
        "Description": "A prefix that will determine which lines to ignore.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "password": {
        "Type": "String",
        "Description": "password for authenticating with the URL.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "use_custom_feed_settings": {
        "Type": "Bool",
        "Description": "Set in order to configure a custom indicator feed.",
        "Computed": true
      },
      "use_gateway_proxy": {
        "Type": "Bool",
        "Description": "Use the gateway's proxy for retrieving the feed.",
        "Computed": true
      },
      "username": {
        "Type": "String",
        "Description": "username for authenticating with the URL.",
        "Computed": true
      }
    },
    "checkpoint_management_threat_layer": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_threat_profile": {
      "activate_protections_by_extended_attributes": {
        "Type": "List",
        "Description": "Activate protections by these extended attributes.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "category": {
              "Type": "String",
              "Description": "IPS tag category name.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "IPS tag name.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "IPS tag unique identifier.",
              "Computed": true
            },
            "values": {
              "Type": "List",
              "Description": "IPS protection extended attribute values",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Description": "Object name.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Object unique identifier.",
                    "Computed": true
                  }
                }
              }
            }
          }
        }
      },
      "active_protections_performance_impact": {
        "Type": "String",
        "Description": "Protections with this performance impact only will be activated in the profile.",
        "Computed": true
      },
      "active_protections_severity": {
        "Type": "String",
        "Description": "Protections with this severity only will be activated in the profile.",
        "Computed": true
      },
      "anti_bot": {
        "Type": "Bool",
        "Description": "Is Anti-Bot blade activated.",
        "Computed": true
      },
      "anti_virus": {
        "Type": "Bool",
        "Description": "Is Anti-Virus blade activated.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "confidence_level_high": {
        "Type": "String",
        "Description": "Action for protections with high confidence level.",
        "Computed": true
      },
      "confidence_level_low": {
        "Type": "String",
        "Description": "Action for protections with low confidence level.",
        "Computed": true
      },
      "confidence_level_medium": {
        "Type": "String",
        "Description": "Action for protections with medium confidence level.",
        "Computed": true
      },
      "deactivate_protections_by_extended_attributes": {
        "Type": "List",
        "Description": "Deactivate protections by these extended attributes.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "category": {
              "Type": "String",
              "Description": "IPS tag category name.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "IPS tag name.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "IPS tag unique identifier.",
              "Computed": true
            },
            "values": {
              "Type": "List",
              "Description": "IPS protection extended attribute values",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Description": "Object name.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Object unique identifier.",
                    "Computed": true
                  }
                }
              }
            }
          }
        }
      },
      "indicator_overrides": {
        "Type": "List",
        "Description": "Indicators whose action will be overridden in this profile.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Description": "The indicator's action in this profile.",
              "Computed": true
            },
            "indicator": {
              "Type": "String",
              "Description": "The indicator whose action is to be overriden.",
              "Computed": true
            }
          }
        }
      },
      "ips": {
        "Type": "Bool",
        "Description": "Is IPS blade activated.",
        "Computed": true
      },
      "ips_settings": {
        "Type": "Map",
        "Description": "IPS blade settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "malicious_mail_policy_settings": {
        "Type": "Map",
        "Description": "Malicious Mail Policy for MTA Gateways.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "overrides": {
        "Type": "List",
        "Description": "Overrides per profile for this protection.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Description": "Protection action.",
              "Computed": true
            },
            "capture_packets": {
              "Type": "Bool",
              "Description": "Capture packets.",
              "Computed": true
            },
            "default": {
              "Type": "Map",
              "Description": "Default settings.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "final": {
              "Type": "Map",
              "Description": "Final settings.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "protection": {
              "Type": "String",
              "Description": "IPS protection identified by name",
              "Computed": true
            },
            "protection_external_info": {
              "Type": "Set",
              "Description": "Collection of tag identifiers.",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "protection_uid": {
              "Type": "String",
              "Description": "IPS protection unique identifier.",
              "Computed": true
            },
            "track": {
              "Type": "String",
              "Description": "Tracking method for protection.",
              "Computed": true
            }
          }
        }
      },
      "scan_malicious_links": {
        "Type": "Map",
        "Description": "Scans malicious links (URLs) inside email messages.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "threat_emulation": {
        "Type": "Bool",
        "Description": "Is Threat Emulation blade activated.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "use_extended_attributes": {
        "Type": "Bool",
        "Description": "Whether to activate/deactivate IPS protections according to the extended attributes.",
        "Computed": true
      },
      "use_indicators": {
        "Type": "Bool",
        "Description": "Indicates whether the profile should make use of indicators.",
        "Computed": true
      }
    },
    "checkpoint_management_threat_rule": {
      "action": {
        "Type": "String",
        "Description": "Action-the enforced profile.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "destination": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "destination_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for destination.",
        "Computed": true
      },
      "enabled": {
        "Type": "Bool",
        "Description": "Enable/Disable the rule.",
        "Computed": true
      },
      "exceptions": {
        "Type": "Set",
        "Description": "Collection of rule's exceptions identified by UID",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "install_on": {
        "Type": "Set",
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that the rule belongs to identified by the name or UID."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Rule name."
      },
      "protected_scope": {
        "Type": "Set",
        "Description": "Collection of objects defining Protected Scope identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "protected_scope_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for Protected Scope.",
        "Computed": true
      },
      "service": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for service.",
        "Computed": true
      },
      "source": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "source_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for source.",
        "Computed": true
      },
      "track": {
        "Type": "String",
        "Description": "Packet tracking.",
        "Computed": true
      },
      "track_settings": {
        "Type": "Map",
        "Description": "Threat rule track settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_threat_rulebase": {
      "dereference_group_members": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When true, the source, destination and services \u0026 applications parameters are displayed as ranges of IP addresses and port numbers rather than network objects.\nObjects that are not represented using IP addresses or port numbers are presented as objects.\nIn addition, the response of each rule does not contain the parameters: source, source-negate, destination, destination-negate, service and service-negate, but instead it contains the parameters: source-ranges, destination-ranges and service-ranges.\n\nNote: Requesting to show rules as ranges is limited up to 20 rules per request, otherwise an error is returned. If you wish to request more rules, use the offset and limit parameters to limit your request.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "filter": {
        "Type": "String",
        "Optional": true,
        "Description": "Search expression to filter the rulebase. The provided text should be exactly the same as it would be given in Smart Console. The logical operators in the expression ('AND', 'OR') should be provided in capital letters. If an operator is not used, the default OR operator applies."
      },
      "filter_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Sets filter preferences.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hits_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "N/A",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximal number of returned results.",
        "Default": {
          "Type": "int",
          "Value": "50"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "offset": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of the results to initially skip.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "order": {
        "Type": "List",
        "Optional": true,
        "Description": "Sorts the results by search criteria. Automatically sorts the results by Name, in the ascending order.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "asc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in ascending order."
            },
            "desc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in descending order."
            }
          }
        }
      },
      "package": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the package."
      },
      "rulebase": {
        "Type": "List",
        "Description": "The show rulebase api reply",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "from": {
              "Type": "Int",
              "Description": "From which element number the query was done.",
              "Computed": true
            },
            "objects_dictionary": {
              "Type": "List",
              "Description": "Level of details in the output corresponds to the number of details for search. This table shows the level of details in the Standard level.",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Description": "Object name. Must be unique in the domain",
                    "Computed": true
                  },
                  "type": {
                    "Type": "String",
                    "Description": "Object type.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Object unique identifier.",
                    "Computed": true
                  }
                }
              }
            },
            "rulebase": {
              "Type": "List",
              "Description": "N/A",
              "Computed": true,
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action": {
                    "Type": "String",
                    "Description": "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User Auth\", \"Client Auth\", \"Apply Layer\".",
                    "Computed": true
                  },
                  "comments": {
                    "Type": "String",
                    "Description": "Comments string.",
                    "Computed": true
                  },
                  "destination": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "destination_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for destination.",
                    "Computed": true
                  },
                  "enabled": {
                    "Type": "Bool",
                    "Description": "Enable/Disable the rule.",
                    "Computed": true
                  },
                  "exceptions": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "exceptions_layer": {
                    "Type": "String",
                    "Description": "Rules type.",
                    "Computed": true
                  },
                  "install_on": {
                    "Type": "List",
                    "Description": "Which Gateways identified by the name or UID to install the policy on.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "name": {
                    "Type": "String",
                    "Description": "Rules name.",
                    "Computed": true
                  },
                  "protected_scope": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "protected_scope_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for service.",
                    "Computed": true
                  },
                  "rule_number": {
                    "Type": "Int",
                    "Description": "Number of the rule.",
                    "Computed": true
                  },
                  "service": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "service_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for service.",
                    "Computed": true
                  },
                  "source": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "source_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for source.",
                    "Computed": true
                  },
                  "track": {
                    "Type": "String",
                    "Description": "Track Settings.",
                    "Computed": true
                  },
                  "track_settings": {
                    "Type": "Map",
                    "Description": "track settings.",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "type": {
                    "Type": "String",
                    "Description": "Rules type.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Rules uid.",
                    "Computed": true
                  }
                }
              }
            },
            "to": {
              "Type": "Int",
              "Description": "To which element number the query was done.",
              "Computed": true
            },
            "total": {
              "Type": "Int",
              "Description": "Total number of elements returned by the query.",
              "Computed": true
            }
          }
        }
      },
      "show_as_ranges": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When true, the source, destination and services \u0026 applications parameters are displayed as ranges of IP addresses and port numbers rather than network objects.\nObjects that are not represented using IP addresses or port numbers are presented as objects.\nIn addition, the response of each rule does not contain the parameters: source, source-negate, destination, destination-negate, service and service-negate, but instead it contains the parameters: source-ranges, destination-ranges and service-ranges.\n\nNote: Requesting to show rules as ranges is limited up to 20 rules per request, otherwise an error is returned. If you wish to request more rules, use the offset and limit parameters to limit your request.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "show_hits": {
        "Type": "Bool",
        "Optional": true,
        "Description": "N/A"
      },
      "show_membership": {
        "Type": "Bool",
        "Optional": true,
        "Description": "N/A",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_time": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "end": {
        "Type": "Map",
        "Description": "End time. Note: Each gateway may interpret this time differently according to its time zone.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "end_never": {
        "Type": "Bool",
        "Description": "End never.",
        "Computed": true
      },
      "hour_ranges": {
        "Type": "List",
        "Description": "Hours recurrence. Note: Each gateway may interpret this time differently according to its time zone.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "enabled": {
              "Type": "Bool",
              "Description": "Is hour range enabled.",
              "Computed": true
            },
            "from": {
              "Type": "String",
              "Description": "Time in format HH:MM.",
              "Computed": true
            },
            "index": {
              "Type": "Int",
              "Description": "Hour range index.",
              "Computed": true
            },
            "to": {
              "Type": "String",
              "Description": "Time in format HH:MM.",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "recurrence": {
        "Type": "List",
        "Description": "Days recurrence.",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "days": {
              "Type": "Set",
              "Description": "Valid on specific days. Multiple options, support range of days in months. Example:[\"1\",\"3\",\"9-20\"].",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "month": {
              "Type": "String",
              "Description": "Valid on month. Example: \"1\", \"2\",\"12\",\"Any\".",
              "Computed": true
            },
            "pattern": {
              "Type": "String",
              "Description": "Valid on \"Interval\", \"Daily\", \"Weekly\", \"Monthly\" base.",
              "Computed": true
            },
            "weekdays": {
              "Type": "Set",
              "Description": "Valid on weekdays. Example: \"Sun\", \"Mon\"...\"Sat\".",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "start": {
        "Type": "Map",
        "Description": "Starting time. Note: Each gateway may interpret this time differently according to its time zone.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "start_now": {
        "Type": "Bool",
        "Description": "Start immediately.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_trusted_client": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "domains_assignment": {
        "Type": "Set",
        "Description": "Domains to be added to this profile. Use domain name only. See example below: \"add-trusted-client (with domain)\".",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ipv4_address": {
        "Type": "String",
        "Description": "IPv4 address.",
        "Computed": true
      },
      "ipv4_address_first": {
        "Type": "String",
        "Description": "First IPv4 address in the range.",
        "Computed": true
      },
      "ipv4_address_last": {
        "Type": "String",
        "Description": "Last IPv4 address in the range.",
        "Computed": true
      },
      "ipv6_address": {
        "Type": "String",
        "Description": "IPv6 address.",
        "Computed": true
      },
      "ipv6_address_first": {
        "Type": "String",
        "Description": "First IPv6 address in the range.",
        "Computed": true
      },
      "ipv6_address_last": {
        "Type": "String",
        "Description": "Last IPv6 address in the range.",
        "Computed": true
      },
      "mask_length4": {
        "Type": "Int",
        "Description": "IPv4 mask length.",
        "Computed": true
      },
      "mask_length6": {
        "Type": "Int",
        "Description": "IPv6 mask length.",
        "Computed": true
      },
      "multi_domain_server_trusted_client": {
        "Type": "Bool",
        "Description": "Let this trusted client connect to all Multi-Domain Servers in the deployment.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "type": {
        "Type": "String",
        "Description": "Trusted client type.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "wild_card": {
        "Type": "String",
        "Description": "IP wild card (e.g. 192.0.2.*).",
        "Computed": true
      }
    },
    "checkpoint_management_user": {
      "allowed_locations": {
        "Type": "Map",
        "Description": "User allowed locations.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "authentication_method": {
        "Type": "String",
        "Description": "Authentication method.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "connect_daily": {
        "Type": "Bool",
        "Description": "Connect every day.",
        "Computed": true
      },
      "connect_on_days": {
        "Type": "Set",
        "Description": "Days users allow to connect.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "email": {
        "Type": "String",
        "Description": "User email.",
        "Computed": true
      },
      "encryption": {
        "Type": "Map",
        "Description": "User encryption.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "expiration_date": {
        "Type": "String",
        "Description": "Expiration date in format: yyyy-MM-dd.",
        "Computed": true
      },
      "from_hour": {
        "Type": "String",
        "Description": "Allow users connect from hour.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "phone_number": {
        "Type": "String",
        "Description": "User phone number.",
        "Computed": true
      },
      "radius_server": {
        "Type": "String",
        "Description": "RADIUS server object identified by the name or UID. Must be set when \"authentication-method\" was selected to be \"RADIUS\".",
        "Computed": true
      },
      "tacacs_server": {
        "Type": "String",
        "Description": "TACACS server object identified by the name or UID. Must be set when \"authentication-method\" was selected to be \"TACACS\".",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "to_hour": {
        "Type": "String",
        "Description": "Allow users connect until hour.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_user_group": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "email": {
        "Type": "String",
        "Description": "Email Address.",
        "Computed": true
      },
      "members": {
        "Type": "Set",
        "Description": "Collection of User Group objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_user_template": {
      "allowed_locations": {
        "Type": "Map",
        "Description": "User allowed locations.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "authentication_method": {
        "Type": "String",
        "Description": "Authentication method.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "connect_daily": {
        "Type": "Bool",
        "Description": "Connect every day.",
        "Computed": true
      },
      "connect_on_days": {
        "Type": "Set",
        "Description": "Days users allow to connect.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "encryption": {
        "Type": "Map",
        "Description": "User encryption.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "expiration_by_global_properties": {
        "Type": "Bool",
        "Description": "Expiration date according to global properties.",
        "Computed": true
      },
      "expiration_date": {
        "Type": "String",
        "Description": "Expiration date in format: yyyy-MM-dd.",
        "Computed": true
      },
      "from_hour": {
        "Type": "String",
        "Description": "Allow users connect from hour.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "radius_server": {
        "Type": "String",
        "Description": "RADIUS server object identified by the name or UID. Must be set when \"authentication-method\" was selected to be \"RADIUS\".",
        "Computed": true
      },
      "tacacs_server": {
        "Type": "String",
        "Description": "TACACS server object identified by the name or UID. Must be set when \"authentication-method\" was selected to be \"TACACS\".",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "to_hour": {
        "Type": "String",
        "Description": "Allow users connect until hour.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_vmware_data_center_server": {
      "certificate_fingerprint": {
        "Type": "String",
        "Description": "Specify the SHA-1 or SHA-256 fingerprint of the Data Center Server's certificate.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Computed": true
      },
      "hostname": {
        "Type": "String",
        "Description": "IP Address or hostname of the vCenter server.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "type": {
        "Type": "String",
        "Description": "Object type. nsx or nsxt or vmware.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Computed": true
      },
      "username": {
        "Type": "String",
        "Description": "Username of the vCenter server",
        "Computed": true
      }
    },
    "checkpoint_management_vpn_community_remote_access": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "gateways": {
        "Type": "Set",
        "Description": "Collection of Gateway objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "user_groups": {
        "Type": "Set",
        "Description": "Collection of User group objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    }
  }
}