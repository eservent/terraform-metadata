{
  ".schema_version": "2",
  ".sdk_type": "terraform-plugin-sdk-v2",
  "name": "equinix",
  "type": "provider",
  "version": "v1.10.0",
  "provider": {
    "auth_token": {
      "Type": "String",
      "Optional": true,
      "Description": "The Equinix Metal API auth key for API operations",
      "DefaultFunc": "ENV(METAL_AUTH_TOKEN)"
    },
    "client_id": {
      "Type": "String",
      "Optional": true,
      "Description": "API Consumer Key available under My Apps section in developer portal",
      "DefaultFunc": "ENV(EQUINIX_API_CLIENTID)"
    },
    "client_secret": {
      "Type": "String",
      "Optional": true,
      "Description": "API Consumer secret available under My Apps section in developer portal",
      "DefaultFunc": "ENV(EQUINIX_API_CLIENTSECRET)"
    },
    "endpoint": {
      "Type": "String",
      "Optional": true,
      "Description": "The Equinix API base URL to point out desired environment. Defaults to https://api.equinix.com",
      "DefaultFunc": "ENV(EQUINIX_API_ENDPOINT)"
    },
    "max_retries": {
      "Type": "Int",
      "Optional": true,
      "Default": {
        "Type": "int",
        "Value": "10"
      }
    },
    "max_retry_wait_seconds": {
      "Type": "Int",
      "Optional": true,
      "Default": {
        "Type": "int",
        "Value": "30"
      }
    },
    "request_timeout": {
      "Type": "Int",
      "Optional": true,
      "Description": "The duration of time, in seconds, that the Equinix Platform API Client should wait before canceling an API request.  Defaults to 30",
      "DefaultFunc": "ENV(EQUINIX_API_TIMEOUT)"
    },
    "response_max_page_size": {
      "Type": "Int",
      "Optional": true,
      "Description": "The maximum number of records in a single response for REST queries that produce paginated responses"
    },
    "token": {
      "Type": "String",
      "Optional": true,
      "Description": "API token from the developer sandbox",
      "DefaultFunc": "ENV(EQUINIX_API_TOKEN)"
    }
  },
  "resources": {
    "equinix_ecx_l2_connection": {
      "__timeouts__": [
        "create",
        "delete"
      ],
      "actions": {
        "Type": "Set",
        "Description": "One or more pending actions to complete connection provisioning",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "message": {
              "Type": "String",
              "Description": "Action information",
              "Computed": true
            },
            "operation_id": {
              "Type": "String",
              "Description": "Action identifier",
              "Computed": true
            },
            "required_data": {
              "Type": "Set",
              "Description": "Action list of required data",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "editable": {
                    "Type": "Bool",
                    "Description": "Action data is editable",
                    "Computed": true
                  },
                  "key": {
                    "Type": "String",
                    "Description": "Action data key",
                    "Computed": true
                  },
                  "label": {
                    "Type": "String",
                    "Description": "Action data label",
                    "Computed": true
                  },
                  "validation_pattern": {
                    "Type": "String",
                    "Description": "Action data pattern",
                    "Computed": true
                  },
                  "value": {
                    "Type": "String",
                    "Description": "Action data value",
                    "Computed": true
                  }
                }
              }
            },
            "type": {
              "Type": "String",
              "Description": "Action type",
              "Computed": true
            }
          }
        }
      },
      "additional_info": {
        "Type": "Set",
        "Optional": true,
        "Description": "One or more additional information key-value objects",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Additional information key"
            },
            "value": {
              "Type": "String",
              "Required": true,
              "Description": "Additional information value"
            }
          }
        }
      },
      "authorization_key": {
        "Type": "String",
        "Optional": true,
        "Description": "Text field used to authorize connection on the provider side. Value depends on a provider service profile used for connection",
        "Computed": true
      },
      "device_interface_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "Identifier of network interface on a given device, used for a connection. If not specified then first available interface will be selected",
        "ConflictsWith": [
          "port_uuid",
          "service_token"
        ]
      },
      "device_uuid": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique identifier of the Network Edge virtual device from which the connection would originate",
        "ConflictsWith": [
          "port_uuid",
          "service_token"
        ]
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Connection name. An alpha-numeric 24 characters string which can include only hyphens and underscores"
      },
      "named_tag": {
        "Type": "String",
        "Optional": true,
        "Description": "The type of peering to set up in case when connecting to Azure Express Route. One of PRIVATE, MICROSOFT, MANUAL, PUBLIC (MANUAL and PUBLIC are deprecated and not available for new connections)"
      },
      "notifications": {
        "Type": "Set",
        "Required": true,
        "Description": "A list of email addresses used for sending connection update notifications",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "port_uuid": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique identifier of the buyer's port from which the connection would originate",
        "Computed": true,
        "ConflictsWith": [
          "device_uuid",
          "service_token"
        ]
      },
      "profile_uuid": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique identifier of the service provider's service profile",
        "Computed": true
      },
      "provider_status": {
        "Type": "String",
        "Description": "Connection provisioning status on service provider's side",
        "Computed": true
      },
      "purchase_order_number": {
        "Type": "String",
        "Optional": true,
        "Description": "Connection's purchase order number to reflect on the invoice"
      },
      "redundancy_group": {
        "Type": "String",
        "Description": "Unique identifier of group containing a primary and secondary connection",
        "Computed": true
      },
      "redundancy_type": {
        "Type": "String",
        "Description": "Connection redundancy type, applicable for HA connections. Either primary or secondary",
        "Computed": true
      },
      "redundant_uuid": {
        "Type": "String",
        "Description": "Unique identifier of the redundant connection, applicable for HA connections",
        "Computed": true
      },
      "secondary_connection": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of secondary connection for redundant, HA connectivity",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "actions": {
              "Type": "Set",
              "Description": "One or more pending actions to complete connection provisioning",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "message": {
                    "Type": "String",
                    "Description": "Action information",
                    "Computed": true
                  },
                  "operation_id": {
                    "Type": "String",
                    "Description": "Action identifier",
                    "Computed": true
                  },
                  "required_data": {
                    "Type": "Set",
                    "Description": "Action list of required data",
                    "Computed": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "ComputedBlock",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "editable": {
                          "Type": "Bool",
                          "Description": "Action data is editable",
                          "Computed": true
                        },
                        "key": {
                          "Type": "String",
                          "Description": "Action data key",
                          "Computed": true
                        },
                        "label": {
                          "Type": "String",
                          "Description": "Action data label",
                          "Computed": true
                        },
                        "validation_pattern": {
                          "Type": "String",
                          "Description": "Action data pattern",
                          "Computed": true
                        },
                        "value": {
                          "Type": "String",
                          "Description": "Action data value",
                          "Computed": true
                        }
                      }
                    }
                  },
                  "type": {
                    "Type": "String",
                    "Description": "Action type",
                    "Computed": true
                  }
                }
              }
            },
            "authorization_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Text field used to authorize connection on the provider side. Value depends on a provider service profile used for connection",
              "Computed": true
            },
            "device_interface_id": {
              "Type": "Int",
              "Optional": true,
              "Description": "Identifier of network interface on a given device, used for a connection. If not specified then first available interface will be selected",
              "Computed": true,
              "ConflictsWith": [
                "secondary_connection.0.port_uuid",
                "secondary_connection.0.service_token"
              ]
            },
            "device_uuid": {
              "Type": "String",
              "Optional": true,
              "Description": "Unique identifier of the Network Edge virtual device from which the connection would originate"
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Connection name. An alpha-numeric 24 characters string which can include only hyphens and underscores"
            },
            "port_uuid": {
              "Type": "String",
              "Optional": true,
              "Description": "Unique identifier of the buyer's port from which the connection would originate",
              "Computed": true,
              "ConflictsWith": [
                "secondary_connection.0.device_uuid",
                "secondary_connection.0.service_token"
              ]
            },
            "profile_uuid": {
              "Type": "String",
              "Optional": true,
              "Description": "Unique identifier of the service provider's service profile",
              "Computed": true
            },
            "provider_status": {
              "Type": "String",
              "Description": "Connection provisioning status on service provider's side",
              "Computed": true
            },
            "redundancy_group": {
              "Type": "String",
              "Description": "Unique identifier of group containing a primary and secondary connection",
              "Computed": true
            },
            "redundancy_type": {
              "Type": "String",
              "Description": "Connection redundancy type, applicable for HA connections. Either primary or secondary",
              "Computed": true
            },
            "redundant_uuid": {
              "Type": "String",
              "Description": "Unique identifier of the redundant connection, applicable for HA connections",
              "Computed": true,
              "Deprecated": "SecondaryConnection.0.RedundantUUID will not be returned. Use UUID instead"
            },
            "seller_metro_code": {
              "Type": "String",
              "Optional": true,
              "Description": "The metro code that denotes the connection's remote side (z-side)",
              "Computed": true
            },
            "seller_region": {
              "Type": "String",
              "Optional": true,
              "Description": "The region in which the seller port resides",
              "Computed": true
            },
            "service_token": {
              "Type": "String",
              "Optional": true,
              "Description": "Unique Equinix Fabric key given by a provider that grants you authorization to enable connectivity from a shared multi-tenant port (a-side)",
              "ConflictsWith": [
                "secondary_connection.0.port_uuid",
                "secondary_connection.0.device_uuid"
              ]
            },
            "speed": {
              "Type": "Int",
              "Optional": true,
              "Description": "Speed/Bandwidth to be allocated to the connection",
              "Computed": true
            },
            "speed_unit": {
              "Type": "String",
              "Optional": true,
              "Description": "Unit of the speed/bandwidth to be allocated to the connection",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "Connection provisioning status on Equinix Fabric side",
              "Computed": true
            },
            "uuid": {
              "Type": "String",
              "Description": "Unique identifier of the connection",
              "Computed": true
            },
            "vendor_token": {
              "Type": "String",
              "Description": "The Equinix Fabric Token the connection was created with. Applicable if the connection was created with a ServiceToken (a-side) or ZSideServiceToken (z-side)",
              "Computed": true
            },
            "vlan_ctag": {
              "Type": "Int",
              "Optional": true,
              "Description": "C-Tag/Inner-Tag of the connection, a numeric character ranging from 2 - 4094",
              "ConflictsWith": [
                "secondary_connection.0.device_uuid"
              ]
            },
            "vlan_stag": {
              "Type": "Int",
              "Optional": true,
              "Description": "S-Tag/Outer-Tag of the connection, a numeric character ranging from 2 - 4094",
              "Computed": true,
              "ConflictsWith": [
                "secondary_connection.0.device_uuid",
                "secondary_connection.0.service_token"
              ]
            },
            "zside_port_uuid": {
              "Type": "String",
              "Description": "Unique identifier of the port on the remote side (z-side)",
              "Computed": true
            },
            "zside_vlan_ctag": {
              "Type": "Int",
              "Description": "C-Tag/Inner-Tag of the connection on the remote side (z-side)",
              "Computed": true
            },
            "zside_vlan_stag": {
              "Type": "Int",
              "Description": "S-Tag/Outer-Tag of the connection on the remote side (z-side)",
              "Computed": true
            }
          }
        }
      },
      "seller_metro_code": {
        "Type": "String",
        "Optional": true,
        "Description": "The metro code that denotes the connection's remote side (z-side)",
        "Computed": true
      },
      "seller_region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region in which the seller port resides"
      },
      "service_token": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique Equinix Fabric key given by a provider that grants you authorization to enable connectivity from a shared multi-tenant port (a-side)",
        "ConflictsWith": [
          "port_uuid",
          "device_uuid"
        ]
      },
      "speed": {
        "Type": "Int",
        "Required": true,
        "Description": "Speed/Bandwidth to be allocated to the connection"
      },
      "speed_unit": {
        "Type": "String",
        "Required": true,
        "Description": "Unit of the speed/bandwidth to be allocated to the connection"
      },
      "status": {
        "Type": "String",
        "Description": "Connection provisioning status on Equinix Fabric side",
        "Computed": true
      },
      "uuid": {
        "Type": "String",
        "Description": "Unique identifier of the connection",
        "Computed": true
      },
      "vendor_token": {
        "Type": "String",
        "Description": "The Equinix Fabric Token the connection was created with. Applicable if the connection was created with a ServiceToken (a-side) or ZSideServiceToken (z-side)",
        "Computed": true
      },
      "vlan_ctag": {
        "Type": "Int",
        "Optional": true,
        "Description": "C-Tag/Inner-Tag of the connection, a numeric character ranging from 2 - 4094",
        "ConflictsWith": [
          "device_uuid"
        ]
      },
      "vlan_stag": {
        "Type": "Int",
        "Optional": true,
        "Description": "S-Tag/Outer-Tag of the connection, a numeric character ranging from 2 - 4094",
        "Computed": true,
        "ConflictsWith": [
          "device_uuid",
          "service_token"
        ]
      },
      "zside_port_uuid": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique identifier of the port on the remote side (z-side)",
        "Computed": true
      },
      "zside_service_token": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique Equinix Fabric key given by a provider that grants you authorization to enable connectivity to a shared multi-tenant port (z-side)",
        "ConflictsWith": [
          "service_token",
          "profile_uuid",
          "zside_port_uuid",
          "authorization_key",
          "secondary_connection"
        ]
      },
      "zside_vlan_ctag": {
        "Type": "Int",
        "Optional": true,
        "Description": "C-Tag/Inner-Tag of the connection on the remote side (z-side)",
        "Computed": true
      },
      "zside_vlan_stag": {
        "Type": "Int",
        "Optional": true,
        "Description": "S-Tag/Outer-Tag of the connection on the remote side (z-side)",
        "Computed": true
      }
    },
    "equinix_ecx_l2_connection_accepter": {
      "__timeouts__": [
        "create"
      ],
      "access_key": {
        "Type": "String",
        "Optional": true,
        "Description": "Access Key used to accept connection on provider side",
        "Computed": true
      },
      "aws_connection_id": {
        "Type": "String",
        "Description": "Identifier of a hosted Direct Connect connection on AWS side, applicable for accepter resource with connections to AWS only",
        "Computed": true
      },
      "aws_profile": {
        "Type": "String",
        "Optional": true,
        "Description": "AWS Profile Name for retrieving credentials from shared credentials file"
      },
      "connection_id": {
        "Type": "String",
        "Required": true,
        "Description": "Identifier of layer 2 connection that will be accepted"
      },
      "secret_key": {
        "Type": "String",
        "Optional": true,
        "Description": "Secret Key used to accept connection on provider side",
        "Computed": true
      }
    },
    "equinix_ecx_l2_serviceprofile": {
      "api_integration": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Specifies the API integration ID that was provided to the customer during onboarding"
      },
      "authkey_label": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the authentication key label to be used by the Authentication Key service"
      },
      "bandwidth_alert_threshold": {
        "Type": "Float",
        "Optional": true,
        "Description": "Specifies the port bandwidth threshold percentage. If the bandwidth limit is met or exceeded, an alert is sent to the seller"
      },
      "bandwidth_threshold_notifications": {
        "Type": "Set",
        "Required": true,
        "Description": "A list of email addresses that will receive notifications about bandwidth thresholds",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "connection_name_label": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom name used for calling a connections i.e. circuit. Defaults to Connection",
        "Default": {
          "Type": "string",
          "Value": "Connection"
        }
      },
      "ctag_label": {
        "Type": "String",
        "Optional": true,
        "Description": "C-Tag/Inner-Tag label name for the connections"
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description of the service profile"
      },
      "equinix_managed_port_vlan": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value that indicates whether the port and VLAN details are managed by Equinix"
      },
      "features": {
        "Type": "Set",
        "Required": true,
        "Description": "Block of profile features configuration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "allow_remote_connections": {
              "Type": "Bool",
              "Required": true,
              "Description": "Indicates whether or not connections to this profile can be created from remote metro locations"
            },
            "test_profile": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Indicates whether or not this profile can be used for test connections",
              "Deprecated": "TestProfile is no longer required and will be removed in a future release"
            }
          }
        }
      },
      "integration_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies the API integration ID that was provided to the customer during onboarding"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the service profile. An alpha-numeric 50 characters string which can include only hyphens and underscores"
      },
      "oversubscription": {
        "Type": "String",
        "Optional": true,
        "Description": "Oversubscription limit that will cause alerting. Default is 1x",
        "Default": {
          "Type": "string",
          "Value": "1x"
        }
      },
      "oversubscription_allowed": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value that determines if, regardless of the utilization, Equinix Fabric will continue to add connections to your links until we reach the oversubscription limit"
      },
      "port": {
        "Type": "Set",
        "Required": true,
        "Description": "One or more definitions of ports associated with the profile",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metro_code": {
              "Type": "String",
              "Required": true,
              "Description": "Port location metro code"
            },
            "uuid": {
              "Type": "String",
              "Required": true,
              "Description": "Unique identifier of the port"
            }
          }
        }
      },
      "private": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value that indicates whether or not this is a private profile."
      },
      "private_user_emails": {
        "Type": "Set",
        "Optional": true,
        "Description": "A list of email addresses associated to users that will be allowed to access this service profile. Applicable for private profiles",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "profile_statuschange_notifications": {
        "Type": "Set",
        "Required": true,
        "Description": "A list of email addresses that will receive notifications about profile status changes",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "redundancy_required": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value that determines if yourconnections will require redundancy"
      },
      "secondary_vlan_from_primary": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether the VLAN ID of the secondary connection is the same as the primary connection"
      },
      "servicekey_autogenerated": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value that indicates whether multiple connections can be created with the same authorization key"
      },
      "speed_band": {
        "Type": "Set",
        "Optional": true,
        "Description": "One or more definitions of supported speed/bandwidth configurations",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "speed": {
              "Type": "Int",
              "Required": true,
              "Description": "Speed/bandwidth supported by given service profile"
            },
            "speed_unit": {
              "Type": "String",
              "Required": true,
              "Description": "Unit of the speed/bandwidth supported by given service profile"
            }
          }
        }
      },
      "speed_customization_allowed": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value that determines if customer is allowed to enter a custom connection speed"
      },
      "speed_from_api": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean valuta that determines if connection speed will be derived from an API call"
      },
      "state": {
        "Type": "String",
        "Description": "Service profile provisioning status",
        "Computed": true
      },
      "tag_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies additional tagging information required by the seller profile for Dot1Q to QinQ translation",
        "Default": {
          "Type": "string",
          "Value": "CTAGED"
        }
      },
      "uuid": {
        "Type": "String",
        "Description": "Unique identifier of the service profile",
        "Computed": true
      },
      "vc_statuschange_notifications": {
        "Type": "Set",
        "Required": true,
        "Description": "A list of email addresses that will receive notifications about connections approvals and rejections",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "equinix_metal_bgp_session": {
      "address_family": {
        "Type": "String",
        "Required": true,
        "Description": "ipv4 or ipv6"
      },
      "default_route": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean flag to set the default route policy. False by default",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "device_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of device"
      },
      "status": {
        "Type": "String",
        "Description": "Status of the session - up or down",
        "Computed": true
      }
    },
    "equinix_metal_connection": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description of the connection resource"
      },
      "facility": {
        "Type": "String",
        "Optional": true,
        "Description": "Facility where the connection will be created",
        "Computed": true,
        "ConflictsWith": [
          "metro"
        ]
      },
      "metro": {
        "Type": "String",
        "Optional": true,
        "Description": "Metro where the connection will be created",
        "Computed": true,
        "ConflictsWith": [
          "facility"
        ]
      },
      "mode": {
        "Type": "String",
        "Optional": true,
        "Description": "Mode for connections in IBX facilities with the dedicated type - standard or tunnel",
        "Default": {
          "Type": "string",
          "Value": "standard"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the connection resource"
      },
      "organization_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the organization responsible for the connection. Applicable with type \"dedicated\"",
        "Computed": true
      },
      "ports": {
        "Type": "List",
        "Description": "List of connection ports - primary (`ports[0]`) and secondary (`ports[1]`)",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Description": "ID of the connection port resource",
              "Computed": true
            },
            "link_status": {
              "Type": "String",
              "Description": "Port link status",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Name of the connection port resource",
              "Computed": true
            },
            "role": {
              "Type": "String",
              "Description": "Role - primary or secondary",
              "Computed": true
            },
            "speed": {
              "Type": "Int",
              "Description": "Port speed in bits per second",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "Port status",
              "Computed": true
            },
            "virtual_circuit_ids": {
              "Type": "List",
              "Description": "List of IDs of virtual circuits attached to this port",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Value": "String"
              }
            }
          }
        }
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the project where the connection is scoped to. Required with type \"shared\""
      },
      "redundancy": {
        "Type": "String",
        "Required": true,
        "Description": "Connection redundancy - redundant or primary"
      },
      "service_token_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Only used with shared connection. Type of service token to use for the connection, a_side or z_side"
      },
      "service_tokens": {
        "Type": "List",
        "Description": "Only used with shared connection. List of service tokens required to continue the setup process with [equinix_ecx_l2_connection](https://registry.terraform.io/providers/equinix/equinix/latest/docs/resources/equinix_ecx_l2_connection) or from the [Equinix Fabric Portal](https://ecxfabric.equinix.com/dashboard)",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "expires_at": {
              "Type": "String",
              "Description": "Expiration date of the service token",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Description": "ID of the service token",
              "Computed": true
            },
            "max_allowed_speed": {
              "Type": "String",
              "Description": "Maximum allowed speed for the service token",
              "Computed": true
            },
            "role": {
              "Type": "String",
              "Description": "Role of the service token",
              "Computed": true
            },
            "state": {
              "Type": "String",
              "Description": "State of the service token",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Type of the service token, a_side or z_side",
              "Computed": true
            }
          }
        }
      },
      "speed": {
        "Type": "String",
        "Required": true,
        "Description": "Port speed. Allowed values are 50Mbps, 200Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps"
      },
      "status": {
        "Type": "String",
        "Description": "Status of the connection resource",
        "Computed": true
      },
      "tags": {
        "Type": "List",
        "Optional": true,
        "Description": "Tags attached to the connection",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "token": {
        "Type": "String",
        "Description": "Only used with shared connection. Fabric Token required to continue the setup process with [equinix_ecx_l2_connection](https://registry.terraform.io/providers/equinix/equinix/latest/docs/resources/equinix_ecx_l2_connection) or from the [Equinix Fabric Portal](https://ecxfabric.equinix.com/dashboard)",
        "Computed": true,
        "Deprecated": "If your organization already has connection service tokens enabled, use `service_tokens` instead"
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "Connection type - dedicated or shared"
      },
      "vlans": {
        "Type": "List",
        "Optional": true,
        "Description": "Only used with shared connection. VLANs to attach. Pass one vlan for Primary/Single connection and two vlans for Redundant connection",
        "MaxItems": 2,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      }
    },
    "equinix_metal_device": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "access_private_ipv4": {
        "Type": "String",
        "Description": "The ipv4 private IP assigned to the device",
        "Computed": true
      },
      "access_public_ipv4": {
        "Type": "String",
        "Description": "The ipv4 maintenance IP assigned to the device",
        "Computed": true
      },
      "access_public_ipv6": {
        "Type": "String",
        "Description": "The ipv6 maintenance IP assigned to the device",
        "Computed": true
      },
      "always_pxe": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If true, a device with OS custom_ipxe will",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "billing_cycle": {
        "Type": "String",
        "Optional": true,
        "Description": "monthly or hourly",
        "Computed": true
      },
      "created": {
        "Type": "String",
        "Description": "The timestamp for when the device was created",
        "Computed": true
      },
      "custom_data": {
        "Type": "String",
        "Optional": true,
        "Description": "A string of the desired Custom Data for the device"
      },
      "deployed_facility": {
        "Type": "String",
        "Description": "The facility where the device is deployed",
        "Computed": true
      },
      "deployed_hardware_reservation_id": {
        "Type": "String",
        "Description": "ID of hardware reservation where this device was deployed. It is useful when using the next-available hardware reservation",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description string for the device"
      },
      "facilities": {
        "Type": "List",
        "Optional": true,
        "Description": "List of facility codes with deployment preferences. Equinix Metal API will go through the list and will deploy your device to first facility with free capacity. List items must be facility codes or any (a wildcard). To find the facility code, visit [Facilities API docs](https://metal.equinix.com/developers/api/facilities/), set your API auth token in the top of the page and see JSON from the API response. Conflicts with metro",
        "MinItems": 1,
        "ConflictsWith": [
          "metro"
        ],
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "force_detach_volumes": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Delete device even if it has volumes attached. Only applies for destroy action",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "hardware_reservation_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The UUID of the hardware reservation where you want this device deployed, or next-available if you want to pick your next available reservation automatically"
      },
      "hostname": {
        "Type": "String",
        "Optional": true,
        "Description": "The device hostname used in deployments taking advantage of Layer3 DHCP or metadata service configuration.",
        "Computed": true
      },
      "ip_address": {
        "Type": "List",
        "Optional": true,
        "Description": "A list of IP address types for the device (structure is documented below)",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cidr": {
              "Type": "Int",
              "Optional": true,
              "Description": "CIDR suffix for IP block assigned to this device"
            },
            "reservation_ids": {
              "Type": "List",
              "Optional": true,
              "Description": "IDs of reservations to pick the blocks from",
              "MinItems": 1,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "one of public_ipv4,private_ipv4,public_ipv6"
            }
          }
        }
      },
      "ipxe_script_url": {
        "Type": "String",
        "Optional": true,
        "Description": "URL pointing to a hosted iPXE script. More"
      },
      "locked": {
        "Type": "Bool",
        "Description": "Whether the device is locked",
        "Computed": true
      },
      "metro": {
        "Type": "String",
        "Optional": true,
        "Description": "Metro area for the new device. Conflicts with facilities",
        "ConflictsWith": [
          "facilities"
        ]
      },
      "network": {
        "Type": "List",
        "Description": "The device's private and public IP (v4 and v6) network details. When a device is run without any special network configuration, it will have 3 addresses: public ipv4, private ipv4 and ipv6",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "String",
              "Description": "IPv4 or IPv6 address string",
              "Computed": true
            },
            "cidr": {
              "Type": "Int",
              "Description": "CIDR suffix for IP address block to be assigned, i.e. amount of addresses",
              "Computed": true
            },
            "family": {
              "Type": "Int",
              "Description": "IP version - \"4\" or \"6\"",
              "Computed": true
            },
            "gateway": {
              "Type": "String",
              "Description": "Address of router",
              "Computed": true
            },
            "public": {
              "Type": "Bool",
              "Description": "Whether the address is routable from the Internet",
              "Computed": true
            }
          }
        }
      },
      "network_type": {
        "Type": "String",
        "Description": "Network type of a device, used in [Layer 2 networking](https://metal.equinix.com/developers/docs/networking/layer2/). Will be one of layer3, hybrid, hybrid-bonded, layer2-individual, layer2-bonded",
        "Computed": true,
        "Deprecated": "You should handle Network Type with one of 'equinix_metal_port' or 'equinix_metal_device_network_type' resources. See section 'Guides' for more info"
      },
      "operating_system": {
        "Type": "String",
        "Required": true,
        "Description": "The operating system slug. To find the slug, or visit [Operating Systems API docs](https://metal.equinix.com/developers/api/operatingsystems), set your API auth token in the top of the page and see JSON from the API response"
      },
      "plan": {
        "Type": "String",
        "Required": true,
        "Description": "The device plan slug. To find the plan slug, visit [Device plans API docs](https://metal.equinix.com/developers/api/plans), set your auth token in the top of the page and see JSON from the API response"
      },
      "ports": {
        "Type": "List",
        "Description": "Ports assigned to the device",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bonded": {
              "Type": "Bool",
              "Description": "Whether this port is part of a bond in bonded network setup",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Description": "The ID of the device",
              "Computed": true
            },
            "mac": {
              "Type": "String",
              "Description": "MAC address assigned to the port",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Name of the port (e.g. eth0, or bond0)",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "One of [private_ipv4, public_ipv4, public_ipv6]",
              "Computed": true
            }
          }
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the project in which to create the device"
      },
      "project_ssh_key_ids": {
        "Type": "List",
        "Optional": true,
        "Description": "Array of IDs of the project SSH keys which should be added to the device. If you omit this, SSH keys of all the members of the parent project will be added to the device. If you specify this array, only the listed project SSH keys (and any user_ssh_key_ids) will be added. Project SSH keys can be created with the [equinix_metal_project_ssh_key](equinix_metal_project_ssh_key.md) resource",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "reinstall": {
        "Type": "List",
        "Optional": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "deprovision_fast": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether the OS disk should be filled with `00h` bytes before reinstall",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "enabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether the device should be reinstalled instead of destroyed",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "preserve_data": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether the non-OS disks should be kept or wiped during reinstall",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            }
          }
        }
      },
      "root_password": {
        "Type": "String",
        "Description": "Root password to the server (disabled after 24 hours)",
        "Computed": true
      },
      "ssh_key_ids": {
        "Type": "List",
        "Description": "List of IDs of SSH keys deployed in the device, can be both user and project SSH keys",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "state": {
        "Type": "String",
        "Description": "The status of the device",
        "Computed": true
      },
      "storage": {
        "Type": "String",
        "Optional": true,
        "Description": "JSON for custom partitioning. Only usable on reserved hardware. More information in in the [Custom Partitioning and RAID](https://metal.equinix.com/developers/docs/servers/custom-partitioning-raid/) doc"
      },
      "tags": {
        "Type": "List",
        "Optional": true,
        "Description": "Tags attached to the device",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "termination_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Timestamp for device termination. For example \"2021-09-03T16:32:00+03:00\". If you don't supply timezone info, timestamp is assumed to be in UTC."
      },
      "updated": {
        "Type": "String",
        "Description": "The timestamp for the last time the device was updated",
        "Computed": true
      },
      "user_data": {
        "Type": "String",
        "Optional": true,
        "Description": "A string of the desired User Data for the device"
      },
      "user_ssh_key_ids": {
        "Type": "List",
        "Optional": true,
        "Description": "Array of IDs of the user SSH keys which should be added to the device. If you omit this, SSH keys of all the members of the parent project will be added to the device. If you specify this array, only the listed user SSH keys (and any project_ssh_key_ids) will be added. User SSH keys can be created with the [equinix_metal_ssh_key](equinix_metal_ssh_key.md) resource",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "wait_for_reservation_deprovision": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Only used for devices in reserved hardware. If set, the deletion of this device will block until the hardware reservation is marked provisionable (about 4 minutes in August 2019)",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      }
    },
    "equinix_metal_device_network_type": {
      "device_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the device on which the network type should be set"
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "Network type to set. Must be one of layer3, hybrid, hybrid-bonded, layer2-individual, layer2-bonded"
      }
    },
    "equinix_metal_gateway": {
      "ip_reservation_id": {
        "Type": "String",
        "Optional": true,
        "Description": "UUID of the Public or VRF IP Reservation to associate, must be in the same metro as the VLAN",
        "ConflictsWith": [
          "private_ipv4_subnet_size"
        ]
      },
      "private_ipv4_subnet_size": {
        "Type": "Int",
        "Optional": true,
        "Description": "Size of the private IPv4 subnet to create for this gateway, one of [8 16 32 64 128]",
        "Computed": true,
        "ConflictsWith": [
          "ip_reservation_id",
          "vrf_id"
        ]
      },
      "project_id": {
        "Type": "String",
        "Required": true,
        "Description": "UUID of the Project where the Gateway is scoped to"
      },
      "state": {
        "Type": "String",
        "Description": "Status of the gateway resource",
        "Computed": true
      },
      "vlan_id": {
        "Type": "String",
        "Required": true,
        "Description": "UUID of the VLAN to associate"
      },
      "vrf_id": {
        "Type": "String",
        "Description": "UUID of the VRF associated with the IP Reservation",
        "Computed": true
      }
    },
    "equinix_metal_ip_attachment": {
      "address": {
        "Type": "String",
        "Computed": true
      },
      "address_family": {
        "Type": "Int",
        "Description": "Address family as integer (4 or 6)",
        "Computed": true
      },
      "cidr": {
        "Type": "Int",
        "Description": "Length of CIDR prefix of the block as integer",
        "Computed": true
      },
      "cidr_notation": {
        "Type": "String",
        "Required": true
      },
      "device_id": {
        "Type": "String",
        "Required": true
      },
      "gateway": {
        "Type": "String",
        "Computed": true
      },
      "global": {
        "Type": "Bool",
        "Description": "Flag indicating whether IP block is global, i.e. assignable in any location",
        "Computed": true
      },
      "manageable": {
        "Type": "Bool",
        "Computed": true
      },
      "management": {
        "Type": "Bool",
        "Computed": true
      },
      "netmask": {
        "Type": "String",
        "Description": "Mask in decimal notation, e.g. 255.255.255.0",
        "Computed": true
      },
      "network": {
        "Type": "String",
        "Description": "Network IP address portion of the block specification",
        "Computed": true
      },
      "public": {
        "Type": "Bool",
        "Description": "Flag indicating whether IP block is addressable from the Internet",
        "Computed": true
      },
      "vrf_id": {
        "Type": "String",
        "Computed": true
      }
    },
    "equinix_metal_organization": {
      "address": {
        "Type": "List",
        "Required": true,
        "Description": "Address information block",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "String",
              "Required": true,
              "Description": "Postal address"
            },
            "city": {
              "Type": "String",
              "Required": true,
              "Description": "City name"
            },
            "country": {
              "Type": "String",
              "Required": true,
              "Description": "Two letter country code (ISO 3166-1 alpha-2), e.g. US"
            },
            "state": {
              "Type": "String",
              "Optional": true,
              "Description": "State name"
            },
            "zip_code": {
              "Type": "String",
              "Required": true,
              "Description": "Zip Code"
            }
          }
        }
      },
      "created": {
        "Type": "String",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description string"
      },
      "logo": {
        "Type": "String",
        "Optional": true,
        "Description": "Logo URL"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the Organization"
      },
      "twitter": {
        "Type": "String",
        "Optional": true,
        "Description": "Twitter handle"
      },
      "updated": {
        "Type": "String",
        "Computed": true
      },
      "website": {
        "Type": "String",
        "Optional": true,
        "Description": "Website link"
      }
    },
    "equinix_metal_organization_member": {
      "created": {
        "Type": "String",
        "Description": "When the invitation was created (only known in the invitation stage)",
        "Computed": true
      },
      "invited_by": {
        "Type": "String",
        "Description": "The user id of the user that sent the invitation (only known in the invitation stage)",
        "Computed": true
      },
      "invitee": {
        "Type": "String",
        "Required": true,
        "Description": "The email address of the user to invite"
      },
      "message": {
        "Type": "String",
        "Optional": true,
        "Description": "A message to the invitee (only used during the invitation stage)"
      },
      "nonce": {
        "Type": "String",
        "Description": "The nonce for the invitation (only known in the invitation stage)",
        "Computed": true
      },
      "organization_id": {
        "Type": "String",
        "Required": true,
        "Description": "The organization to invite the user to"
      },
      "projects_ids": {
        "Type": "Set",
        "Required": true,
        "Description": "Project IDs the member has access to within the organization. If the member is an 'owner', the projects list should be empty.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "roles": {
        "Type": "Set",
        "Required": true,
        "Description": "Organization roles (owner, collaborator, limited_collaborator, billing)",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "state": {
        "Type": "String",
        "Description": "The state of the membership ('invited' when an invitation is open, 'active' when the user is an organization member)",
        "Computed": true
      },
      "updated": {
        "Type": "String",
        "Description": "When the invitation was updated (only known in the invitation stage)",
        "Computed": true
      }
    },
    "equinix_metal_port": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "bond_id": {
        "Type": "String",
        "Description": "UUID of the bond port",
        "Computed": true
      },
      "bond_name": {
        "Type": "String",
        "Description": "Name of the bond port",
        "Computed": true
      },
      "bonded": {
        "Type": "Bool",
        "Required": true,
        "Description": "Flag indicating whether the port should be bonded"
      },
      "disbond_supported": {
        "Type": "Bool",
        "Description": "Flag indicating whether the port can be removed from a bond",
        "Computed": true
      },
      "layer2": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Flag indicating whether the port is in layer2 (or layer3) mode"
      },
      "mac": {
        "Type": "String",
        "Description": "MAC address of the port",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "Name of the port to look up, e.g. bond0, eth1",
        "Computed": true
      },
      "native_vlan_id": {
        "Type": "String",
        "Optional": true,
        "Description": "UUID of native VLAN of the port"
      },
      "network_type": {
        "Type": "String",
        "Description": "One of layer2-bonded, layer2-individual, layer3, hybrid and hybrid-bonded. This attribute is only set on bond ports.",
        "Computed": true
      },
      "port_id": {
        "Type": "String",
        "Required": true,
        "Description": "UUID of the port to lookup"
      },
      "reset_on_delete": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Behavioral setting to reset the port to default settings. For a bond port it means layer3 without vlans attached, eth ports will be bonded without native vlan and vlans attached"
      },
      "type": {
        "Type": "String",
        "Description": "Port type",
        "Computed": true
      },
      "vlan_ids": {
        "Type": "Set",
        "Optional": true,
        "Description": "UUIDs VLANs to attach. To avoid jitter, use the UUID and not the VXLAN",
        "Computed": true,
        "ConflictsWith": [
          "vxlan_ids"
        ],
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "vxlan_ids": {
        "Type": "Set",
        "Optional": true,
        "Description": "VLAN VXLAN ids to attach (example: [1000])",
        "Computed": true,
        "ConflictsWith": [
          "vlan_ids"
        ],
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      }
    },
    "equinix_metal_port_vlan_attachment": {
      "device_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of device to be assigned to the VLAN"
      },
      "force_bond": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Add port back to the bond when this resource is removed. Default is false",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "native": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Mark this VLAN a native VLAN on the port. This can be used only if this assignment assigns second or further VLAN to the port. To ensure that this attachment is not first on a port, you can use depends_on pointing to another equinix_metal_port_vlan_attachment, just like in the layer2-individual example above",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "port_id": {
        "Type": "String",
        "Description": "UUID of device port",
        "Computed": true
      },
      "port_name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of network port to be assigned to the VLAN"
      },
      "vlan_id": {
        "Type": "String",
        "Description": "UUID of VLAN API resource",
        "Computed": true
      },
      "vlan_vnid": {
        "Type": "Int",
        "Required": true,
        "Description": "VXLAN Network Identifier, integer"
      }
    },
    "equinix_metal_project": {
      "backend_transfer": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable or disable [Backend Transfer](https://metal.equinix.com/developers/docs/networking/backend-transfer/), default is false",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "bgp_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Optional BGP settings. Refer to [Equinix Metal guide for BGP](https://metal.equinix.com/developers/docs/networking/local-global-bgp/)",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "asn": {
              "Type": "Int",
              "Required": true,
              "Description": "Autonomous System Number for local BGP deployment"
            },
            "deployment_type": {
              "Type": "String",
              "Required": true,
              "Description": "\"local\" or \"global\", the local is likely to be usable immediately, the global will need to be review by Equinix Metal engineers"
            },
            "max_prefix": {
              "Type": "Int",
              "Description": "The maximum number of route filters allowed per server",
              "Computed": true
            },
            "md5": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for BGP session in plaintext (not a checksum)"
            },
            "status": {
              "Type": "String",
              "Description": "Status of BGP configuration in the project",
              "Computed": true
            }
          }
        }
      },
      "created": {
        "Type": "String",
        "Description": "The timestamp for when the project was created",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the project"
      },
      "organization_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The UUID of organization under which you want to create the project. If you leave it out, the project will be create under your the default organization of your account",
        "Computed": true
      },
      "payment_method_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The UUID of payment method for this project. The payment method and the project need to belong to the same organization (passed with organization_id, or default)",
        "Computed": true
      },
      "updated": {
        "Type": "String",
        "Description": "The timestamp for the last time the project was updated",
        "Computed": true
      }
    },
    "equinix_metal_project_api_key": {
      "description": {
        "Type": "String",
        "Required": true,
        "Description": "Description string for the API key"
      },
      "project_id": {
        "Type": "String",
        "Required": true,
        "Description": "UUID of project which the new API key is scoped to"
      },
      "read_only": {
        "Type": "Bool",
        "Required": true,
        "Description": "Flag indicating whether the API key shoud be read-only"
      },
      "token": {
        "Type": "String",
        "Description": "API token for API clients",
        "Computed": true
      }
    },
    "equinix_metal_project_ssh_key": {
      "created": {
        "Type": "String",
        "Description": "The timestamp for when the SSH key was created",
        "Computed": true
      },
      "fingerprint": {
        "Type": "String",
        "Description": "The fingerprint of the SSH key",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the SSH key for identification"
      },
      "owner_id": {
        "Type": "String",
        "Description": "The UUID of the Equinix Metal API User who owns this key",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of parent project"
      },
      "public_key": {
        "Type": "String",
        "Required": true,
        "Description": "The public key. If this is a file, it"
      },
      "updated": {
        "Type": "String",
        "Description": "The timestamp for the last time the SSH key was updated",
        "Computed": true
      }
    },
    "equinix_metal_reserved_ip_block": {
      "__timeouts__": [
        "create"
      ],
      "address": {
        "Type": "String",
        "Computed": true
      },
      "address_family": {
        "Type": "Int",
        "Description": "Address family as integer (4 or 6)",
        "Computed": true
      },
      "cidr": {
        "Type": "Int",
        "Optional": true,
        "Description": "the size of the network to reserve from an existing vrf ip_range. `cidr` can only be specified with `vrf_id`. Minimum range is 22-29, with 30-31 supported and necessary for virtual-circuits",
        "Computed": true
      },
      "cidr_notation": {
        "Type": "String",
        "Computed": true
      },
      "custom_data": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom Data is an arbitrary object (submitted in Terraform as serialized JSON) to assign to the IP Reservation. This may be helpful for self-managed IPAM. The object must be valid JSON.",
        "ConfigImplicitMode": "Attr",
        "Default": {
          "Type": "string",
          "Value": "{}"
        },
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Arbitrary description"
      },
      "facility": {
        "Type": "String",
        "Optional": true,
        "Description": "Facility where to allocate the public IP address block, makes sense only for type==public_ipv4, must be empty for type==global_ipv4, conflicts with metro",
        "ConflictsWith": [
          "metro"
        ]
      },
      "gateway": {
        "Type": "String",
        "Computed": true
      },
      "global": {
        "Type": "Bool",
        "Description": "Flag indicating whether IP block is global, i.e. assignable in any location",
        "Computed": true
      },
      "manageable": {
        "Type": "Bool",
        "Computed": true
      },
      "management": {
        "Type": "Bool",
        "Computed": true
      },
      "metro": {
        "Type": "String",
        "Optional": true,
        "Description": "Metro where to allocate the public IP address block, makes sense only for type==public_ipv4, must be empty for type==global_ipv4, conflicts with facility",
        "ConflictsWith": [
          "facility"
        ]
      },
      "netmask": {
        "Type": "String",
        "Description": "Mask in decimal notation, e.g. 255.255.255.0",
        "Computed": true
      },
      "network": {
        "Type": "String",
        "Optional": true,
        "Description": "an unreserved network address from an existing vrf ip_range. `network` can only be specified with vrf_id",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Required": true,
        "Description": "The metal project ID where to allocate the address block"
      },
      "public": {
        "Type": "Bool",
        "Description": "Flag indicating whether IP block is addressable from the Internet",
        "Computed": true
      },
      "quantity": {
        "Type": "Int",
        "Optional": true,
        "Description": "The number of allocated /32 addresses, a power of 2",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Tags attached to the reserved block",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "Either global_ipv4, public_ipv4, or vrf. Defaults to public_ipv4.",
        "Default": {
          "Type": "string",
          "Value": "public_ipv4"
        }
      },
      "vrf_id": {
        "Type": "String",
        "Optional": true,
        "Description": "VRF ID for type=vrf reservations"
      },
      "wait_for_state": {
        "Type": "String",
        "Optional": true,
        "Description": "Wait for the IP reservation block to reach a desired state on resource creation. One of: `pending`, `created`. The `created` state is default and recommended if the addresses are needed within the configuration. An error will be returned if a timeout or the `denied` state is encountered.",
        "Default": {
          "Type": "packngo.IPReservationState",
          "Value": "created"
        }
      }
    },
    "equinix_metal_spot_market_request": {
      "__timeouts__": [
        "create",
        "delete"
      ],
      "devices_max": {
        "Type": "Int",
        "Required": true,
        "Description": "Maximum number devices to be created"
      },
      "devices_min": {
        "Type": "Int",
        "Required": true,
        "Description": "Miniumum number devices to be created"
      },
      "facilities": {
        "Type": "List",
        "Optional": true,
        "Description": "Facility IDs where devices should be created",
        "Computed": true,
        "ConflictsWith": [
          "metro"
        ],
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "instance_parameters": {
        "Type": "List",
        "Required": true,
        "Description": "Parameters for devices provisioned from this request. You can find the parameter description from the [equinix_metal_device doc](device.md)",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "always_pxe": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "billing_cycle": {
              "Type": "String",
              "Required": true
            },
            "customdata": {
              "Type": "String",
              "Optional": true
            },
            "description": {
              "Type": "String",
              "Optional": true
            },
            "features": {
              "Type": "List",
              "Optional": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "hostname": {
              "Type": "String",
              "Required": true
            },
            "ipxe_script_url": {
              "Type": "String",
              "Optional": true
            },
            "locked": {
              "Type": "Bool",
              "Optional": true
            },
            "operating_system": {
              "Type": "String",
              "Required": true
            },
            "plan": {
              "Type": "String",
              "Required": true
            },
            "project_ssh_keys": {
              "Type": "List",
              "Optional": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "tags": {
              "Type": "List",
              "Optional": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "termintation_time": {
              "Type": "String",
              "Computed": true
            },
            "user_ssh_keys": {
              "Type": "List",
              "Optional": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "userdata": {
              "Type": "String",
              "Optional": true
            }
          }
        }
      },
      "max_bid_price": {
        "Type": "Float",
        "Required": true,
        "Description": "Maximum price user is willing to pay per hour per device"
      },
      "metro": {
        "Type": "String",
        "Optional": true,
        "Description": "Metro where devices should be created",
        "ConflictsWith": [
          "facilities"
        ]
      },
      "project_id": {
        "Type": "String",
        "Required": true,
        "Description": "Project ID"
      },
      "wait_for_devices": {
        "Type": "Bool",
        "Optional": true,
        "Description": "On resource creation - wait until all desired devices are active, on resource destruction - wait until devices are removed"
      }
    },
    "equinix_metal_ssh_key": {
      "created": {
        "Type": "String",
        "Description": "The timestamp for when the SSH key was created",
        "Computed": true
      },
      "fingerprint": {
        "Type": "String",
        "Description": "The fingerprint of the SSH key",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the SSH key for identification"
      },
      "owner_id": {
        "Type": "String",
        "Description": "The UUID of the Equinix Metal API User who owns this key",
        "Computed": true
      },
      "public_key": {
        "Type": "String",
        "Required": true,
        "Description": "The public key. If this is a file, it"
      },
      "updated": {
        "Type": "String",
        "Description": "The timestamp for the last time the SSH key was updated",
        "Computed": true
      }
    },
    "equinix_metal_user_api_key": {
      "description": {
        "Type": "String",
        "Required": true,
        "Description": "Description string for the API key"
      },
      "read_only": {
        "Type": "Bool",
        "Required": true,
        "Description": "Flag indicating whether the API key shoud be read-only"
      },
      "token": {
        "Type": "String",
        "Description": "API token for API clients",
        "Computed": true
      },
      "user_id": {
        "Type": "String",
        "Description": "UUID of user owning this key",
        "Computed": true
      }
    },
    "equinix_metal_virtual_circuit": {
      "connection_id": {
        "Type": "String",
        "Required": true,
        "Description": "UUID of Connection where the VC is scoped to"
      },
      "customer_ip": {
        "Type": "String",
        "Optional": true,
        "Description": "The Customer IP address which the CSR switch will peer with. Will default to the other usable IP in the subnet."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description of the Virtual Circuit resource"
      },
      "md5": {
        "Type": "String",
        "Optional": true,
        "Description": "The password that can be set for the VRF BGP peer"
      },
      "metal_ip": {
        "Type": "String",
        "Optional": true,
        "Description": "The Metal IP address for the SVI (Switch Virtual Interface) of the VirtualCircuit. Will default to the first usable IP in the subnet."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the Virtual Circuit resource"
      },
      "nni_vlan": {
        "Type": "Int",
        "Optional": true,
        "Description": "Equinix Metal network-to-network VLAN ID (optional when the connection has mode=tunnel)"
      },
      "nni_vnid": {
        "Type": "Int",
        "Description": "Nni VLAN ID parameter, see https://metal.equinix.com/developers/docs/networking/fabric/",
        "Computed": true
      },
      "peer_asn": {
        "Type": "Int",
        "Optional": true,
        "Description": "The BGP ASN of the peer. The same ASN may be the used across several VCs, but it cannot be the same as the local_asn of the VRF."
      },
      "port_id": {
        "Type": "String",
        "Required": true,
        "Description": "UUID of the Connection Port where the VC is scoped to"
      },
      "project_id": {
        "Type": "String",
        "Required": true,
        "Description": "UUID of the Project where the VC is scoped to"
      },
      "speed": {
        "Type": "String",
        "Optional": true,
        "Description": "Description of the Virtual Circuit speed. This is for information purposes and is computed when the connection type is shared.",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "Status of the virtual circuit resource",
        "Computed": true
      },
      "subnet": {
        "Type": "String",
        "Optional": true,
        "Description": "A subnet from one of the IP blocks associated with the VRF that we will help create an IP reservation for. Can only be either a /30 or /31.\n\t\t\t\t * For a /31 block, it will only have two IP addresses, which will be used for the metal_ip and customer_ip.\n\t\t\t\t * For a /30 block, it will have four IP addresses, but the first and last IP addresses are not usable. We will default to the first usable IP address for the metal_ip."
      },
      "tags": {
        "Type": "List",
        "Optional": true,
        "Description": "Tags attached to the virtual circuit",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "vlan_id": {
        "Type": "String",
        "Optional": true,
        "Description": "UUID of the VLAN to associate"
      },
      "vnid": {
        "Type": "Int",
        "Description": "VNID VLAN parameter, see https://metal.equinix.com/developers/docs/networking/fabric/",
        "Computed": true
      },
      "vrf_id": {
        "Type": "String",
        "Optional": true,
        "Description": "UUID of the VRF to associate"
      }
    },
    "equinix_metal_vlan": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description string"
      },
      "facility": {
        "Type": "String",
        "Optional": true,
        "Description": "Facility where to create the VLAN",
        "ConflictsWith": [
          "metro"
        ]
      },
      "metro": {
        "Type": "String",
        "Optional": true,
        "ConflictsWith": [
          "facility"
        ]
      },
      "project_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of parent project"
      },
      "vxlan": {
        "Type": "Int",
        "Optional": true,
        "Description": "VLAN ID, must be unique in metro",
        "Computed": true
      }
    },
    "equinix_metal_vrf": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description of the VRF"
      },
      "ip_ranges": {
        "Type": "Set",
        "Optional": true,
        "Description": "All IPv4 and IPv6 Ranges that will be available to BGP Peers. IPv4 addresses must be /8 or smaller with a minimum size of /29. IPv6 must be /56 or smaller with a minimum size of /64. Ranges must not overlap other ranges within the VRF.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "local_asn": {
        "Type": "Int",
        "Optional": true,
        "Description": "The 4-byte ASN set on the VRF.",
        "Computed": true
      },
      "metro": {
        "Type": "String",
        "Required": true,
        "Description": "Metro Code"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "User-supplied name of the VRF, unique to the project"
      },
      "project_id": {
        "Type": "String",
        "Required": true,
        "Description": "Project ID"
      }
    },
    "equinix_network_acl_template": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "ACL template description, up to 200 characters"
      },
      "device_acl_status": {
        "Type": "String",
        "Description": "Status of ACL template provisioning process on a device, where template was applied",
        "Computed": true
      },
      "device_details": {
        "Type": "List",
        "Description": "Device Details to which ACL template is assigned to. ",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "acl_status": {
              "Type": "String",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Computed": true
            },
            "uuid": {
              "Type": "String",
              "Description": "Inbound rule sequence number",
              "Computed": true
            }
          }
        }
      },
      "device_id": {
        "Type": "String",
        "Description": "Identifier of a network device where template was applied",
        "Computed": true,
        "Deprecated": "Refer to device details get device information"
      },
      "inbound_rule": {
        "Type": "List",
        "Required": true,
        "Description": "One or more rules to specify allowed inbound traffic. Rules are ordered, matching traffic rule stops processing subsequent ones.",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "description": {
              "Type": "String",
              "Optional": true,
              "Description": "Inbound rule description, up to 200 characters"
            },
            "dst_port": {
              "Type": "String",
              "Required": true,
              "Description": "Inbound traffic destination ports. Either up to 10, comma separated ports or port range or any word"
            },
            "protocol": {
              "Type": "String",
              "Required": true,
              "Description": "Inbound traffic protocol. One of: `IP`, `TCP`, `UDP`"
            },
            "sequence_number": {
              "Type": "Int",
              "Description": "Inbound rule sequence number",
              "Computed": true
            },
            "source_type": {
              "Type": "String",
              "Description": "Type of traffic source used in a given inbound rule",
              "Computed": true,
              "Deprecated": "Source Type will not be returned"
            },
            "src_port": {
              "Type": "String",
              "Required": true,
              "Description": "Inbound traffic source ports. Either up to 10, comma separated ports or port range or any word"
            },
            "subnet": {
              "Type": "String",
              "Optional": true,
              "Description": "Inbound traffic source IP subnet in CIDR format"
            },
            "subnets": {
              "Type": "List",
              "Optional": true,
              "Description": "Inbound traffic source IP subnets in CIDR format",
              "MinItems": 1,
              "Deprecated": "Use Subnet instead",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "metro_code": {
        "Type": "String",
        "Optional": true,
        "Description": "ACL template location metro code",
        "Deprecated": "Metro Code is no longer required"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "ACL template name"
      },
      "uuid": {
        "Type": "String",
        "Description": "Unique identifier of ACL template resource",
        "Computed": true
      }
    },
    "equinix_network_bgp": {
      "__timeouts__": [
        "create"
      ],
      "authentication_key": {
        "Type": "String",
        "Optional": true,
        "Description": "Shared key used for BGP peer authentication"
      },
      "connection_id": {
        "Type": "String",
        "Required": true,
        "Description": "Identifier of a connection established between network device and remote service provider that will be used for peering"
      },
      "device_id": {
        "Type": "String",
        "Description": "Unique identifier of a network device that is a local peer in a given BGP peering configuration",
        "Computed": true
      },
      "local_asn": {
        "Type": "Int",
        "Required": true,
        "Description": "Local ASN number"
      },
      "local_ip_address": {
        "Type": "String",
        "Required": true,
        "Description": "IP address in CIDR format of a local device"
      },
      "provisioning_status": {
        "Type": "String",
        "Description": "BGP peering configuration provisioning status",
        "Computed": true
      },
      "remote_asn": {
        "Type": "Int",
        "Required": true,
        "Description": "Remote ASN number"
      },
      "remote_ip_address": {
        "Type": "String",
        "Required": true,
        "Description": "IP address of remote peer"
      },
      "state": {
        "Type": "String",
        "Description": "BGP peer state",
        "Computed": true
      },
      "uuid": {
        "Type": "String",
        "Description": "BGP peering configuration unique identifier",
        "Computed": true
      }
    },
    "equinix_network_device": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "account_number": {
        "Type": "String",
        "Required": true,
        "Description": "Device billing account number"
      },
      "acl_template_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique identifier of applied ACL template"
      },
      "additional_bandwidth": {
        "Type": "Int",
        "Optional": true,
        "Description": "Additional Internet bandwidth, in Mbps, that will be allocated to the device",
        "Computed": true
      },
      "asn": {
        "Type": "Int",
        "Description": "Autonomous system number",
        "Computed": true
      },
      "byol": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value that determines device licensing mode: bring your own license or subscription (default)",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "cluster_details": {
        "Type": "List",
        "Optional": true,
        "Description": "An object that has the cluster details",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cluster_id": {
              "Type": "String",
              "Description": "The id of the cluster",
              "Computed": true
            },
            "cluster_name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the cluster device"
            },
            "node0": {
              "Type": "List",
              "Required": true,
              "Description": "An object that has node0 details",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "license_file_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "License file id. This is necessary for Fortinet and Juniper clusters",
                    "ConflictsWith": [
                      "license_file_id"
                    ]
                  },
                  "license_token": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "License token. This is necessary for Palo Alto clusters",
                    "ConflictsWith": [
                      "license_token"
                    ]
                  },
                  "name": {
                    "Type": "String",
                    "Description": "The name of the node",
                    "Computed": true
                  },
                  "uuid": {
                    "Type": "String",
                    "Description": "The unique id of the node",
                    "Computed": true
                  },
                  "vendor_configuration": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "An object that has fields relevant to the vendor of the cluster device",
                    "MaxItems": 1,
                    "ConflictsWith": [
                      "vendor_configuration"
                    ],
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "activation_key": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Activation key. This is required for Velocloud clusters"
                        },
                        "admin_password": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The administrative password of the device. You can use it to log in to the console. This field is not available for all device types",
                          "Computed": true
                        },
                        "controller1": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "System IP Address. Mandatory for the Fortinet SDWAN cluster device"
                        },
                        "controller_fqdn": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Controller fqdn. This is required for Velocloud clusters"
                        },
                        "hostname": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Hostname. This is necessary for Palo Alto, Juniper, and Fortinet clusters"
                        },
                        "root_password": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The CLI password of the device. This field is relevant only for the Velocloud SDWAN cluster"
                        }
                      }
                    }
                  }
                }
              }
            },
            "node1": {
              "Type": "List",
              "Required": true,
              "Description": "An object that has node1 details",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "license_file_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "License file id. This is necessary for Fortinet and Juniper clusters",
                    "ConflictsWith": [
                      "license_file_id"
                    ]
                  },
                  "license_token": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "License token. This is necessary for Palo Alto clusters",
                    "ConflictsWith": [
                      "license_token"
                    ]
                  },
                  "name": {
                    "Type": "String",
                    "Description": "The name of the node",
                    "Computed": true
                  },
                  "uuid": {
                    "Type": "String",
                    "Description": "The unique id of the node",
                    "Computed": true
                  },
                  "vendor_configuration": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "An object that has fields relevant to the vendor of the cluster device",
                    "MaxItems": 1,
                    "ConflictsWith": [
                      "vendor_configuration"
                    ],
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "activation_key": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Activation key. This is required for Velocloud clusters"
                        },
                        "admin_password": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The administrative password of the device. You can use it to log in to the console. This field is not available for all device types",
                          "Computed": true
                        },
                        "controller1": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "System IP Address. Mandatory for the Fortinet SDWAN cluster device"
                        },
                        "controller_fqdn": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Controller fqdn. This is required for Velocloud clusters"
                        },
                        "hostname": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Hostname. This is necessary for Palo Alto, Juniper, and Fortinet clusters"
                        },
                        "root_password": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The CLI password of the device. This field is relevant only for the Velocloud SDWAN cluster"
                        }
                      }
                    }
                  }
                }
              }
            },
            "num_of_nodes": {
              "Type": "Int",
              "Description": "The number of nodes in the cluster",
              "Computed": true
            }
          }
        }
      },
      "core_count": {
        "Type": "Int",
        "Required": true,
        "Description": "Number of CPU cores used by device"
      },
      "hostname": {
        "Type": "String",
        "Optional": true,
        "Description": "Device hostname prefix",
        "Computed": true
      },
      "ibx": {
        "Type": "String",
        "Description": "Device location Equinix Business Exchange name",
        "Computed": true
      },
      "interface": {
        "Type": "List",
        "Description": "List of device interfaces",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "assigned_type": {
              "Type": "String",
              "Description": "Interface management type (Equinix Managed or empty)",
              "Computed": true
            },
            "id": {
              "Type": "Int",
              "Description": "Interface identifier",
              "Computed": true
            },
            "ip_address": {
              "Type": "String",
              "Description": "interface IP address",
              "Computed": true
            },
            "mac_address": {
              "Type": "String",
              "Description": "Interface MAC addres",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Interface name",
              "Computed": true
            },
            "operational_status": {
              "Type": "String",
              "Description": "Interface operational status (up or down)",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "Interface status (AVAILABLE, RESERVED, ASSIGNED)",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Interface type",
              "Computed": true
            }
          }
        }
      },
      "interface_count": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of network interfaces on a device. If not specified, default number for a given device type will be used",
        "Computed": true
      },
      "license_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Path to the license file that will be uploaded and applied on a device, applicable for some device types in BYOL licensing mode"
      },
      "license_file_id": {
        "Type": "String",
        "Description": "Unique identifier of applied license file",
        "Computed": true
      },
      "license_status": {
        "Type": "String",
        "Description": "Device license registration status",
        "Computed": true
      },
      "license_token": {
        "Type": "String",
        "Optional": true,
        "Description": "License Token applicable for some device types in BYOL licensing mode",
        "ConflictsWith": [
          "license_file"
        ]
      },
      "metro_code": {
        "Type": "String",
        "Required": true,
        "Description": "Device location metro code"
      },
      "mgmt_acl_template_uuid": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique identifier of applied MGMT ACL template"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Device name"
      },
      "notifications": {
        "Type": "Set",
        "Required": true,
        "Description": "List of email addresses that will receive device status notifications",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "order_reference": {
        "Type": "String",
        "Optional": true,
        "Description": "Name/number used to identify device order on the invoice"
      },
      "package_code": {
        "Type": "String",
        "Required": true,
        "Description": "Device software package code"
      },
      "purchase_order_number": {
        "Type": "String",
        "Optional": true,
        "Description": "Purchase order number associated with a device order"
      },
      "redundancy_type": {
        "Type": "String",
        "Description": "Device redundancy type applicable for HA devices, either primary or secondary",
        "Computed": true
      },
      "redundant_id": {
        "Type": "String",
        "Description": "Unique identifier for a redundant device, applicable for HA device",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Description": "Device location region",
        "Computed": true
      },
      "secondary_device": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of secondary device applicable for HA setup",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "account_number": {
              "Type": "String",
              "Required": true,
              "Description": "Device billing account number"
            },
            "acl_template_id": {
              "Type": "String",
              "Optional": true,
              "Description": "Unique identifier of applied ACL template"
            },
            "additional_bandwidth": {
              "Type": "Int",
              "Optional": true,
              "Description": "Additional Internet bandwidth, in Mbps, that will be allocated to the device",
              "Computed": true
            },
            "asn": {
              "Type": "Int",
              "Description": "Autonomous system number",
              "Computed": true
            },
            "hostname": {
              "Type": "String",
              "Optional": true,
              "Description": "Device hostname prefix"
            },
            "ibx": {
              "Type": "String",
              "Description": "Device location Equinix Business Exchange name",
              "Computed": true
            },
            "interface": {
              "Type": "List",
              "Description": "List of device interfaces",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "assigned_type": {
                    "Type": "String",
                    "Description": "Interface management type (Equinix Managed or empty)",
                    "Computed": true
                  },
                  "id": {
                    "Type": "Int",
                    "Description": "Interface identifier",
                    "Computed": true
                  },
                  "ip_address": {
                    "Type": "String",
                    "Description": "interface IP address",
                    "Computed": true
                  },
                  "mac_address": {
                    "Type": "String",
                    "Description": "Interface MAC addres",
                    "Computed": true
                  },
                  "name": {
                    "Type": "String",
                    "Description": "Interface name",
                    "Computed": true
                  },
                  "operational_status": {
                    "Type": "String",
                    "Description": "Interface operational status (up or down)",
                    "Computed": true
                  },
                  "status": {
                    "Type": "String",
                    "Description": "Interface status (AVAILABLE, RESERVED, ASSIGNED)",
                    "Computed": true
                  },
                  "type": {
                    "Type": "String",
                    "Description": "Interface type",
                    "Computed": true
                  }
                }
              }
            },
            "license_file": {
              "Type": "String",
              "Optional": true,
              "Description": "Path to the license file that will be uploaded and applied on a device, applicable for some device types in BYOL licensing mode"
            },
            "license_file_id": {
              "Type": "String",
              "Description": "Unique identifier of applied license file",
              "Computed": true
            },
            "license_status": {
              "Type": "String",
              "Description": "Device license registration status",
              "Computed": true
            },
            "license_token": {
              "Type": "String",
              "Optional": true,
              "Description": "License Token applicable for some device types in BYOL licensing mode",
              "ConflictsWith": [
                "secondary_device.0.license_file"
              ]
            },
            "metro_code": {
              "Type": "String",
              "Required": true,
              "Description": "Device location metro code"
            },
            "mgmt_acl_template_uuid": {
              "Type": "String",
              "Optional": true,
              "Description": "Unique identifier of applied MGMT ACL template"
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Device name"
            },
            "notifications": {
              "Type": "Set",
              "Required": true,
              "Description": "List of email addresses that will receive device status notifications",
              "MinItems": 1,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "redundancy_type": {
              "Type": "String",
              "Description": "Device redundancy type applicable for HA devices, either primary or secondary",
              "Computed": true
            },
            "redundant_id": {
              "Type": "String",
              "Description": "Unique identifier for a redundant device, applicable for HA device",
              "Computed": true
            },
            "region": {
              "Type": "String",
              "Description": "Device location region",
              "Computed": true
            },
            "ssh_ip_address": {
              "Type": "String",
              "Description": "IP address of SSH enabled interface on the device",
              "Computed": true
            },
            "ssh_ip_fqdn": {
              "Type": "String",
              "Description": "FQDN of SSH enabled interface on the device",
              "Computed": true
            },
            "ssh_key": {
              "Type": "Set",
              "Optional": true,
              "Description": "Definition of SSH key that will be provisioned on a device",
              "MaxItems": 1,
              "MinItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "key_name": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Reference by name to previously provisioned public SSH key"
                  },
                  "username": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Username associated with given key"
                  }
                }
              }
            },
            "status": {
              "Type": "String",
              "Description": "Device provisioning status",
              "Computed": true
            },
            "uuid": {
              "Type": "String",
              "Description": "Device unique identifier",
              "Computed": true
            },
            "vendor_configuration": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of vendor specific configuration parameters for a device (controller1, activationKey, managementType, siteId, systemIpAddress)",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "wan_interface_id": {
              "Type": "String",
              "Optional": true,
              "Description": "device interface id picked for WAN"
            },
            "zone_code": {
              "Type": "String",
              "Description": "Device location zone code",
              "Computed": true
            }
          }
        }
      },
      "self_managed": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value that determines device management mode: self-managed or subscription (default)",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ssh_ip_address": {
        "Type": "String",
        "Description": "IP address of SSH enabled interface on the device",
        "Computed": true
      },
      "ssh_ip_fqdn": {
        "Type": "String",
        "Description": "FQDN of SSH enabled interface on the device",
        "Computed": true
      },
      "ssh_key": {
        "Type": "Set",
        "Optional": true,
        "Description": "Definition of SSH key that will be provisioned on a device",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "key_name": {
              "Type": "String",
              "Required": true,
              "Description": "Reference by name to previously provisioned public SSH key"
            },
            "username": {
              "Type": "String",
              "Required": true,
              "Description": "Username associated with given key"
            }
          }
        }
      },
      "status": {
        "Type": "String",
        "Description": "Device provisioning status",
        "Computed": true
      },
      "term_length": {
        "Type": "Int",
        "Required": true,
        "Description": "Device term length"
      },
      "throughput": {
        "Type": "Int",
        "Optional": true,
        "Description": "Device license throughput"
      },
      "throughput_unit": {
        "Type": "String",
        "Optional": true,
        "Description": "Device license throughput unit (Mbps or Gbps)"
      },
      "type_code": {
        "Type": "String",
        "Required": true,
        "Description": "Device type code"
      },
      "uuid": {
        "Type": "String",
        "Description": "Device unique identifier",
        "Computed": true
      },
      "vendor_configuration": {
        "Type": "Map",
        "Optional": true,
        "Description": "Map of vendor specific configuration parameters for a device (controller1, activationKey, managementType, siteId, systemIpAddress)",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "version": {
        "Type": "String",
        "Required": true,
        "Description": "Device software software version"
      },
      "wan_interface_id": {
        "Type": "String",
        "Optional": true,
        "Description": "device interface id picked for WAN"
      },
      "zone_code": {
        "Type": "String",
        "Description": "Device location zone code",
        "Computed": true
      }
    },
    "equinix_network_device_link": {
      "__timeouts__": [
        "create",
        "delete"
      ],
      "device": {
        "Type": "Set",
        "Required": true,
        "MinItems": 2,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "asn": {
              "Type": "Int",
              "Optional": true,
              "Description": "Device ASN number"
            },
            "id": {
              "Type": "String",
              "Required": true,
              "Description": "Device identifier"
            },
            "interface_id": {
              "Type": "Int",
              "Optional": true,
              "Description": "Device network interface identifier to use for device link connection"
            },
            "ip_address": {
              "Type": "String",
              "Description": "Assigned IP address from device link subnet",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "Device link connection provisioning status",
              "Computed": true
            }
          }
        }
      },
      "link": {
        "Type": "Set",
        "Optional": true,
        "Description": "link",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "account_number": {
              "Type": "String",
              "Required": true,
              "Description": "Billing account number to be used for connection charges"
            },
            "dst_metro_code": {
              "Type": "String",
              "Required": true,
              "Description": "Connection destination metro code"
            },
            "dst_zone_code": {
              "Type": "String",
              "Optional": true,
              "Description": "Connection destination zone code",
              "Deprecated": "DestinationZoneCode is not required"
            },
            "src_metro_code": {
              "Type": "String",
              "Required": true,
              "Description": "Connection source metro code"
            },
            "src_zone_code": {
              "Type": "String",
              "Optional": true,
              "Description": "Connection source zone code",
              "Deprecated": "SourceZoneCode is not required"
            },
            "throughput": {
              "Type": "String",
              "Required": true,
              "Description": "Connection throughput"
            },
            "throughput_unit": {
              "Type": "String",
              "Required": true,
              "Description": "Connection throughput unit"
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "name"
      },
      "status": {
        "Type": "String",
        "Description": "Device link provisioning status",
        "Computed": true
      },
      "subnet": {
        "Type": "String",
        "Optional": true,
        "Description": "subnet"
      },
      "uuid": {
        "Type": "String",
        "Description": "Device link unique identifier",
        "Computed": true
      }
    },
    "equinix_network_ssh_key": {
      "__timeouts__": [
        "create"
      ],
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of SSH key used for identification"
      },
      "public_key": {
        "Type": "String",
        "Required": true,
        "Description": "The SSH public key. If this is a file, it can be read using the file interpolation function"
      },
      "uuid": {
        "Type": "String",
        "Description": "The unique identifier of the key",
        "Computed": true
      }
    },
    "equinix_network_ssh_user": {
      "device_ids": {
        "Type": "Set",
        "Required": true,
        "Description": "list of device identifiers to which user will have access",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "password": {
        "Type": "String",
        "Required": true,
        "Description": "SSH user password"
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "SSH user login name"
      },
      "uuid": {
        "Type": "String",
        "Description": "SSH user unique identifier",
        "Computed": true
      }
    }
  },
  "data-sources": {
    "equinix_ecx_l2_sellerprofile": {
      "additional_info": {
        "Type": "Set",
        "Description": "One or more specifications of additional buyer information attributes that can be provided in connection definition that uses given seller profile",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "captured_in_email": {
              "Type": "Bool",
              "Description": "Specified if additional information attribute can be captured in email",
              "Computed": true
            },
            "data_type": {
              "Type": "String",
              "Description": "Data type of additional information attribute. Either BOOLEAN, INTEGER or STRING",
              "Computed": true
            },
            "description": {
              "Type": "String",
              "Description": "Textual description of additional information attribute",
              "Computed": true
            },
            "mandatory": {
              "Type": "Bool",
              "Description": "Specifies if additional information attribute is mandatory to create connection",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Name of additional information attribute",
              "Computed": true
            }
          }
        }
      },
      "description": {
        "Type": "String",
        "Description": "Seller Profile text description",
        "Computed": true
      },
      "encapsulation": {
        "Type": "String",
        "Description": "Seller profile's encapsulation (either Dot1q or QinQ)",
        "Computed": true
      },
      "metro": {
        "Type": "Set",
        "Description": "One or more specifications of metro locations supported by seller profile",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "code": {
              "Type": "String",
              "Description": "Location metro code",
              "Computed": true
            },
            "ibxes": {
              "Type": "Set",
              "Description": "List of IBXes supported within given metro",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Description": "Location metro nam",
              "Computed": true
            },
            "regions": {
              "Type": "Map",
              "Description": "List of regions supported within given metro",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the seller profile",
        "Computed": true
      },
      "organization_global_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of seller's global organization",
        "Computed": true
      },
      "organization_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of seller's organization",
        "Computed": true
      },
      "redundancy_required": {
        "Type": "Bool",
        "Description": "Boolean that indicate if seller requires connections to be redundant",
        "Computed": true
      },
      "speed_band": {
        "Type": "Set",
        "Description": "One or more specifications of speed/bandwidth supported by given seller profile",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "speed": {
              "Type": "Int",
              "Description": "Speed/bandwidth supported by given service profile",
              "Computed": true
            },
            "speed_unit": {
              "Type": "String",
              "Description": "Unit of the speed/bandwidth supported by given service profile",
              "Computed": true
            }
          }
        }
      },
      "speed_customization_allowed": {
        "Type": "Bool",
        "Description": "Boolean that indicates if seller allows customer to enter a custom connection speed",
        "Computed": true
      },
      "speed_from_api": {
        "Type": "Bool",
        "Description": "Boolean that indicates if seller is deriving connection speed from an API call",
        "Computed": true
      },
      "uuid": {
        "Type": "String",
        "Description": "Unique identifier of the seller profile",
        "Computed": true
      }
    },
    "equinix_ecx_l2_sellerprofiles": {
      "metro_codes": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of metro codes of locations that should be served by resulting profiles",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name_regex": {
        "Type": "String",
        "Optional": true,
        "Description": "A regex string to apply on returned seller profile names and filter search results"
      },
      "organization_global_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of seller's global organization"
      },
      "organization_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of seller's organization"
      },
      "profiles": {
        "Type": "List",
        "Description": "Resulting list of profiles that match filtering criteria",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "additional_info": {
              "Type": "Set",
              "Description": "One or more specifications of additional buyer information attributes that can be provided in connection definition that uses given seller profile",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "captured_in_email": {
                    "Type": "Bool",
                    "Description": "Specified if additional information attribute can be captured in email",
                    "Computed": true
                  },
                  "data_type": {
                    "Type": "String",
                    "Description": "Data type of additional information attribute. Either BOOLEAN, INTEGER or STRING",
                    "Computed": true
                  },
                  "description": {
                    "Type": "String",
                    "Description": "Textual description of additional information attribute",
                    "Computed": true
                  },
                  "mandatory": {
                    "Type": "Bool",
                    "Description": "Specifies if additional information attribute is mandatory to create connection",
                    "Computed": true
                  },
                  "name": {
                    "Type": "String",
                    "Description": "Name of additional information attribute",
                    "Computed": true
                  }
                }
              }
            },
            "description": {
              "Type": "String",
              "Description": "Seller Profile text description",
              "Computed": true
            },
            "encapsulation": {
              "Type": "String",
              "Description": "Seller profile's encapsulation (either Dot1q or QinQ)",
              "Computed": true
            },
            "metro": {
              "Type": "Set",
              "Description": "One or more specifications of metro locations supported by seller profile",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "code": {
                    "Type": "String",
                    "Description": "Location metro code",
                    "Computed": true
                  },
                  "ibxes": {
                    "Type": "Set",
                    "Description": "List of IBXes supported within given metro",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "name": {
                    "Type": "String",
                    "Description": "Location metro nam",
                    "Computed": true
                  },
                  "regions": {
                    "Type": "Map",
                    "Description": "List of regions supported within given metro",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the seller profile",
              "Computed": true
            },
            "organization_global_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of seller's global organization",
              "Computed": true
            },
            "organization_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of seller's organization",
              "Computed": true
            },
            "redundancy_required": {
              "Type": "Bool",
              "Description": "Boolean that indicate if seller requires connections to be redundant",
              "Computed": true
            },
            "speed_band": {
              "Type": "Set",
              "Description": "One or more specifications of speed/bandwidth supported by given seller profile",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "speed": {
                    "Type": "Int",
                    "Description": "Speed/bandwidth supported by given service profile",
                    "Computed": true
                  },
                  "speed_unit": {
                    "Type": "String",
                    "Description": "Unit of the speed/bandwidth supported by given service profile",
                    "Computed": true
                  }
                }
              }
            },
            "speed_customization_allowed": {
              "Type": "Bool",
              "Description": "Boolean that indicates if seller allows customer to enter a custom connection speed",
              "Computed": true
            },
            "speed_from_api": {
              "Type": "Bool",
              "Description": "Boolean that indicates if seller is deriving connection speed from an API call",
              "Computed": true
            },
            "uuid": {
              "Type": "String",
              "Description": "Unique identifier of the seller profile",
              "Computed": true
            }
          }
        }
      },
      "speed_bands": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of speed bands that should be supported by resulting profiles",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "equinix_ecx_port": {
      "bandwidth": {
        "Type": "String",
        "Description": "Port Bandwidth in bytes",
        "Computed": true
      },
      "buyout": {
        "Type": "Bool",
        "Description": "Boolean value that indicates whether the port supports unlimited connections.",
        "Computed": true
      },
      "encapsulation": {
        "Type": "String",
        "Description": "The VLAN encapsulation of the port (Dot1q or QinQ)",
        "Computed": true
      },
      "ibx": {
        "Type": "String",
        "Description": "Port location Equinix Business Exchange (IBX)",
        "Computed": true
      },
      "metro_code": {
        "Type": "String",
        "Description": "Port location metro code",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the port"
      },
      "priority": {
        "Type": "String",
        "Description": "The priority of the device (primary / secondary) where the port resides",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Description": "Port location region",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "Port status that indicates whether a port has been assigned or is ready for connection",
        "Computed": true
      },
      "uuid": {
        "Type": "String",
        "Description": "Unique identifier of the por",
        "Computed": true
      }
    },
    "equinix_metal_connection": {
      "connection_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of the connection to lookup"
      },
      "description": {
        "Type": "String",
        "Description": "Description of the connection resource",
        "Computed": true
      },
      "facility": {
        "Type": "String",
        "Description": "Facility which the connection is scoped to",
        "Computed": true
      },
      "metro": {
        "Type": "String",
        "Description": "Metro which the connection is scoped to",
        "Computed": true
      },
      "mode": {
        "Type": "String",
        "Description": "Connection mode - standard or tunnel",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "Name of the connection resource",
        "Computed": true
      },
      "organization_id": {
        "Type": "String",
        "Description": "ID of organization to which the connection is scoped to",
        "Computed": true
      },
      "ports": {
        "Type": "List",
        "Description": "List of connection ports - primary (`ports[0]`) and secondary (`ports[1]`)",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Description": "ID of the connection port resource",
              "Computed": true
            },
            "link_status": {
              "Type": "String",
              "Description": "Port link status",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Name of the connection port resource",
              "Computed": true
            },
            "role": {
              "Type": "String",
              "Description": "Role - primary or secondary",
              "Computed": true
            },
            "speed": {
              "Type": "Int",
              "Description": "Port speed in bits per second",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "Port status",
              "Computed": true
            },
            "virtual_circuit_ids": {
              "Type": "List",
              "Description": "List of IDs of virtual circuits attached to this port",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Value": "String"
              }
            }
          }
        }
      },
      "project_id": {
        "Type": "String",
        "Description": "ID of project to which the connection belongs",
        "Computed": true
      },
      "redundancy": {
        "Type": "String",
        "Description": "Connection redundancy - redundant or primary",
        "Computed": true
      },
      "service_token_type": {
        "Type": "String",
        "Description": "Only used with shared connection. Type of service token to use for the connection, a_side or z_side.",
        "Computed": true
      },
      "service_tokens": {
        "Type": "List",
        "Description": "Only used with shared connection. List of service tokens required to continue the setup process with [equinix_ecx_l2_connection](https://registry.terraform.io/providers/equinix/equinix/latest/docs/resources/equinix_ecx_l2_connection) or from the [Equinix Fabric Portal](https://ecxfabric.equinix.com/dashboard)",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "expires_at": {
              "Type": "String",
              "Description": "Expiration date of the service token",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Description": "ID of the service token",
              "Computed": true
            },
            "max_allowed_speed": {
              "Type": "String",
              "Description": "Maximum allowed speed for the service token",
              "Computed": true
            },
            "role": {
              "Type": "String",
              "Description": "Role of the service token",
              "Computed": true
            },
            "state": {
              "Type": "String",
              "Description": "State of the service token",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Type of the service token, a_side or z_side",
              "Computed": true
            }
          }
        }
      },
      "speed": {
        "Type": "String",
        "Description": "Port speed. Possible values are 50Mbps, 200Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "Status of the connection resource",
        "Computed": true
      },
      "tags": {
        "Type": "List",
        "Description": "Tags attached to the connection",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "token": {
        "Type": "String",
        "Description": "Only used with shared connection. Fabric Token required to continue the setup process with [equinix_ecx_l2_connection](https://registry.terraform.io/providers/equinix/equinix/latest/docs/resources/equinix_ecx_l2_connection) or from the [Equinix Fabric Portal](https://ecxfabric.equinix.com/dashboard)",
        "Computed": true,
        "Deprecated": "If your organization already has connection service tokens enabled, use `service_tokens` instead"
      },
      "type": {
        "Type": "String",
        "Description": "Connection type - dedicated or shared",
        "Computed": true
      },
      "vlans": {
        "Type": "List",
        "Description": "Attached vlans, only in shared connection.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      }
    },
    "equinix_metal_device": {
      "access_private_ipv4": {
        "Type": "String",
        "Description": "The ipv4 private IP assigned to the device",
        "Computed": true
      },
      "access_public_ipv4": {
        "Type": "String",
        "Description": "The ipv4 management IP assigned to the device",
        "Computed": true
      },
      "access_public_ipv6": {
        "Type": "String",
        "Description": "The ipv6 management IP assigned to the device",
        "Computed": true
      },
      "always_pxe": {
        "Type": "Bool",
        "Computed": true
      },
      "billing_cycle": {
        "Type": "String",
        "Description": "The billing cycle of the device (monthly or hourly)",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Description string for the device",
        "Computed": true
      },
      "device_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Device ID",
        "Computed": true,
        "ConflictsWith": [
          "project_id",
          "hostname"
        ]
      },
      "facility": {
        "Type": "String",
        "Description": "The facility where the device is deployed",
        "Computed": true
      },
      "hardware_reservation_id": {
        "Type": "String",
        "Description": "The id of hardware reservation which this device occupies",
        "Computed": true
      },
      "hostname": {
        "Type": "String",
        "Optional": true,
        "Description": "The device name",
        "Computed": true,
        "ConflictsWith": [
          "device_id"
        ]
      },
      "ipxe_script_url": {
        "Type": "String",
        "Computed": true
      },
      "metro": {
        "Type": "String",
        "Description": "The metro where the device is deployed",
        "Computed": true
      },
      "network": {
        "Type": "List",
        "Description": "The device's private and public IP (v4 and v6) network details. When a device is run without any special network configuration, it will have 3 networks: ublic IPv4 at equinix_metal_device.name.network.0, IPv6 at equinix_metal_device.name.network.1 and private IPv4 at equinix_metal_device.name.network.2. Elastic addresses then stack by type - an assigned public IPv4 will go after the management public IPv4 (to index 1), and will then shift the indices of the IPv6 and private IPv4. Assigned private IPv4 will go after the management private IPv4 (to the end of the network list).",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "String",
              "Description": "IPv4 or IPv6 address string",
              "Computed": true
            },
            "cidr": {
              "Type": "Int",
              "Description": "Bit length of the network mask of the address",
              "Computed": true
            },
            "family": {
              "Type": "Int",
              "Description": "IP version - \"4\" or \"6\"",
              "Computed": true
            },
            "gateway": {
              "Type": "String",
              "Description": "Address of router",
              "Computed": true
            },
            "public": {
              "Type": "Bool",
              "Description": "Whether the address is routable from the Internet",
              "Computed": true
            }
          }
        }
      },
      "network_type": {
        "Type": "String",
        "Description": "L2 network type of the device, one oflayer3, hybrid, layer2-individual, layer2-bonded",
        "Computed": true
      },
      "operating_system": {
        "Type": "String",
        "Description": "The operating system running on the device",
        "Computed": true
      },
      "plan": {
        "Type": "String",
        "Description": "The hardware config of the device",
        "Computed": true
      },
      "ports": {
        "Type": "List",
        "Description": "Ports assigned to the device",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bonded": {
              "Type": "Bool",
              "Description": "Whether this port is part of a bond in bonded network setup",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Description": "The ID of the device",
              "Computed": true
            },
            "mac": {
              "Type": "String",
              "Description": "MAC address assigned to the port",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Name of the port (e.g. eth0, or bond0)",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Type of the port (e.g. NetworkPort or NetworkBondPort)",
              "Computed": true
            }
          }
        }
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The id of the project in which the devices exists",
        "Computed": true,
        "ConflictsWith": [
          "device_id"
        ]
      },
      "root_password": {
        "Type": "String",
        "Description": "Root password to the server (if still available)",
        "Computed": true
      },
      "ssh_key_ids": {
        "Type": "List",
        "Description": "List of IDs of SSH keys deployed in the device, can be both user or project SSH keys",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "state": {
        "Type": "String",
        "Description": "The state of the device",
        "Computed": true
      },
      "storage": {
        "Type": "String",
        "Computed": true
      },
      "tags": {
        "Type": "List",
        "Description": "Tags attached to the device",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "equinix_metal_device_bgp_neighbors": {
      "bgp_neighbors": {
        "Type": "List",
        "Description": "Array of BGP neighbor records",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address_family": {
              "Type": "Int",
              "Description": "IP address version, 4 or 6",
              "Computed": true
            },
            "customer_as": {
              "Type": "Int",
              "Description": "Local autonomous system number",
              "Computed": true
            },
            "customer_ip": {
              "Type": "String",
              "Description": "Local used peer IP address",
              "Computed": true
            },
            "md5_enabled": {
              "Type": "Bool",
              "Description": "Whether BGP session is password enabled",
              "Computed": true
            },
            "md5_password": {
              "Type": "String",
              "Description": "BGP session password in plaintext (not a checksum)",
              "Computed": true
            },
            "multihop": {
              "Type": "Bool",
              "Description": "Whether the neighbor is in EBGP multihop session",
              "Computed": true
            },
            "peer_as": {
              "Type": "Int",
              "Description": "Peer AS number (different than customer_as for EBGP)",
              "Computed": true
            },
            "peer_ips": {
              "Type": "List",
              "Optional": true,
              "Description": "Array of IP addresses of this neighbor's peers",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "routes_in": {
              "Type": "List",
              "Description": "Array of incoming routes. Each route has attributes",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "exact": {
                    "Type": "Bool",
                    "Description": "Whether the route is exact",
                    "Computed": true
                  },
                  "route": {
                    "Type": "String",
                    "Description": "CIDR expression of route (IP/mask)",
                    "Computed": true
                  }
                }
              }
            },
            "routes_out": {
              "Type": "List",
              "Description": "Array of outgoing routes in the same format",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "exact": {
                    "Type": "Bool",
                    "Description": "Whether the route is exact",
                    "Computed": true
                  },
                  "route": {
                    "Type": "String",
                    "Description": "CIDR expression of route (IP/mask)",
                    "Computed": true
                  }
                }
              }
            }
          }
        }
      },
      "device_id": {
        "Type": "String",
        "Required": true,
        "Description": "UUID of BGP-enabled device whose neighbors to list"
      }
    },
    "equinix_metal_facility": {
      "capacity": {
        "Type": "List",
        "Optional": true,
        "Description": "Optional capacity specification",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "plan": {
              "Type": "String",
              "Required": true,
              "Description": "Plan which has to be available in selected location"
            },
            "quantity": {
              "Type": "Int",
              "Optional": true,
              "Default": {
                "Type": "int",
                "Value": "1"
              }
            }
          }
        }
      },
      "code": {
        "Type": "String",
        "Required": true,
        "Description": "The code of the Facility to match"
      },
      "features": {
        "Type": "List",
        "Description": "The features of this Facility.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "features_required": {
        "Type": "Set",
        "Optional": true,
        "Description": "Features which the facility needs to have.",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "metro": {
        "Type": "String",
        "Description": "This facility's metro code.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "The name of this Facility.",
        "Computed": true
      }
    },
    "equinix_metal_gateway": {
      "gateway_id": {
        "Type": "String",
        "Required": true,
        "Description": "UUID of the Metal Gateway to fetch"
      },
      "ip_reservation_id": {
        "Type": "String",
        "Description": "UUID of the IP Reservation to associate, must be in the same metro as the VLAN",
        "Computed": true
      },
      "private_ipv4_subnet_size": {
        "Type": "Int",
        "Description": "Size of the private IPv4 subnet to create for this gateway, one of [8 16 32 64 128]",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Description": "UUID of the Project where the Gateway is scoped to",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Status of the virtual circuit resource",
        "Computed": true
      },
      "vlan_id": {
        "Type": "String",
        "Description": "UUID of the VLAN to associate",
        "Computed": true
      },
      "vrf_id": {
        "Type": "String",
        "Description": "UUID of the VRF associated with the IP Reservation",
        "Computed": true
      }
    },
    "equinix_metal_hardware_reservation": {
      "device_id": {
        "Type": "String",
        "Optional": true,
        "Description": "UUID of device occupying the reservation",
        "Computed": true
      },
      "facility": {
        "Type": "String",
        "Description": "Plan type for the reservation",
        "Computed": true
      },
      "id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the hardware reservation to look up",
        "Computed": true
      },
      "plan": {
        "Type": "String",
        "Description": "Plan type for the reservation",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Description": "UUID of project this reservation is scoped to",
        "Computed": true
      },
      "provisionable": {
        "Type": "Bool",
        "Description": "Flag indicating whether the reserved server is provisionable or not. Spare devices can't be provisioned unless they are activated first",
        "Computed": true
      },
      "short_id": {
        "Type": "String",
        "Description": "Reservation short ID",
        "Computed": true
      },
      "spare": {
        "Type": "Bool",
        "Description": "Flag indicating whether the Hardware Reservation is a spare. Spare Hardware Reservations are used when a Hardware Reservations requires service from Metal Equinix",
        "Computed": true
      },
      "switch_uuid": {
        "Type": "String",
        "Description": "Switch short ID, can be used to determine if two devices are connected to the same switch",
        "Computed": true
      }
    },
    "equinix_metal_ip_block_ranges": {
      "facility": {
        "Type": "String",
        "Optional": true,
        "Description": "Facility code filtering the IP blocks. Global IPv4 blcoks will be listed anyway. If you omit this and metro, all the block from the project will be listed"
      },
      "global_ipv4": {
        "Type": "List",
        "Description": "List of CIDR expressions for Global IPv4 blocks in the project",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ipv6": {
        "Type": "List",
        "Description": "List of CIDR expressions for IPv6 blocks in the project",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "metro": {
        "Type": "String",
        "Optional": true,
        "Description": "Metro code filtering the IP blocks. Global IPv4 blcoks will be listed anyway. If you omit this and facility, all the block from the project will be listed"
      },
      "private_ipv4": {
        "Type": "List",
        "Description": "List of CIDR expressions for Private IPv4 blocks in the project",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of the project from which to list the blocks"
      },
      "public_ipv4": {
        "Type": "List",
        "Description": "List of CIDR expressions for Public IPv4 blocks in the project",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "equinix_metal_metro": {
      "capacity": {
        "Type": "List",
        "Optional": true,
        "Description": "Optional capacity specification",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "plan": {
              "Type": "String",
              "Required": true,
              "Description": "Plan which has to be available in selected location"
            },
            "quantity": {
              "Type": "Int",
              "Optional": true,
              "Default": {
                "Type": "int",
                "Value": "1"
              }
            }
          }
        }
      },
      "code": {
        "Type": "String",
        "Required": true,
        "Description": "The code of the Metro to match"
      },
      "country": {
        "Type": "String",
        "Description": "The country of this Metro.",
        "Computed": true
      },
      "id": {
        "Type": "String",
        "Description": "The ID of this Metro.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "The name of this Metro.",
        "Computed": true
      }
    },
    "equinix_metal_operating_system": {
      "distro": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the OS distribution"
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name or part of the name of the distribution. Case insensitive"
      },
      "provisionable_on": {
        "Type": "String",
        "Optional": true,
        "Description": "Plan name"
      },
      "slug": {
        "Type": "String",
        "Description": "Operating system slug (same as id)",
        "Computed": true
      },
      "version": {
        "Type": "String",
        "Optional": true,
        "Description": "Version of the distribution"
      }
    },
    "equinix_metal_organization": {
      "address": {
        "Type": "List",
        "Optional": true,
        "Description": "Business' address",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "String",
              "Optional": true,
              "Computed": true
            },
            "city": {
              "Type": "String",
              "Optional": true,
              "Computed": true
            },
            "country": {
              "Type": "String",
              "Optional": true,
              "Description": "Two letter country code (ISO 3166-1 alpha-2), e.g. US",
              "Computed": true
            },
            "state": {
              "Type": "String",
              "Optional": true,
              "Computed": true
            },
            "zip_code": {
              "Type": "String",
              "Optional": true,
              "Computed": true
            }
          }
        }
      },
      "description": {
        "Type": "String",
        "Description": "Description string",
        "Computed": true
      },
      "logo": {
        "Type": "String",
        "Description": "Logo URL",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The organization name",
        "Computed": true,
        "ConflictsWith": [
          "organization_id"
        ]
      },
      "organization_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The UUID of the organization resource",
        "Computed": true,
        "ConflictsWith": [
          "name"
        ]
      },
      "project_ids": {
        "Type": "List",
        "Description": "UUIDs of project resources which belong to this organization",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "twitter": {
        "Type": "String",
        "Description": "Twitter handle",
        "Computed": true
      },
      "website": {
        "Type": "String",
        "Description": "Website link",
        "Computed": true
      }
    },
    "equinix_metal_plans": {
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "One or more attribute/values pairs on which to filter results",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "all": {
              "Type": "Bool",
              "Optional": true,
              "Description": "If is set to true, the values are joined with an AND, and the requests returns only the results that match all specified values",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "attribute": {
              "Type": "String",
              "Required": true,
              "Description": "The attribute used to filter. Filter attributes are case-sensitive"
            },
            "match_by": {
              "Type": "String",
              "Optional": true,
              "Description": "The type of comparison to apply. One of: in (default), re, substring, less_than, less_than_or_equal, greater_than, greater_than_or_equal",
              "Default": {
                "Type": "string",
                "Value": "in"
              }
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "The filter values. Filter values are case-sensitive. If you specify multiple values for a filter, the values are joined with an OR by default, and the request returns all results that match any of the specified values",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "plans": {
        "Type": "List",
        "Description": "Sorted list of available server plans that match the specified filters",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "available_in": {
              "Type": "Set",
              "Description": "list of facilities where the plan is available",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "available_in_metros": {
              "Type": "Set",
              "Description": "list of metros where the plan is available",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "class": {
              "Type": "String",
              "Description": "plan class",
              "Computed": true
            },
            "deployment_types": {
              "Type": "Set",
              "Description": "list of deployment types, e.g. on_demand, spot_market",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "description": {
              "Type": "String",
              "Description": "Description of the plan",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Description": "id of the plan",
              "Computed": true
            },
            "legacy": {
              "Type": "Bool",
              "Description": "flag showing if it's a legacy plan",
              "Computed": true
            },
            "line": {
              "Type": "String",
              "Description": "plan line, e.g. baremetal",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "name of the plan",
              "Computed": true
            },
            "pricing_hour": {
              "Type": "Float",
              "Description": "plan hourly price",
              "Computed": true
            },
            "pricing_month": {
              "Type": "Float",
              "Description": "plan monthly price",
              "Computed": true
            },
            "slug": {
              "Type": "String",
              "Description": "plan slug",
              "Computed": true
            }
          }
        }
      },
      "sort": {
        "Type": "List",
        "Optional": true,
        "Description": "One or more attribute/direction pairs on which to sort results. If multiple sorts are provided, they will be applied in order",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "attribute": {
              "Type": "String",
              "Required": true,
              "Description": "The attribute used to sort the results. Sort attributes are case-sensitive"
            },
            "direction": {
              "Type": "String",
              "Optional": true,
              "Description": "Sort results in ascending or descending order. Strings are sorted in alphabetical order. One of: asc, desc"
            }
          }
        }
      }
    },
    "equinix_metal_port": {
      "bond_id": {
        "Type": "String",
        "Description": "UUID of the bond port",
        "Computed": true
      },
      "bond_name": {
        "Type": "String",
        "Description": "Name of the bond port",
        "Computed": true
      },
      "bonded": {
        "Type": "Bool",
        "Description": "Flag indicating whether the port is bonded",
        "Computed": true
      },
      "device_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Device UUID where to lookup the port",
        "ConflictsWith": [
          "port_id"
        ]
      },
      "disbond_supported": {
        "Type": "Bool",
        "Description": "Flag indicating whether the port can be removed from a bond",
        "Computed": true
      },
      "layer2": {
        "Type": "Bool",
        "Description": "Flag indicating whether the port is in layer2 (or layer3) mode",
        "Computed": true
      },
      "mac": {
        "Type": "String",
        "Description": "MAC address of the port",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the port to look up, e.g. bond0, eth1",
        "Computed": true,
        "ConflictsWith": [
          "port_id"
        ]
      },
      "native_vlan_id": {
        "Type": "String",
        "Description": "UUID of native VLAN of the port",
        "Computed": true
      },
      "network_type": {
        "Type": "String",
        "Description": "One of layer3, hybrid, hybrid-bonded, layer2-individual, layer2-bonded",
        "Computed": true
      },
      "port_id": {
        "Type": "String",
        "Optional": true,
        "Description": "UUID of the port to lookup",
        "ConflictsWith": [
          "device_id",
          "name"
        ]
      },
      "type": {
        "Type": "String",
        "Description": "Port type",
        "Computed": true
      },
      "vlan_ids": {
        "Type": "List",
        "Description": "UUIDs of attached VLANs",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "vxlan_ids": {
        "Type": "List",
        "Description": "UUIDs of attached VLANs",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      }
    },
    "equinix_metal_precreated_ip_block": {
      "address": {
        "Type": "String",
        "Computed": true
      },
      "address_family": {
        "Type": "Int",
        "Required": true,
        "Description": "4 or 6, depending on which block you are looking for."
      },
      "cidr": {
        "Type": "Int",
        "Description": "Length of CIDR prefix of the block as integer",
        "Computed": true
      },
      "cidr_notation": {
        "Type": "String",
        "Description": "CIDR notation of the looked up block.",
        "Computed": true
      },
      "facility": {
        "Type": "String",
        "Optional": true,
        "Description": "Facility of the searched block. (for non-global blocks).",
        "ConflictsWith": [
          "metro"
        ]
      },
      "gateway": {
        "Type": "String",
        "Computed": true
      },
      "global": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to look for global block. Default is false for backward compatibility.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "manageable": {
        "Type": "Bool",
        "Computed": true
      },
      "management": {
        "Type": "Bool",
        "Computed": true
      },
      "metro": {
        "Type": "String",
        "Optional": true,
        "Description": "Metro of the searched block (for non-global blocks).",
        "ConflictsWith": [
          "facility"
        ]
      },
      "netmask": {
        "Type": "String",
        "Description": "Mask in decimal notation, e.g. 255.255.255.0",
        "Computed": true
      },
      "network": {
        "Type": "String",
        "Description": "Network IP address portion of the block specification",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of the project where the searched block should be."
      },
      "public": {
        "Type": "Bool",
        "Required": true,
        "Description": "Whether to look for public or private block."
      },
      "quantity": {
        "Type": "Int",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Computed": true
      },
      "vrf_id": {
        "Type": "String",
        "Computed": true
      }
    },
    "equinix_metal_project": {
      "backend_transfer": {
        "Type": "Bool",
        "Description": "Whether Backend Transfer is enabled for this project",
        "Computed": true
      },
      "bgp_config": {
        "Type": "List",
        "Description": "Optional BGP settings. Refer to [Equinix Metal guide for BGP](https://metal.equinix.com/developers/docs/networking/local-global-bgp/)",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "asn": {
              "Type": "Int",
              "Required": true,
              "Description": "Autonomous System Number for local BGP deployment"
            },
            "deployment_type": {
              "Type": "String",
              "Required": true,
              "Description": "Private or public, the private is likely to be usable immediately, the public will need to be review by Equinix Metal engineers"
            },
            "max_prefix": {
              "Type": "Int",
              "Description": "The maximum number of route filters allowed per server",
              "Computed": true
            },
            "md5": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for BGP session in plaintext (not a checksum)"
            },
            "status": {
              "Type": "String",
              "Description": "Status of BGP configuration in the project",
              "Computed": true
            }
          }
        }
      },
      "created": {
        "Type": "String",
        "Description": "The timestamp for when the project was created",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name which is used to look up the project",
        "Computed": true,
        "ConflictsWith": [
          "project_id"
        ]
      },
      "organization_id": {
        "Type": "String",
        "Description": "The UUID of this project's parent organization",
        "Computed": true
      },
      "payment_method_id": {
        "Type": "String",
        "Description": "The UUID of payment method for this project",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The UUID by which to look up the project",
        "Computed": true,
        "ConflictsWith": [
          "name"
        ]
      },
      "updated": {
        "Type": "String",
        "Description": "The timestamp for the last time the project was updated",
        "Computed": true
      },
      "user_ids": {
        "Type": "List",
        "Description": "List of UUIDs of user accounts which belong to this project",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "equinix_metal_project_ssh_key": {
      "created": {
        "Type": "String",
        "Computed": true
      },
      "fingerprint": {
        "Type": "String",
        "Computed": true
      },
      "id": {
        "Type": "String",
        "Optional": true,
        "Description": "The id of the SSH Key",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "The label of the Equinix Metal SSH Key",
        "Computed": true
      },
      "owner_id": {
        "Type": "String",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Required": true,
        "Description": "The Equinix Metal project id of the Equinix Metal SSH Key"
      },
      "public_key": {
        "Type": "String",
        "Description": "The public SSH key that will be authorized for SSH access on Equinix Metal devices provisioned with this key",
        "Computed": true
      },
      "search": {
        "Type": "String",
        "Optional": true,
        "Description": "The name, fingerprint, id, or public_key of the SSH Key to search for in the Equinix Metal project"
      },
      "updated": {
        "Type": "String",
        "Computed": true
      }
    },
    "equinix_metal_reserved_ip_block": {
      "address": {
        "Type": "String",
        "Computed": true
      },
      "address_family": {
        "Type": "Int",
        "Description": "4 or 6",
        "Computed": true
      },
      "cidr": {
        "Type": "Int",
        "Description": "Length of CIDR prefix of the block as integer",
        "Computed": true
      },
      "cidr_notation": {
        "Type": "String",
        "Description": "CIDR notation of the looked up block",
        "Computed": true
      },
      "facility": {
        "Type": "String",
        "Description": "Facility of the block. (for non-global blocks)",
        "Computed": true
      },
      "gateway": {
        "Type": "String",
        "Description": "IP address of gateway for the block",
        "Computed": true
      },
      "global": {
        "Type": "Bool",
        "Description": "Addresses from block are attachable in all locations",
        "Computed": true
      },
      "id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the block to look up",
        "Computed": true,
        "ConflictsWith": [
          "project_id",
          "ip_address"
        ]
      },
      "ip_address": {
        "Type": "String",
        "Optional": true,
        "Description": "Find block containing this IP address in given project",
        "ConflictsWith": [
          "id"
        ]
      },
      "manageable": {
        "Type": "Bool",
        "Computed": true
      },
      "management": {
        "Type": "Bool",
        "Computed": true
      },
      "metro": {
        "Type": "String",
        "Description": "Metro of the block (for non-global blocks)",
        "Computed": true
      },
      "netmask": {
        "Type": "String",
        "Description": "Mask in decimal notation, e.g. 255.255.255.0",
        "Computed": true
      },
      "network": {
        "Type": "String",
        "Description": "Network IP address portion of the block specification",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the project where the searched block should be",
        "Computed": true,
        "ConflictsWith": [
          "id"
        ]
      },
      "public": {
        "Type": "Bool",
        "Description": "Addresses from public block are routeable from the Internet",
        "Computed": true
      },
      "quantity": {
        "Type": "Int",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Description": "Address type, one of public_ipv4, public_ipv6, private_ipv4, global_ipv4, and vrf",
        "Computed": true
      },
      "vrf_id": {
        "Type": "Int",
        "Description": "VRF ID of the block when type=vrf",
        "Computed": true
      }
    },
    "equinix_metal_spot_market_price": {
      "facility": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the facility",
        "ConflictsWith": [
          "metro"
        ]
      },
      "metro": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the metro",
        "ConflictsWith": [
          "facility"
        ]
      },
      "plan": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the plan"
      },
      "price": {
        "Type": "Float",
        "Description": "Current spot market price for given plan in given facility",
        "Computed": true
      }
    },
    "equinix_metal_spot_market_request": {
      "__timeouts__": [
        "create",
        "update",
        "delete",
        "default"
      ],
      "device_ids": {
        "Type": "List",
        "Description": "List of IDs of devices spawned by the referenced Spot Market Request",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "devices_max": {
        "Type": "Int",
        "Description": "Maximum number devices to be created",
        "Computed": true
      },
      "devices_min": {
        "Type": "Int",
        "Description": "Miniumum number devices to be created",
        "Computed": true
      },
      "end_at": {
        "Type": "String",
        "Description": "Date and time When the spot market request will be ended.",
        "Computed": true
      },
      "facilities": {
        "Type": "List",
        "Description": "Facility IDs where devices should be created",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "max_bid_price": {
        "Type": "Float",
        "Description": "Maximum price user is willing to pay per hour per device",
        "Computed": true
      },
      "metro": {
        "Type": "String",
        "Description": "Metro where devices should be created.",
        "Computed": true
      },
      "plan": {
        "Type": "String",
        "Description": "The device plan slug.",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Description": "Project ID",
        "Computed": true
      },
      "request_id": {
        "Type": "String",
        "Required": true,
        "Description": "The id of the Spot Market Request"
      }
    },
    "equinix_metal_virtual_circuit": {
      "connection_id": {
        "Type": "String",
        "Description": "UUID of Connection where the VC is scoped to",
        "Computed": true
      },
      "customer_ip": {
        "Type": "String",
        "Description": "The Customer IP address which the CSR switch will peer with. Will default to the other usable IP in the subnet.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Description of the virtual circuit",
        "Computed": true
      },
      "md5": {
        "Type": "String",
        "Description": "The password that can be set for the VRF BGP peer",
        "Computed": true
      },
      "metal_ip": {
        "Type": "String",
        "Description": "The Metal IP address for the SVI (Switch Virtual Interface) of the VirtualCircuit. Will default to the first usable IP in the subnet.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "Name of the virtual circuit",
        "Computed": true
      },
      "nni_vlan": {
        "Type": "Int",
        "Description": "Nni VLAN parameter, see https://metal.equinix.com/developers/docs/networking/fabric/",
        "Computed": true
      },
      "nni_vnid": {
        "Type": "Int",
        "Description": "Nni VLAN ID parameter, see https://metal.equinix.com/developers/docs/networking/fabric/",
        "Computed": true
      },
      "peer_asn": {
        "Type": "Int",
        "Description": "The BGP ASN of the peer. The same ASN may be the used across several VCs, but it cannot be the same as the local_asn of the VRF.",
        "Computed": true
      },
      "port_id": {
        "Type": "String",
        "Description": "UUID of the Connection Port where the VC is scoped to",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Description": "ID of the projct to which the virtual circuit belongs",
        "Computed": true
      },
      "speed": {
        "Type": "String",
        "Description": "Description of the Virtual Circuit speed. This is for information purposes and is computed when the connection type is shared.",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "Status of the virtual circuit",
        "Computed": true
      },
      "subnet": {
        "Type": "String",
        "Description": "A subnet from one of the IP blocks associated with the VRF that we will help create an IP reservation for. Can only be either a /30 or /31.\n\t\t\t\t * For a /31 block, it will only have two IP addresses, which will be used for the metal_ip and customer_ip.\n\t\t\t\t * For a /30 block, it will have four IP addresses, but the first and last IP addresses are not usable. We will default to the first usable IP address for the metal_ip.",
        "Computed": true
      },
      "tags": {
        "Type": "List",
        "Description": "Tags attached to the virtual circuit",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "virtual_circuit_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of the virtual circuit to lookup"
      },
      "vlan_id": {
        "Type": "String",
        "Description": "UUID of the associated VLAN",
        "Computed": true
      },
      "vnid": {
        "Type": "Int",
        "Description": "VNID VLAN parameter, see https://metal.equinix.com/developers/docs/networking/fabric/",
        "Computed": true
      },
      "vrf_id": {
        "Type": "String",
        "Description": "UUID of the associated VRF",
        "Computed": true
      }
    },
    "equinix_metal_vlan": {
      "assigned_devices_ids": {
        "Type": "List",
        "Description": "List of device IDs to which this VLAN is assigned",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "description": {
        "Type": "String",
        "Description": "VLAN description text",
        "Computed": true
      },
      "facility": {
        "Type": "String",
        "Optional": true,
        "Description": "Facility where the VLAN is deployed",
        "Computed": true,
        "ConflictsWith": [
          "vlan_id",
          "metro"
        ]
      },
      "metro": {
        "Type": "String",
        "Optional": true,
        "Description": "Metro where the VLAN is deployed",
        "Computed": true,
        "ConflictsWith": [
          "vlan_id",
          "facility"
        ]
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of parent project of the VLAN. Use together with vxlan and metro or facility",
        "Computed": true,
        "ConflictsWith": [
          "vlan_id"
        ]
      },
      "vlan_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Metal UUID of the VLAN resource",
        "Computed": true,
        "ConflictsWith": [
          "project_id",
          "vxlan",
          "metro",
          "facility"
        ]
      },
      "vxlan": {
        "Type": "Int",
        "Optional": true,
        "Description": "VXLAN numner of the VLAN. Unique in a project and facility or metro. Use with project_id",
        "Computed": true,
        "ConflictsWith": [
          "vlan_id"
        ]
      }
    },
    "equinix_metal_vrf": {
      "description": {
        "Type": "String",
        "Description": "Description of the VRF",
        "Computed": true
      },
      "ip_ranges": {
        "Type": "Set",
        "Description": "All IPv4 and IPv6 Ranges that will be available to BGP Peers. IPv4 addresses must be /8 or smaller with a minimum size of /29. IPv6 must be /56 or smaller with a minimum size of /64. Ranges must not overlap other ranges within the VRF.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "local_asn": {
        "Type": "Int",
        "Description": "The 4-byte ASN set on the VRF.",
        "Computed": true
      },
      "metro": {
        "Type": "String",
        "Description": "Metro Code",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "User-supplied name of the VRF, unique to the project",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Description": "Project ID",
        "Computed": true
      },
      "vrf_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of the VRF to lookup"
      }
    },
    "equinix_network_account": {
      "metro_code": {
        "Type": "String",
        "Required": true,
        "Description": "Account location metro cod"
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Account name for filtering",
        "Computed": true
      },
      "number": {
        "Type": "String",
        "Description": "Account unique number",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Account status for filtering. Possible values are Active, Processing, Submitted, Staged",
        "Computed": true
      },
      "ucm_id": {
        "Type": "String",
        "Description": "Account unique identifier",
        "Computed": true
      }
    },
    "equinix_network_device": {
      "account_number": {
        "Type": "String",
        "Description": "Device billing account number",
        "Computed": true
      },
      "acl_template_id": {
        "Type": "String",
        "Description": "Unique identifier of applied ACL template",
        "Computed": true
      },
      "additional_bandwidth": {
        "Type": "Int",
        "Description": "Additional Internet bandwidth, in Mbps, that will be allocated to the device",
        "Computed": true
      },
      "asn": {
        "Type": "Int",
        "Description": "Autonomous system number",
        "Computed": true
      },
      "byol": {
        "Type": "Bool",
        "Description": "Boolean value that determines device licensing mode: bring your own license or subscription (default)",
        "Computed": true
      },
      "cluster_details": {
        "Type": "List",
        "Description": "An object that has the cluster details",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cluster_id": {
              "Type": "String",
              "Description": "The id of the cluster",
              "Computed": true
            },
            "cluster_name": {
              "Type": "String",
              "Description": "The name of the cluster device",
              "Computed": true
            },
            "node0": {
              "Type": "List",
              "Description": "An object that has node0 details",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "license_file_id": {
                    "Type": "String",
                    "Description": "License file id. This is necessary for Fortinet and Juniper clusters",
                    "Computed": true
                  },
                  "license_token": {
                    "Type": "String",
                    "Description": "License token. This is necessary for Palo Alto clusters",
                    "Computed": true
                  },
                  "name": {
                    "Type": "String",
                    "Description": "The name of the node",
                    "Computed": true
                  },
                  "uuid": {
                    "Type": "String",
                    "Description": "The unique id of the node",
                    "Computed": true
                  },
                  "vendor_configuration": {
                    "Type": "List",
                    "Description": "An object that has fields relevant to the vendor of the cluster device",
                    "Computed": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "ComputedBlock",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "activation_key": {
                          "Type": "String",
                          "Description": "Activation key. This is required for Velocloud clusters",
                          "Computed": true
                        },
                        "admin_password": {
                          "Type": "String",
                          "Description": "The administrative password of the device. You can use it to log in to the console. This field is not available for all device types",
                          "Computed": true
                        },
                        "controller1": {
                          "Type": "String",
                          "Description": "System IP Address. Mandatory for the Fortinet SDWAN cluster device",
                          "Computed": true
                        },
                        "controller_fqdn": {
                          "Type": "String",
                          "Description": "Controller fqdn. This is required for Velocloud clusters",
                          "Computed": true
                        },
                        "hostname": {
                          "Type": "String",
                          "Description": "Hostname. This is necessary for Palo Alto, Juniper, and Fortinet clusters",
                          "Computed": true
                        },
                        "root_password": {
                          "Type": "String",
                          "Description": "The CLI password of the device. This field is relevant only for the Velocloud SDWAN cluster",
                          "Computed": true
                        }
                      }
                    }
                  }
                }
              }
            },
            "node1": {
              "Type": "List",
              "Description": "An object that has node1 details",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "license_file_id": {
                    "Type": "String",
                    "Description": "License file id. This is necessary for Fortinet and Juniper clusters",
                    "Computed": true
                  },
                  "license_token": {
                    "Type": "String",
                    "Description": "License token. This is necessary for Palo Alto clusters",
                    "Computed": true
                  },
                  "name": {
                    "Type": "String",
                    "Description": "The name of the node",
                    "Computed": true
                  },
                  "uuid": {
                    "Type": "String",
                    "Description": "The unique id of the node",
                    "Computed": true
                  },
                  "vendor_configuration": {
                    "Type": "List",
                    "Description": "An object that has fields relevant to the vendor of the cluster device",
                    "Computed": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "ComputedBlock",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "activation_key": {
                          "Type": "String",
                          "Description": "Activation key. This is required for Velocloud clusters",
                          "Computed": true
                        },
                        "admin_password": {
                          "Type": "String",
                          "Description": "The administrative password of the device. You can use it to log in to the console. This field is not available for all device types",
                          "Computed": true
                        },
                        "controller1": {
                          "Type": "String",
                          "Description": "System IP Address. Mandatory for the Fortinet SDWAN cluster device",
                          "Computed": true
                        },
                        "controller_fqdn": {
                          "Type": "String",
                          "Description": "Controller fqdn. This is required for Velocloud clusters",
                          "Computed": true
                        },
                        "hostname": {
                          "Type": "String",
                          "Description": "Hostname. This is necessary for Palo Alto, Juniper, and Fortinet clusters",
                          "Computed": true
                        },
                        "root_password": {
                          "Type": "String",
                          "Description": "The CLI password of the device. This field is relevant only for the Velocloud SDWAN cluster",
                          "Computed": true
                        }
                      }
                    }
                  }
                }
              }
            },
            "num_of_nodes": {
              "Type": "Int",
              "Description": "The number of nodes in the cluster",
              "Computed": true
            }
          }
        }
      },
      "core_count": {
        "Type": "Int",
        "Description": "Number of CPU cores used by device",
        "Computed": true
      },
      "hostname": {
        "Type": "String",
        "Description": "Device hostname prefix",
        "Computed": true
      },
      "ibx": {
        "Type": "String",
        "Description": "Device location Equinix Business Exchange name",
        "Computed": true
      },
      "interface": {
        "Type": "List",
        "Description": "List of device interfaces",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "assigned_type": {
              "Type": "String",
              "Description": "Interface management type (Equinix Managed or empty)",
              "Computed": true
            },
            "id": {
              "Type": "Int",
              "Description": "Interface identifier",
              "Computed": true
            },
            "ip_address": {
              "Type": "String",
              "Description": "interface IP address",
              "Computed": true
            },
            "mac_address": {
              "Type": "String",
              "Description": "Interface MAC addres",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Interface name",
              "Computed": true
            },
            "operational_status": {
              "Type": "String",
              "Description": "Interface operational status (up or down)",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "Interface status (AVAILABLE, RESERVED, ASSIGNED)",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Interface type",
              "Computed": true
            }
          }
        }
      },
      "interface_count": {
        "Type": "Int",
        "Description": "Number of network interfaces on a device. If not specified, default number for a given device type will be used",
        "Computed": true
      },
      "license_file": {
        "Type": "String",
        "Description": "Path to the license file that will be uploaded and applied on a device, applicable for some device types in BYOL licensing mode",
        "Computed": true
      },
      "license_file_id": {
        "Type": "String",
        "Description": "Unique identifier of applied license file",
        "Computed": true
      },
      "license_status": {
        "Type": "String",
        "Description": "Device license registration status",
        "Computed": true
      },
      "license_token": {
        "Type": "String",
        "Description": "License Token applicable for some device types in BYOL licensing mode",
        "Computed": true
      },
      "metro_code": {
        "Type": "String",
        "Description": "Device location metro code",
        "Computed": true
      },
      "mgmt_acl_template_uuid": {
        "Type": "String",
        "Description": "Unique identifier of applied MGMT ACL template",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Device name",
        "Computed": true
      },
      "notifications": {
        "Type": "Set",
        "Description": "List of email addresses that will receive device status notifications",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "order_reference": {
        "Type": "String",
        "Description": "Name/number used to identify device order on the invoice",
        "Computed": true
      },
      "package_code": {
        "Type": "String",
        "Description": "Device software package code",
        "Computed": true
      },
      "purchase_order_number": {
        "Type": "String",
        "Description": "Purchase order number associated with a device order",
        "Computed": true
      },
      "redundancy_type": {
        "Type": "String",
        "Description": "Device redundancy type applicable for HA devices, either primary or secondary",
        "Computed": true
      },
      "redundant_id": {
        "Type": "String",
        "Description": "Unique identifier for a redundant device, applicable for HA device",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Description": "Device location region",
        "Computed": true
      },
      "secondary_device": {
        "Type": "List",
        "Description": "Definition of secondary device applicable for HA setup",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "account_number": {
              "Type": "String",
              "Description": "Device billing account number",
              "Computed": true
            },
            "acl_template_id": {
              "Type": "String",
              "Description": "Unique identifier of applied ACL template",
              "Computed": true
            },
            "additional_bandwidth": {
              "Type": "Int",
              "Description": "Additional Internet bandwidth, in Mbps, that will be allocated to the device",
              "Computed": true
            },
            "asn": {
              "Type": "Int",
              "Description": "Autonomous system number",
              "Computed": true
            },
            "hostname": {
              "Type": "String",
              "Description": "Device hostname prefix",
              "Computed": true
            },
            "ibx": {
              "Type": "String",
              "Description": "Device location Equinix Business Exchange name",
              "Computed": true
            },
            "interface": {
              "Type": "List",
              "Description": "List of device interfaces",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "assigned_type": {
                    "Type": "String",
                    "Description": "Interface management type (Equinix Managed or empty)",
                    "Computed": true
                  },
                  "id": {
                    "Type": "Int",
                    "Description": "Interface identifier",
                    "Computed": true
                  },
                  "ip_address": {
                    "Type": "String",
                    "Description": "interface IP address",
                    "Computed": true
                  },
                  "mac_address": {
                    "Type": "String",
                    "Description": "Interface MAC addres",
                    "Computed": true
                  },
                  "name": {
                    "Type": "String",
                    "Description": "Interface name",
                    "Computed": true
                  },
                  "operational_status": {
                    "Type": "String",
                    "Description": "Interface operational status (up or down)",
                    "Computed": true
                  },
                  "status": {
                    "Type": "String",
                    "Description": "Interface status (AVAILABLE, RESERVED, ASSIGNED)",
                    "Computed": true
                  },
                  "type": {
                    "Type": "String",
                    "Description": "Interface type",
                    "Computed": true
                  }
                }
              }
            },
            "license_file": {
              "Type": "String",
              "Description": "Path to the license file that will be uploaded and applied on a device, applicable for some device types in BYOL licensing mode",
              "Computed": true
            },
            "license_file_id": {
              "Type": "String",
              "Description": "Unique identifier of applied license file",
              "Computed": true
            },
            "license_status": {
              "Type": "String",
              "Description": "Device license registration status",
              "Computed": true
            },
            "license_token": {
              "Type": "String",
              "Description": "License Token applicable for some device types in BYOL licensing mode",
              "Computed": true
            },
            "metro_code": {
              "Type": "String",
              "Description": "Device location metro code",
              "Computed": true
            },
            "mgmt_acl_template_uuid": {
              "Type": "String",
              "Description": "Unique identifier of applied MGMT ACL template",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Device name"
            },
            "notifications": {
              "Type": "Set",
              "Description": "List of email addresses that will receive device status notifications",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "redundancy_type": {
              "Type": "String",
              "Description": "Device redundancy type applicable for HA devices, either primary or secondary",
              "Computed": true
            },
            "redundant_id": {
              "Type": "String",
              "Description": "Unique identifier for a redundant device, applicable for HA device",
              "Computed": true
            },
            "region": {
              "Type": "String",
              "Description": "Device location region",
              "Computed": true
            },
            "ssh_ip_address": {
              "Type": "String",
              "Description": "IP address of SSH enabled interface on the device",
              "Computed": true
            },
            "ssh_ip_fqdn": {
              "Type": "String",
              "Description": "FQDN of SSH enabled interface on the device",
              "Computed": true
            },
            "ssh_key": {
              "Type": "Set",
              "Description": "Definition of SSH key that will be provisioned on a device",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "key_name": {
                    "Type": "String",
                    "Description": "Reference by name to previously provisioned public SSH key",
                    "Computed": true
                  },
                  "username": {
                    "Type": "String",
                    "Description": "Username associated with given key",
                    "Computed": true
                  }
                }
              }
            },
            "status": {
              "Type": "String",
              "Description": "Device provisioning status",
              "Computed": true
            },
            "uuid": {
              "Type": "String",
              "Description": "Device unique identifier",
              "Computed": true
            },
            "vendor_configuration": {
              "Type": "Map",
              "Description": "Map of vendor specific configuration parameters for a device (controller1, activationKey, managementType, siteId, systemIpAddress)",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "wan_interface_id": {
              "Type": "String",
              "Description": "device interface id picked for WAN",
              "Computed": true
            },
            "zone_code": {
              "Type": "String",
              "Description": "Device location zone code",
              "Computed": true
            }
          }
        }
      },
      "self_managed": {
        "Type": "Bool",
        "Description": "Boolean value that determines device management mode: self-managed or subscription (default)",
        "Computed": true
      },
      "ssh_ip_address": {
        "Type": "String",
        "Description": "IP address of SSH enabled interface on the device",
        "Computed": true
      },
      "ssh_ip_fqdn": {
        "Type": "String",
        "Description": "FQDN of SSH enabled interface on the device",
        "Computed": true
      },
      "ssh_key": {
        "Type": "Set",
        "Description": "Definition of SSH key that will be provisioned on a device",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "key_name": {
              "Type": "String",
              "Description": "Reference by name to previously provisioned public SSH key",
              "Computed": true
            },
            "username": {
              "Type": "String",
              "Description": "Username associated with given key",
              "Computed": true
            }
          }
        }
      },
      "status": {
        "Type": "String",
        "Description": "Device provisioning status",
        "Computed": true
      },
      "term_length": {
        "Type": "Int",
        "Description": "Device term length",
        "Computed": true
      },
      "throughput": {
        "Type": "Int",
        "Description": "Device license throughput",
        "Computed": true
      },
      "throughput_unit": {
        "Type": "String",
        "Description": "Device license throughput unit (Mbps or Gbps)",
        "Computed": true
      },
      "type_code": {
        "Type": "String",
        "Description": "Device type code",
        "Computed": true
      },
      "uuid": {
        "Type": "String",
        "Optional": true,
        "Description": "Device unique identifier",
        "Computed": true
      },
      "valid_status_list": {
        "Type": "String",
        "Optional": true,
        "Description": "Comma Separated List of states to be considered valid when searching by name",
        "ConflictsWith": [
          "uuid"
        ],
        "Default": {
          "Type": "string",
          "Value": "Provisioned"
        }
      },
      "vendor_configuration": {
        "Type": "Map",
        "Description": "Map of vendor specific configuration parameters for a device (controller1, activationKey, managementType, siteId, systemIpAddress)",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "version": {
        "Type": "String",
        "Description": "Device software software version",
        "Computed": true
      },
      "wan_interface_id": {
        "Type": "String",
        "Description": "device interface id picked for WAN",
        "Computed": true
      },
      "zone_code": {
        "Type": "String",
        "Description": "Device location zone code",
        "Computed": true
      }
    },
    "equinix_network_device_platform": {
      "core_count": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of CPU cores used to limit platform search results",
        "Computed": true
      },
      "device_type": {
        "Type": "String",
        "Required": true,
        "Description": "Device type code"
      },
      "flavor": {
        "Type": "String",
        "Optional": true,
        "Description": "Device platform flavor that determines number of CPU cores and memory. Supported values: small, medium, large, xlarge",
        "Computed": true
      },
      "license_options": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of device licensing options to limit platform search result. Supported values: BYOL (Bring Your Own License), Sub (license subscription)",
        "Computed": true,
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "management_types": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of device management types to limit platform search results. Supported values: EQUINIX-CONFIGURED, SELF-CONFIGURED",
        "Computed": true,
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "memory": {
        "Type": "Int",
        "Description": "The amount of memory provided by device platform",
        "Computed": true
      },
      "memory_unit": {
        "Type": "String",
        "Description": "Unit of memory provider by device platform",
        "Computed": true
      },
      "packages": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of software package codes to limit platform search results",
        "Computed": true,
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "equinix_network_device_software": {
      "date": {
        "Type": "String",
        "Description": "Version release date",
        "Computed": true
      },
      "device_type": {
        "Type": "String",
        "Required": true,
        "Description": "Code of a device type"
      },
      "image_name": {
        "Type": "String",
        "Description": "Software image name",
        "Computed": true
      },
      "most_recent": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value to indicate that most recent version should be used, in case when more than one result is returned",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "packages": {
        "Type": "Set",
        "Optional": true,
        "Description": "Limits returned versions to those that are supported by given software package codes",
        "Computed": true,
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "release_notes_link": {
        "Type": "String",
        "Description": "Link to version release notes",
        "Computed": true
      },
      "stable": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value to limit query results to stable versions only",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "Version status",
        "Computed": true
      },
      "version": {
        "Type": "String",
        "Description": "Software version",
        "Computed": true
      },
      "version_regex": {
        "Type": "String",
        "Optional": true,
        "Description": "A regex string to apply on returned versions and filter search results"
      }
    },
    "equinix_network_device_type": {
      "category": {
        "Type": "String",
        "Optional": true,
        "Description": "Device type category, one of: Router, Firewall, SDWAN",
        "Computed": true
      },
      "code": {
        "Type": "String",
        "Description": "Device type short code, unique identifier of a network device type",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Device type textual description",
        "Computed": true
      },
      "metro_codes": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of metro codes where device type has to be available",
        "Computed": true,
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Device type name",
        "Computed": true
      },
      "vendor": {
        "Type": "String",
        "Optional": true,
        "Description": "Device type vendor i.e. Cisco, Juniper Networks, VERSA Networks",
        "Computed": true
      }
    }
  }
}