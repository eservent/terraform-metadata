{
  ".schema_version": "2",
  ".sdk_type": "terraform-plugin-sdk-v2",
  "name": "newrelic",
  "type": "provider",
  "version": "v3.2.1",
  "provider": {
    "account_id": {
      "Type": "Int",
      "Required": true,
      "DefaultFunc": "ENV(NEW_RELIC_ACCOUNT_ID)"
    },
    "admin_api_key": {
      "Type": "String",
      "Optional": true,
      "DefaultFunc": "ENV(NEW_RELIC_ADMIN_API_KEY)"
    },
    "api_key": {
      "Type": "String",
      "Optional": true,
      "DefaultFunc": "ENV(NEW_RELIC_API_KEY)"
    },
    "api_url": {
      "Type": "String",
      "Optional": true,
      "DefaultFunc": "ENV(NEW_RELIC_API_URL)",
      "Deprecated": "New Relic internal use only. API URLs are now configured based on the configured region."
    },
    "cacert_file": {
      "Type": "String",
      "Optional": true,
      "DefaultFunc": "ENV(NEW_RELIC_API_CACERT)"
    },
    "infrastructure_api_url": {
      "Type": "String",
      "Optional": true,
      "DefaultFunc": "ENV(NEW_RELIC_INFRASTRUCTURE_API_URL)",
      "Deprecated": "New Relic internal use only. API URLs are now configured based on the configured region."
    },
    "insecure_skip_verify": {
      "Type": "Bool",
      "Optional": true,
      "DefaultFunc": "ENV(NEW_RELIC_API_SKIP_VERIFY)"
    },
    "insights_insert_key": {
      "Type": "String",
      "Optional": true,
      "DefaultFunc": "ENV(NEW_RELIC_INSIGHTS_INSERT_KEY)"
    },
    "insights_insert_url": {
      "Type": "String",
      "Optional": true,
      "DefaultFunc": "ENV(NEW_RELIC_INSIGHTS_INSERT_URL)"
    },
    "insights_query_url": {
      "Type": "String",
      "Optional": true,
      "DefaultFunc": "ENV(NEW_RELIC_INSIGHTS_QUERY_URL)"
    },
    "nerdgraph_api_url": {
      "Type": "String",
      "Optional": true,
      "DefaultFunc": "ENV(NEW_RELIC_NERDGRAPH_API_URL)",
      "Deprecated": "New Relic internal use only. API URLs are now configured based on the configured region."
    },
    "region": {
      "Type": "String",
      "Required": true,
      "Description": "The data center for which your New Relic account is configured. Only one region per provider block is permitted.",
      "DefaultFunc": "ENV(NEW_RELIC_REGION)"
    },
    "synthetics_api_url": {
      "Type": "String",
      "Optional": true,
      "DefaultFunc": "ENV(NEW_RELIC_SYNTHETICS_API_URL)",
      "Deprecated": "New Relic internal use only. API URLs are now configured based on the configured region."
    }
  },
  "resources": {
    "newrelic_alert_channel": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The New Relic account ID where you want to create alert channels.",
        "Computed": true
      },
      "config": {
        "Type": "List",
        "Optional": true,
        "Description": "The configuration block for the alert channel.",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "api_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The API key for integrating with OpsGenie."
            },
            "auth_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Specifies an authentication password for use with a channel. Supported by the webhook channel type."
            },
            "auth_type": {
              "Type": "String",
              "Optional": true,
              "Description": "Specifies an authentication method for use with a channel. Supported by the webhook channel type. Only HTTP basic authentication is currently supported via the value BASIC."
            },
            "auth_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Specifies an authentication username for use with a channel. Supported by the webhook channel type."
            },
            "base_url": {
              "Type": "String",
              "Optional": true,
              "Description": "The base URL of the webhook destination."
            },
            "channel": {
              "Type": "String",
              "Optional": true,
              "Description": "The Slack channel to send notifications to."
            },
            "headers": {
              "Type": "Map",
              "Optional": true,
              "Description": "A map of key/value pairs that represents extra HTTP headers to be sent along with the webhook payload.",
              "ConflictsWith": [
                "config.0.headers_string"
              ],
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "headers_string": {
              "Type": "String",
              "Optional": true,
              "Description": "Use instead of headers if the desired payload is more complex than a list of key/value pairs (e.g. a set of headers that makes use of nested objects). The value provided should be a valid JSON string with escaped double quotes. Conflicts with headers.",
              "ConflictsWith": [
                "config.0.headers"
              ]
            },
            "include_json_attachment": {
              "Type": "String",
              "Optional": true,
              "Description": "true or false. Flag for whether or not to attach a JSON document containing information about the associated alert to the email that is sent to recipients."
            },
            "key": {
              "Type": "String",
              "Optional": true,
              "Description": "The key for integrating with VictorOps."
            },
            "payload": {
              "Type": "Map",
              "Optional": true,
              "Description": "A map of key/value pairs that represents the webhook payload. Must provide payload_type if setting this argument.",
              "ConflictsWith": [
                "config.0.payload_string"
              ],
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "payload_string": {
              "Type": "String",
              "Optional": true,
              "Description": "Use instead of payload if the desired payload is more complex than a list of key/value pairs (e.g. a payload that makes use of nested objects). The value provided should be a valid JSON string with escaped double quotes. Conflicts with payload.",
              "ConflictsWith": [
                "config.0.payload"
              ]
            },
            "payload_type": {
              "Type": "String",
              "Optional": true,
              "Description": "Can either be application/json or application/x-www-form-urlencoded. The payload_type argument is required if payload is set."
            },
            "recipients": {
              "Type": "String",
              "Optional": true,
              "Description": "A set of recipients for targeting notifications. Multiple values are comma separated."
            },
            "region": {
              "Type": "String",
              "Optional": true,
              "Description": "The data center region to store your data. Valid values are US and EU. Default is US."
            },
            "route_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The route key for integrating with VictorOps."
            },
            "service_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Specifies the service key for integrating with Pagerduty."
            },
            "tags": {
              "Type": "String",
              "Optional": true,
              "Description": "A set of tags for targeting notifications. Multiple values are comma separated."
            },
            "teams": {
              "Type": "String",
              "Optional": true,
              "Description": "A set of teams for targeting notifications. Multiple values are comma separated."
            },
            "url": {
              "Type": "String",
              "Optional": true,
              "Description": "Your organization's Slack URL."
            },
            "user_id": {
              "Type": "String",
              "Optional": true,
              "Description": "The user ID for use with the user channel type."
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "(Required) The name of the channel."
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "(Required) The type of channel. One of: (user, victorops, webhook, email, opsgenie, pagerduty, slack)."
      }
    },
    "newrelic_alert_condition": {
      "condition_scope": {
        "Type": "String",
        "Optional": true,
        "Description": "One of (application, instance). Choose application for most scenarios. If you are using the JVM plugin in New Relic, the instance setting allows your condition to trigger for specific app instances."
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether the condition is enabled.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "entities": {
        "Type": "Set",
        "Required": true,
        "Description": "The instance IDs associated with this condition.",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "gc_metric": {
        "Type": "String",
        "Optional": true,
        "Description": "A valid Garbage Collection metric e.g. GC/G1 Young Generation. This is required if you are using apm_jvm_metric with gc_cpu_time condition type."
      },
      "metric": {
        "Type": "String",
        "Required": true,
        "Description": "The metric field accepts parameters based on the type set."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The title of the condition. Must be between 1 and 128 characters, inclusive."
      },
      "policy_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The ID of the policy where this condition should be used."
      },
      "runbook_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Runbook URL to display in notifications."
      },
      "term": {
        "Type": "Set",
        "Required": true,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "duration": {
              "Type": "Int",
              "Required": true,
              "Description": "In minutes, must be in the range of 5 to 120, inclusive."
            },
            "operator": {
              "Type": "String",
              "Optional": true,
              "Description": "One of (above, below, equal). Defaults to equal.",
              "Default": {
                "Type": "string",
                "Value": "equal"
              }
            },
            "priority": {
              "Type": "String",
              "Optional": true,
              "Description": "One of (critical, warning). Defaults to critical.",
              "Default": {
                "Type": "string",
                "Value": "critical"
              }
            },
            "threshold": {
              "Type": "Float",
              "Required": true,
              "Description": "Must be 0 or greater."
            },
            "time_function": {
              "Type": "String",
              "Required": true,
              "Description": "One of (all, any)."
            }
          }
        }
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The type of condition. One of: (apm_app_metric, apm_jvm_metric, apm_kt_metric, browser_metric, mobile_metric, servers_metric)."
      },
      "user_defined_metric": {
        "Type": "String",
        "Optional": true,
        "Description": "A custom metric to be evaluated."
      },
      "user_defined_value_function": {
        "Type": "String",
        "Optional": true,
        "Description": "One of: (average, min, max, total, sample_size)."
      },
      "violation_close_timer": {
        "Type": "Int",
        "Optional": true,
        "Description": "Automatically close instance-based violations, including JVM health metric violations, after the number of hours specified. Must be: 1, 2, 4, 8, 12 or 24."
      }
    },
    "newrelic_alert_muting_rule": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The account id of the MutingRule..",
        "Computed": true
      },
      "condition": {
        "Type": "List",
        "Required": true,
        "Description": "The condition that defines which violations to target.",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "conditions": {
              "Type": "List",
              "Required": true,
              "Description": "The individual MutingRuleConditions within the group.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "attribute": {
                    "Type": "String",
                    "Required": true,
                    "Description": "The attribute on a violation."
                  },
                  "operator": {
                    "Type": "String",
                    "Required": true,
                    "Description": "The operator used to compare the attribute's value with the supplied value(s)."
                  },
                  "values": {
                    "Type": "List",
                    "Required": true,
                    "Description": "The value(s) to compare against the attribute's value.",
                    "MinItems": 1,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "operator": {
              "Type": "String",
              "Required": true,
              "Description": "The operator used to combine all the MutingRuleConditions within the group."
            }
          }
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The description of the MutingRule."
      },
      "enabled": {
        "Type": "Bool",
        "Required": true,
        "Description": "Whether the MutingRule is enabled."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the MutingRule."
      },
      "schedule": {
        "Type": "List",
        "Optional": true,
        "Description": "The time window when the MutingRule should actively mute violations.",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "end_repeat": {
              "Type": "String",
              "Optional": true,
              "Description": "The datetime stamp when the MutingRule schedule should stop repeating.",
              "ConflictsWith": [
                "schedule.0.repeat_count"
              ]
            },
            "end_time": {
              "Type": "String",
              "Optional": true,
              "Description": "The datetime stamp representing when the MutingRule should end."
            },
            "repeat": {
              "Type": "String",
              "Optional": true,
              "Description": "The frequency the MutingRule schedule repeats. One of [DAILY, WEEKLY, MONTHLY]"
            },
            "repeat_count": {
              "Type": "Int",
              "Optional": true,
              "Description": "The number of times the MutingRule schedule should repeat.",
              "ConflictsWith": [
                "schedule.0.end_repeat"
              ]
            },
            "start_time": {
              "Type": "String",
              "Optional": true,
              "Description": "The datetime stamp representing when the MutingRule should start."
            },
            "time_zone": {
              "Type": "String",
              "Required": true,
              "Description": "The time zone that applies to the MutingRule schedule."
            },
            "weekly_repeat_days": {
              "Type": "Set",
              "Optional": true,
              "Description": "The day(s) of the week that a MutingRule should repeat when the repeat field is set to WEEKLY.",
              "MaxItems": 7,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      }
    },
    "newrelic_alert_policy": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The New Relic account ID to operate on.",
        "Computed": true
      },
      "channel_ids": {
        "Type": "List",
        "Optional": true,
        "Description": "An array of channel IDs (integers) to assign to the policy. Adding or removing channel IDs from this array will result in a new alert policy resource being created and the old one being destroyed. Also note that channel IDs cannot be imported via terraform import.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "incident_preference": {
        "Type": "String",
        "Optional": true,
        "Description": "The rollup strategy for the policy. Options include: PER_POLICY, PER_CONDITION, or PER_CONDITION_AND_TARGET. The default is PER_POLICY.",
        "Default": {
          "Type": "string",
          "Value": "PER_POLICY"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the policy."
      }
    },
    "newrelic_alert_policy_channel": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The New Relic account ID where you want to link the channel to.",
        "Computed": true
      },
      "channel_ids": {
        "Type": "Set",
        "Required": true,
        "Description": "Array of channel IDs to apply to the specified policy. We recommended sorting channel IDs in ascending order to avoid drift your Terraform state.",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "policy_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The ID of the policy."
      }
    },
    "newrelic_api_access_key": {
      "account_id": {
        "Type": "Int",
        "Required": true
      },
      "ingest_type": {
        "Type": "String",
        "Optional": true,
        "Computed": true,
        "ConflictsWith": [
          "user_id"
        ]
      },
      "key": {
        "Type": "String",
        "Computed": true
      },
      "key_type": {
        "Type": "String",
        "Required": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "notes": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "user_id": {
        "Type": "Int",
        "Optional": true,
        "Computed": true,
        "ConflictsWith": [
          "ingest_type"
        ]
      }
    },
    "newrelic_application_settings": {
      "app_apdex_threshold": {
        "Type": "Float",
        "Required": true
      },
      "enable_real_user_monitoring": {
        "Type": "Bool",
        "Required": true
      },
      "end_user_apdex_threshold": {
        "Type": "Float",
        "Required": true
      },
      "name": {
        "Type": "String",
        "Required": true
      }
    },
    "newrelic_cloud_aws_govcloud_integrations": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The ID of the account in New Relic.",
        "Computed": true
      },
      "alb": {
        "Type": "List",
        "Optional": true,
        "Description": "The alb integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aws_regions": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each AWS region that includes the resources that you want to monitor",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "fetch_extended_inventory": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit."
            },
            "fetch_tags": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit."
            },
            "load_balancer_prefixes": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each name or prefix for the LBs that you want to monitor. Filter values are case-sensitive.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "tag_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive."
            },
            "tag_value": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.\n\n"
            }
          }
        }
      },
      "api_gateway": {
        "Type": "List",
        "Optional": true,
        "Description": "The api gateway integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aws_regions": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each AWS region that includes the resources that you want to monitor",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "stage_prefixes": {
              "Type": "List",
              "Optional": true,
              "Description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "tag_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive."
            },
            "tag_value": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.\n\n"
            }
          }
        }
      },
      "auto_scaling": {
        "Type": "List",
        "Optional": true,
        "Description": "The auto scaling integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aws_regions": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each AWS region that includes the resources that you want to monitor",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            }
          }
        }
      },
      "aws_direct_connect": {
        "Type": "List",
        "Optional": true,
        "Description": "The aws direct connect integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aws_regions": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each AWS region that includes the resources that you want to monitor",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            }
          }
        }
      },
      "aws_states": {
        "Type": "List",
        "Optional": true,
        "Description": "The aws states integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aws_regions": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each AWS region that includes the resources that you want to monitor",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            }
          }
        }
      },
      "cloudtrail": {
        "Type": "List",
        "Optional": true,
        "Description": "The cloudtrail integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aws_regions": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each AWS region that includes the resources that you want to monitor",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            }
          }
        }
      },
      "dynamo_db": {
        "Type": "List",
        "Optional": true,
        "Description": "The dynamo DB integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aws_regions": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each AWS region that includes the resources that you want to monitor",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "fetch_extended_inventory": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit."
            },
            "fetch_tags": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit."
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "tag_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive."
            },
            "tag_value": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.\n\n"
            }
          }
        }
      },
      "ebs": {
        "Type": "List",
        "Optional": true,
        "Description": "The ebs integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aws_regions": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each AWS region that includes the resources that you want to monitor",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "fetch_extended_inventory": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit."
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "tag_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive."
            },
            "tag_value": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.\n\n"
            }
          }
        }
      },
      "ec2": {
        "Type": "List",
        "Optional": true,
        "Description": "The ec2 integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aws_regions": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each AWS region that includes the resources that you want to monitor",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "fetch_ip_addresses": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Specify if IP addresses of ec2 instance should be collected",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Bool"
              }
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "tag_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "tag_value": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.\n\n",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "elastic_search": {
        "Type": "List",
        "Optional": true,
        "Description": "The elastic search integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aws_regions": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each AWS region that includes the resources that you want to monitor",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "fetch_nodes": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Specify if IP addresses of ec2 instance should be collected"
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "tag_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive."
            },
            "tag_value": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.\n\n"
            }
          }
        }
      },
      "elb": {
        "Type": "List",
        "Optional": true,
        "Description": "The elb integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aws_regions": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each AWS region that includes the resources that you want to monitor",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "fetch_extended_inventory": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit."
            },
            "fetch_tags": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit."
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            }
          }
        }
      },
      "emr": {
        "Type": "List",
        "Optional": true,
        "Description": "The emr integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aws_regions": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify each AWS region that includes the resources that you want to monitor",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "fetch_tags": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.\n\n",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Bool"
              }
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "tag_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "tag_value": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.\n\n",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "iam": {
        "Type": "List",
        "Optional": true,
        "Description": "The iam integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "tag_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive."
            },
            "tag_value": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.\n\n"
            }
          }
        }
      },
      "lambda": {
        "Type": "List",
        "Optional": true,
        "Description": "The lambda integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aws_regions": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each AWS region that includes the resources that you want to monitor",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "fetch_tags": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.\n\n",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Bool"
              }
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "tag_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive."
            },
            "tag_value": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.\n\n"
            }
          }
        }
      },
      "linked_account_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The ID of the linked AwsGovCloud account in New Relic"
      },
      "rds": {
        "Type": "List",
        "Optional": true,
        "Description": "The rds integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aws_regions": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each AWS region that includes the resources that you want to monitor",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "fetch_tags": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit."
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "tag_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive."
            },
            "tag_value": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.\n\n"
            }
          }
        }
      },
      "red_shift": {
        "Type": "List",
        "Optional": true,
        "Description": "The redshift integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aws_regions": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each AWS region that includes the resources that you want to monitor",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "tag_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive."
            },
            "tag_value": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.\n\n"
            }
          }
        }
      },
      "route53": {
        "Type": "List",
        "Optional": true,
        "Description": "The route53 integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "fetch_extended_inventory": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit."
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            }
          }
        }
      },
      "s3": {
        "Type": "List",
        "Optional": true,
        "Description": "The s3 integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "fetch_extended_inventory": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit."
            },
            "fetch_tags": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit."
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "tag_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive."
            },
            "tag_value": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.\n\n"
            }
          }
        }
      },
      "sns": {
        "Type": "List",
        "Optional": true,
        "Description": "The sns integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aws_regions": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each AWS region that includes the resources that you want to monitor",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "fetch_extended_inventory": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit."
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            }
          }
        }
      },
      "sqs": {
        "Type": "List",
        "Optional": true,
        "Description": "The sqs integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aws_regions": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each AWS region that includes the resources that you want to monitor",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "fetch_extended_inventory": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit."
            },
            "fetch_tags": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit."
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "queue_prefixes": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each name or prefix for the Queues that you want to monitor. Filter values are case-sensitive.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "tag_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive."
            },
            "tag_value": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.\n\n"
            }
          }
        }
      }
    },
    "newrelic_cloud_aws_govcloud_link_account": {
      "access_key_id": {
        "Type": "String",
        "Required": true,
        "Description": "access-key-id of awsGovcloud account"
      },
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The ID of the account in New Relic.",
        "Computed": true
      },
      "aws_account_id": {
        "Type": "String",
        "Required": true,
        "Description": "awsGovcloud account id"
      },
      "metric_collection_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "push or pull"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "name of the account"
      },
      "secret_access_key": {
        "Type": "String",
        "Required": true,
        "Description": "secret access key of the awsGovcloud account"
      }
    },
    "newrelic_cloud_aws_integrations": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The ID of the account in New Relic.",
        "Computed": true
      },
      "billing": {
        "Type": "List",
        "Optional": true,
        "Description": "Billing integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds."
            }
          }
        }
      },
      "cloudtrail": {
        "Type": "List",
        "Optional": true,
        "Description": "CloudTrail integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aws_regions": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each AWS region that includes the resources that you want to monitor.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds."
            }
          }
        }
      },
      "doc_db": {
        "Type": "List",
        "Optional": true,
        "Description": "Billing integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds."
            }
          }
        }
      },
      "health": {
        "Type": "List",
        "Optional": true,
        "Description": "Health integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds."
            }
          }
        }
      },
      "linked_account_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The ID of the linked AWS account in New Relic"
      },
      "s3": {
        "Type": "List",
        "Optional": true,
        "Description": "S3 integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds."
            }
          }
        }
      },
      "trusted_advisor": {
        "Type": "List",
        "Optional": true,
        "Description": "Trusted Advisor integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds."
            }
          }
        }
      },
      "vpc": {
        "Type": "List",
        "Optional": true,
        "Description": "VPC integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aws_regions": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each AWS region that includes the resources that you want to monitor.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "fetch_nat_gateway": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Specify if NAT gateway should be monitored. May affect total data collection time and contribute to the Cloud provider API rate limit."
            },
            "fetch_vpn": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Specify if VPN should be monitored. May affect total data collection time and contribute to the Cloud provider API rate limit."
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds."
            },
            "tag_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive."
            },
            "tag_value": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive."
            }
          }
        }
      },
      "x_ray": {
        "Type": "List",
        "Optional": true,
        "Description": "X-Ray integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aws_regions": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each AWS region that includes the resources that you want to monitor.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds."
            }
          }
        }
      }
    },
    "newrelic_cloud_aws_link_account": {
      "__timeouts__": [
        "create"
      ],
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The New Relic account ID where you want to link the AWS account.",
        "Computed": true
      },
      "arn": {
        "Type": "String",
        "Required": true,
        "Description": "The AWS role ARN."
      },
      "metric_collection_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "How metrics will be collected. Defaults to `PULL` if empty."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the linked account."
      }
    },
    "newrelic_cloud_azure_integrations": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The ID of the account in New Relic.",
        "Computed": true
      },
      "api_management": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure api management integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "app_gateway": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure app gateway integration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "app_service": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure app services",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "containers": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure containers",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "cosmos_db": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure cosmoDB",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "cost_management": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure cost management",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "tag_keys": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify if additional cost data per tag should be collected. This field is case sensitive.\n\n",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "data_factory": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure data factory",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "event_hub": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure event hub",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "express_route": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure express route",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "firewalls": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure firewalls",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "front_door": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure front door",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "functions": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure functions",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "key_vault": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure key vault",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "linked_account_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The ID of the linked Azure account in New Relic"
      },
      "load_balancer": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure load balancer",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "logic_apps": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure logic apps",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "machine_learning": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure machine learning",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "maria_db": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure Maria DB",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "mysql": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure mysql",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "postgresql": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure postgresql",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "power_bi_dedicated": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure powerBI dedicated",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "redis_cache": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure redis cache",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "service_bus": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure service bus",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "sql": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure sql",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "sql_managed": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure sql managed",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "storage": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure storage",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "virtual_machine": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure virtual machine",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "virtual_networks": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure virtual networks",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "vms": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure Vms",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "vpn_gateway": {
        "Type": "List",
        "Optional": true,
        "Description": "The Azure vpn gateway",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "The data polling interval in seconds"
            },
            "resource_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      }
    },
    "newrelic_cloud_azure_link_account": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The New Relic account ID where you want to link the Azure account.",
        "Computed": true
      },
      "application_id": {
        "Type": "String",
        "Required": true,
        "Description": "Application ID for Azure account"
      },
      "client_secret": {
        "Type": "String",
        "Required": true,
        "Description": "Value of the client secret from Azure"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the linked account"
      },
      "subscription_id": {
        "Type": "String",
        "Required": true,
        "Description": "Subscription ID for the Azure account"
      },
      "tenant_id": {
        "Type": "String",
        "Required": true,
        "Description": "Tenant ID for the Azure account"
      }
    },
    "newrelic_cloud_gcp_integrations": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "ID of the newrelic account",
        "Computed": true
      },
      "app_engine": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP app engine service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "big_query": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP biq query service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "fetch_tags": {
              "Type": "Bool",
              "Optional": true,
              "Description": "to fetch tags of the resource"
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "big_table": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP big table service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "composer": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP big table service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "data_flow": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP big table service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "data_proc": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP big table service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "data_store": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP big table service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "fire_base_database": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP big table service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "fire_base_hosting": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP big table service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "fire_base_storage": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP big table service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "fire_store": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP big table service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "functions": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP big table service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "interconnect": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP big table service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "kubernetes": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP big table service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "linked_account_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Id of the linked gcp account in New Relic"
      },
      "load_balancing": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP big table service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "mem_cache": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP big table service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "pub_sub": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP big table service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "fetch_tags": {
              "Type": "Bool",
              "Optional": true,
              "Description": "to fetch tags of the resource"
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "redis": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP big table service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "router": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP big table service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "run": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP big table service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "spanner": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP big table service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "fetch_tags": {
              "Type": "Bool",
              "Optional": true,
              "Description": "to fetch tags of the resource"
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "sql": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP big table service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "storage": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP big table service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "fetch_tags": {
              "Type": "Bool",
              "Optional": true,
              "Description": "to fetch tags of the resource"
            },
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "virtual_machines": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP big table service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      },
      "vpc_access": {
        "Type": "List",
        "Optional": true,
        "Description": "GCP big table service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metrics_polling_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "the data polling interval in seconds"
            }
          }
        }
      }
    },
    "newrelic_cloud_gcp_link_account": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "accountID of newrelic account",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "name of the linked account"
      },
      "project_id": {
        "Type": "String",
        "Required": true,
        "Description": "project id of the Gcp account"
      }
    },
    "newrelic_entity_tags": {
      "__timeouts__": [
        "create"
      ],
      "guid": {
        "Type": "String",
        "Required": true,
        "Description": "The guid of the entity to tag."
      },
      "tag": {
        "Type": "Set",
        "Required": true,
        "Description": "A set of key-value pairs to represent a tag. For example: Team:TeamName",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "The tag key."
            },
            "values": {
              "Type": "Set",
              "Required": true,
              "Description": "The tag values.",
              "MinItems": 1,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      }
    },
    "newrelic_events_to_metrics_rule": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "Account with the event and where the metrics will be put.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Provides additional information about the rule."
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True means this rule is enabled. False means the rule is currently not creating metrics."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the rule. This must be unique within an account."
      },
      "nrql": {
        "Type": "String",
        "Required": true,
        "Description": "Explains how to create metrics from events."
      },
      "rule_id": {
        "Type": "String",
        "Description": "The id, uniquely identifying the rule.",
        "Computed": true
      }
    },
    "newrelic_infra_alert_condition": {
      "comparison": {
        "Type": "String",
        "Optional": true,
        "Description": "The operator used to evaluate the threshold value. Valid values are above, below, and equal. Supported by the infra_metric and infra_process_running condition types."
      },
      "created_at": {
        "Type": "Int",
        "Description": "The timestamp the alert condition was created.",
        "Computed": true
      },
      "critical": {
        "Type": "List",
        "Optional": true,
        "Description": "Identifies the threshold parameters for opening a critical alert violation.",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "duration": {
              "Type": "Int",
              "Required": true
            },
            "time_function": {
              "Type": "String",
              "Optional": true
            },
            "value": {
              "Type": "Float",
              "Optional": true
            }
          }
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The description of the Infrastructure alert condition."
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether the condition is turned on or off. Valid values are true and false. Defaults to true.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "event": {
        "Type": "String",
        "Optional": true,
        "Description": "The metric event; for example, SystemSample or StorageSample. Supported by the infra_metric condition type.",
        "Computed": true
      },
      "integration_provider": {
        "Type": "String",
        "Optional": true,
        "Description": "For alerts on integrations, use this instead of event. Supported by the infra_metric condition type."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The Infrastructure alert condition's name."
      },
      "policy_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The ID of the alert policy where this condition should be used."
      },
      "process_where": {
        "Type": "String",
        "Optional": true,
        "Description": "Any filters applied to processes; for example: commandName = 'java'. Supported by the infra_process_running condition type."
      },
      "runbook_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Runbook URL to display in notifications."
      },
      "select": {
        "Type": "String",
        "Optional": true,
        "Description": "The attribute name to identify the metric being targeted; for example, cpuPercent, diskFreePercent, or memoryResidentSizeBytes. The underlying API will automatically populate this value for Infrastructure integrations (for example diskFreePercent), so make sure to explicitly include this value to avoid diff issues. Supported by the infra_metric condition type."
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The type of Infrastructure alert condition. Valid values are infra_process_running, infra_metric, and infra_host_not_reporting."
      },
      "updated_at": {
        "Type": "Int",
        "Description": "The timestamp the alert condition was last updated.",
        "Computed": true
      },
      "violation_close_timer": {
        "Type": "Int",
        "Optional": true,
        "Description": "Determines how much time, in hours, will pass before a violation is automatically closed. Valid values are 1, 2, 4, 8, 12, 24, 48, or 72",
        "Default": {
          "Type": "int",
          "Value": "24"
        }
      },
      "warning": {
        "Type": "List",
        "Optional": true,
        "Description": "Identifies the threshold parameters for opening a warning alert violation.",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "duration": {
              "Type": "Int",
              "Required": true
            },
            "time_function": {
              "Type": "String",
              "Optional": true
            },
            "value": {
              "Type": "Float",
              "Optional": true
            }
          }
        }
      },
      "where": {
        "Type": "String",
        "Optional": true,
        "Description": "If applicable, this identifies any Infrastructure host filters used; for example: hostname LIKE '%cassandra%'."
      }
    },
    "newrelic_insights_event": {
      "event": {
        "Type": "Set",
        "Required": true,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "attribute": {
              "Type": "Set",
              "Required": true,
              "Description": "An attribute to include in your event payload. Multiple attribute blocks can be defined for an event.",
              "MaxItems": 255,
              "MinItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "key": {
                    "Type": "String",
                    "Required": true,
                    "Description": "The name of the attribute."
                  },
                  "type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Specify the type for the attribute value. This is useful when passing integer or float values to Insights. Allowed values are string, int, or float. Defaults to string."
                  },
                  "value": {
                    "Type": "String",
                    "Required": true,
                    "Description": "The value of the attribute."
                  }
                }
              }
            },
            "timestamp": {
              "Type": "Int",
              "Optional": true,
              "Description": "Must be a Unix epoch timestamp. You can define timestamps either in seconds or in milliseconds."
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "The event's name. Can be a combination of alphanumeric characters, underscores, and colons."
            }
          }
        }
      }
    },
    "newrelic_notification_channel": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The account id of the channel.",
        "Computed": true
      },
      "active": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether the channel is active.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "destination_id": {
        "Type": "String",
        "Required": true,
        "Description": "(Required) The id of the destination."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "(Required) The name of the channel."
      },
      "product": {
        "Type": "String",
        "Required": true,
        "Description": "(Required) The type of the channel product. One of: (DISCUSSIONS, ERROR_TRACKING, IINT)."
      },
      "property": {
        "Type": "Set",
        "Required": true,
        "Description": "Notification channel property type.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "display_value": {
              "Type": "String",
              "Optional": true,
              "Description": "Notification property display key."
            },
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "Notification property key."
            },
            "label": {
              "Type": "String",
              "Optional": true,
              "Description": "Notification property label."
            },
            "value": {
              "Type": "String",
              "Required": true,
              "Description": "Notification property value."
            }
          }
        }
      },
      "status": {
        "Type": "String",
        "Description": "The status of the channel.",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "(Required) The type of the channel. One of: (WEBHOOK, EMAIL, SERVICENOW_INCIDENTS, PAGERDUTY_ACCOUNT_INTEGRATION, PAGERDUTY_SERVICE_INTEGRATION, JIRA_CLASSIC, SLACK, SLACK_COLLABORATION, SLACK_LEGACY, MOBILE_PUSH, EVENT_BRIDGE)."
      }
    },
    "newrelic_notification_destination": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The account ID under which to put the destination.",
        "Computed": true
      },
      "active": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether the destination is active.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "auth_basic": {
        "Type": "List",
        "Optional": true,
        "Description": "Basic username and password authentication credentials.",
        "MaxItems": 1,
        "MinItems": 1,
        "ConflictsWith": [
          "auth_token"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "password": {
              "Type": "String",
              "Required": true
            },
            "user": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "auth_token": {
        "Type": "List",
        "Optional": true,
        "Description": "Token authentication credentials.",
        "MaxItems": 1,
        "MinItems": 1,
        "ConflictsWith": [
          "auth_basic"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "prefix": {
              "Type": "String",
              "Optional": true
            },
            "token": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "last_sent": {
        "Type": "String",
        "Description": "The last time a notification was sent.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "(Required) The name of the destination."
      },
      "property": {
        "Type": "Set",
        "Required": true,
        "Description": "Notification destination property type.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "display_value": {
              "Type": "String",
              "Optional": true,
              "Description": "Notification property display key."
            },
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "Notification property key."
            },
            "label": {
              "Type": "String",
              "Optional": true,
              "Description": "Notification property label."
            },
            "value": {
              "Type": "String",
              "Required": true,
              "Description": "Notification property value."
            }
          }
        }
      },
      "status": {
        "Type": "String",
        "Description": "The status of the destination.",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "(Required) The type of the destination. One of: (WEBHOOK, EMAIL, SERVICE_NOW, PAGERDUTY_ACCOUNT_INTEGRATION, PAGERDUTY_SERVICE_INTEGRATION, JIRA, SLACK, SLACK_COLLABORATION, SLACK_LEGACY, MOBILE_PUSH, EVENT_BRIDGE)."
      }
    },
    "newrelic_nrql_alert_condition": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The New Relic account ID for managing your NRQL alert conditions.",
        "Computed": true
      },
      "aggregation_delay": {
        "Type": "String",
        "Optional": true,
        "Description": "How long we wait for data that belongs in each aggregation window. Depending on your data, a longer delay may increase accuracy but delay notifications. Use aggregationDelay with the EVENT_FLOW and CADENCE aggregation methods."
      },
      "aggregation_method": {
        "Type": "String",
        "Optional": true,
        "Description": "The method that determines when we consider an aggregation window to be complete so that we can evaluate the signal for violations. Default is EVENT_FLOW."
      },
      "aggregation_timer": {
        "Type": "String",
        "Optional": true,
        "Description": "How long we wait after each data point arrives to make sure we've processed the whole batch. Use aggregationTimer with the EVENT_TIMER aggregation method."
      },
      "aggregation_window": {
        "Type": "Int",
        "Optional": true,
        "Description": "The duration of the time window used to evaluate the NRQL query, in seconds.",
        "Computed": true
      },
      "baseline_direction": {
        "Type": "String",
        "Optional": true,
        "Description": "The baseline direction of a baseline NRQL alert condition. Valid values are: 'LOWER_ONLY', 'UPPER_AND_LOWER', 'UPPER_ONLY' (case insensitive).",
        "ConflictsWith": [
          "value_function"
        ]
      },
      "close_violations_on_expiration": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to close all open violations when the signal expires."
      },
      "critical": {
        "Type": "List",
        "Optional": true,
        "Description": "A condition term with priority set to critical.",
        "MaxItems": 1,
        "MinItems": 1,
        "ConflictsWith": [
          "term"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "duration": {
              "Type": "Int",
              "Optional": true,
              "Description": "In minutes, must be in the range of 1 to 120 (inclusive).",
              "Deprecated": "use `threshold_duration` attribute instead"
            },
            "operator": {
              "Type": "String",
              "Optional": true,
              "Description": "One of (above, above_or_equals, below, below_or_equals, equals, not_equals). Defaults to 'equals'.",
              "Default": {
                "Type": "string",
                "Value": "equals"
              }
            },
            "threshold": {
              "Type": "Float",
              "Required": true,
              "Description": "For baseline conditions must be in range [1, 1000]."
            },
            "threshold_duration": {
              "Type": "Int",
              "Optional": true,
              "Description": "The duration, in seconds, that the threshold must violate in order to create a violation. Value must be a multiple of the 'aggregation_window' (which has a default of 60 seconds). Value must be within 120-3600 seconds for baseline conditions, within 120-7200 seconds for static conditions with the sum value function, and within 60-7200 seconds for static conditions with the single_value value function."
            },
            "threshold_occurrences": {
              "Type": "String",
              "Optional": true,
              "Description": "The criteria for how many data points must be in violation for the specified threshold duration. Valid values are: 'ALL' or 'AT_LEAST_ONCE' (case insensitive)."
            },
            "time_function": {
              "Type": "String",
              "Optional": true,
              "Description": "Valid values are: 'all' or 'any'",
              "Deprecated": "use `threshold_occurrences` attribute instead"
            }
          }
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The description of the NRQL alert condition."
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether or not to enable the alert condition.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "entity_guid": {
        "Type": "String",
        "Description": "The unique entity identifier of the NRQL Condition in New Relic.",
        "Computed": true
      },
      "expiration_duration": {
        "Type": "Int",
        "Optional": true,
        "Description": "The amount of time (in seconds) to wait before considering the signal expired.  Must be in the range of 30 to 172800 (inclusive)"
      },
      "fill_option": {
        "Type": "String",
        "Optional": true,
        "Description": "Which strategy to use when filling gaps in the signal. If static, the 'fill value' will be used for filling gaps in the signal. Valid values are: 'NONE', 'LAST_VALUE', or 'STATIC' (case insensitive)."
      },
      "fill_value": {
        "Type": "Float",
        "Optional": true,
        "Description": "If using the 'static' fill option, this value will be used for filling gaps in the signal."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The title of the condition."
      },
      "nrql": {
        "Type": "List",
        "Required": true,
        "Description": "A NRQL query.",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "evaluation_offset": {
              "Type": "Int",
              "Optional": true,
              "Description": "NRQL queries are evaluated in one-minute time windows. The start time depends on the value you provide in the NRQL condition's `evaluation_offset`.",
              "ConflictsWith": [
                "nrql.0.since_value"
              ],
              "Deprecated": "use `aggregation_method` attribute instead"
            },
            "query": {
              "Type": "String",
              "Required": true
            },
            "since_value": {
              "Type": "String",
              "Optional": true,
              "Description": "NRQL queries are evaluated in one-minute time windows. The start time depends on the value you provide in the NRQL condition's `since_value`.",
              "ConflictsWith": [
                "nrql.0.evaluation_offset"
              ],
              "Deprecated": "use `aggregation_method` attribute instead"
            }
          }
        }
      },
      "open_violation_on_expiration": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to create a new violation to capture that the signal expired."
      },
      "policy_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The ID of the policy where this condition should be used."
      },
      "runbook_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Runbook URL to display in notifications."
      },
      "slide_by": {
        "Type": "Int",
        "Optional": true,
        "Description": "The duration of overlapping timewindows used to smooth the chart line, in seconds. Must be a factor of `aggregation_window` and less than the aggregation window. It should be greater or equal to 30 seconds if `aggregation_window` is less than or equal to 3600 seconds, or greater or equal to `aggregation_window / 120` if `aggregation_window` is greater than 3600 seconds."
      },
      "term": {
        "Type": "Set",
        "Optional": true,
        "Description": "A set of terms for this condition. Max 2 terms allowed - at least one 1 critical term and 1 optional warning term.",
        "MaxItems": 2,
        "MinItems": 1,
        "ConflictsWith": [
          "critical",
          "warning"
        ],
        "Deprecated": "use `critical` and `warning` attributes instead",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "duration": {
              "Type": "Int",
              "Optional": true,
              "Description": "In minutes, must be in the range of 1 to 120 (inclusive).",
              "Deprecated": "use `threshold_duration` attribute instead"
            },
            "operator": {
              "Type": "String",
              "Optional": true,
              "Description": "One of (above, above_or_equals, below, below_or_equals, equals, not_equals). Defaults to 'equals'.",
              "Default": {
                "Type": "string",
                "Value": "equals"
              }
            },
            "priority": {
              "Type": "String",
              "Optional": true,
              "Description": "One of (critical, warning). Defaults to 'critical'. At least one condition term must have priority set to 'critical'.",
              "Default": {
                "Type": "string",
                "Value": "critical"
              }
            },
            "threshold": {
              "Type": "Float",
              "Required": true,
              "Description": "For baseline conditions must be in range [1, 1000]."
            },
            "threshold_duration": {
              "Type": "Int",
              "Optional": true,
              "Description": "The duration, in seconds, that the threshold must violate in order to create a violation. Value must be a multiple of the 'aggregation_window' (which has a default of 60 seconds). Value must be within 120-3600 seconds for baseline conditions, within 120-7200 seconds for static conditions with the sum value function, and within 60-7200 seconds for static conditions with the single_value value function."
            },
            "threshold_occurrences": {
              "Type": "String",
              "Optional": true,
              "Description": "The criteria for how many data points must be in violation for the specified threshold duration. Valid values are: 'ALL' or 'AT_LEAST_ONCE' (case insensitive)."
            },
            "time_function": {
              "Type": "String",
              "Optional": true,
              "Description": "Valid values are: 'all' or 'any'",
              "Deprecated": "use `threshold_occurrences` attribute instead"
            }
          }
        }
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "The type of NRQL alert condition to create. Valid values are: 'static', 'baseline'.",
        "Default": {
          "Type": "string",
          "Value": "static"
        }
      },
      "value_function": {
        "Type": "String",
        "Optional": true,
        "Description": "Values are: 'single_value' (deprecated) or 'sum' (deprecated)",
        "Deprecated": "'value_function' is deprecated.  Remove this field and condition will evaluate as 'single_value' by default.  To replicate 'sum' behavior, use 'slide_by'."
      },
      "violation_time_limit": {
        "Type": "String",
        "Optional": true,
        "Description": "Sets a time limit, in hours, that will automatically force-close a long-lasting violation after the time limit you select. Possible values are 'ONE_HOUR', 'TWO_HOURS', 'FOUR_HOURS', 'EIGHT_HOURS', 'TWELVE_HOURS', 'TWENTY_FOUR_HOURS', 'THIRTY_DAYS' (case insensitive).",
        "Computed": true,
        "ConflictsWith": [
          "violation_time_limit_seconds"
        ],
        "Deprecated": "use `violation_time_limit_seconds` attribute instead"
      },
      "violation_time_limit_seconds": {
        "Type": "Int",
        "Optional": true,
        "Description": "Sets a time limit, in seconds, that will automatically force-close a long-lasting violation after the time limit you select.  Must be in the range of 300 to 2592000 (inclusive)",
        "ConflictsWith": [
          "violation_time_limit"
        ]
      },
      "warning": {
        "Type": "List",
        "Optional": true,
        "Description": "A condition term with priority set to warning.",
        "MaxItems": 1,
        "MinItems": 1,
        "ConflictsWith": [
          "term"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "duration": {
              "Type": "Int",
              "Optional": true,
              "Description": "In minutes, must be in the range of 1 to 120 (inclusive).",
              "Deprecated": "use `threshold_duration` attribute instead"
            },
            "operator": {
              "Type": "String",
              "Optional": true,
              "Description": "One of (above, above_or_equals, below, below_or_equals, equals, not_equals). Defaults to 'equals'.",
              "Default": {
                "Type": "string",
                "Value": "equals"
              }
            },
            "threshold": {
              "Type": "Float",
              "Required": true,
              "Description": "For baseline conditions must be in range [1, 1000]."
            },
            "threshold_duration": {
              "Type": "Int",
              "Optional": true,
              "Description": "The duration, in seconds, that the threshold must violate in order to create a violation. Value must be a multiple of the 'aggregation_window' (which has a default of 60 seconds). Value must be within 120-3600 seconds for baseline conditions, within 120-7200 seconds for static conditions with the sum value function, and within 60-7200 seconds for static conditions with the single_value value function."
            },
            "threshold_occurrences": {
              "Type": "String",
              "Optional": true,
              "Description": "The criteria for how many data points must be in violation for the specified threshold duration. Valid values are: 'ALL' or 'AT_LEAST_ONCE' (case insensitive)."
            },
            "time_function": {
              "Type": "String",
              "Optional": true,
              "Description": "Valid values are: 'all' or 'any'",
              "Deprecated": "use `threshold_occurrences` attribute instead"
            }
          }
        }
      }
    },
    "newrelic_nrql_drop_rule": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "Account with the NRQL drop rule will be put.",
        "Computed": true
      },
      "action": {
        "Type": "String",
        "Required": true,
        "Description": "The drop rule action (drop_data, drop_attributes, or drop_attributes_from_metric_aggregates)."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Provides additional information about the rule."
      },
      "nrql": {
        "Type": "String",
        "Required": true,
        "Description": "Explains which data to apply the drop rule to."
      },
      "rule_id": {
        "Type": "String",
        "Description": "The id, uniquely identifying the rule.",
        "Computed": true
      }
    },
    "newrelic_one_dashboard": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The New Relic account ID where you want to create the dashboard.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The dashboard's description."
      },
      "guid": {
        "Type": "String",
        "Description": "The unique entity identifier of the dashboard in New Relic.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The dashboard's name."
      },
      "page": {
        "Type": "List",
        "Required": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "description": {
              "Type": "String",
              "Optional": true,
              "Description": "The dashboard page's description."
            },
            "guid": {
              "Type": "String",
              "Description": "The unique entity identifier of the dashboard page in New Relic.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The dashboard page's name."
            },
            "widget_area": {
              "Type": "List",
              "Optional": true,
              "Description": "An area widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "ignore_time_range": {
                    "Type": "Bool",
                    "Optional": true
                  },
                  "nrql_query": {
                    "Type": "List",
                    "Required": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "account_id": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The account id used for the NRQL query.",
                          "Computed": true
                        },
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The NRQL query."
                        }
                      }
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            },
            "widget_bar": {
              "Type": "List",
              "Optional": true,
              "Description": "A bar widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "filter_current_dashboard": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Use this item to filter the current dashboard"
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "ignore_time_range": {
                    "Type": "Bool",
                    "Optional": true
                  },
                  "linked_entity_guids": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Related entities. Currently only supports Dashboard entities, but may allow other cases in the future.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "nrql_query": {
                    "Type": "List",
                    "Required": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "account_id": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The account id used for the NRQL query.",
                          "Computed": true
                        },
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The NRQL query."
                        }
                      }
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            },
            "widget_billboard": {
              "Type": "List",
              "Optional": true,
              "Description": "A billboard widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "critical": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The critical threshold value."
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "ignore_time_range": {
                    "Type": "Bool",
                    "Optional": true
                  },
                  "nrql_query": {
                    "Type": "List",
                    "Required": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "account_id": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The account id used for the NRQL query.",
                          "Computed": true
                        },
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The NRQL query."
                        }
                      }
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "warning": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The warning threshold value."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            },
            "widget_bullet": {
              "Type": "List",
              "Optional": true,
              "Description": "A bullet widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "ignore_time_range": {
                    "Type": "Bool",
                    "Optional": true
                  },
                  "limit": {
                    "Type": "Float",
                    "Required": true,
                    "Description": "The maximum value for the visualization"
                  },
                  "nrql_query": {
                    "Type": "List",
                    "Required": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "account_id": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The account id used for the NRQL query.",
                          "Computed": true
                        },
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The NRQL query."
                        }
                      }
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            },
            "widget_funnel": {
              "Type": "List",
              "Optional": true,
              "Description": "A funnel widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "ignore_time_range": {
                    "Type": "Bool",
                    "Optional": true
                  },
                  "nrql_query": {
                    "Type": "List",
                    "Required": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "account_id": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The account id used for the NRQL query.",
                          "Computed": true
                        },
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The NRQL query."
                        }
                      }
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            },
            "widget_heatmap": {
              "Type": "List",
              "Optional": true,
              "Description": "A heatmap widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "ignore_time_range": {
                    "Type": "Bool",
                    "Optional": true
                  },
                  "nrql_query": {
                    "Type": "List",
                    "Required": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "account_id": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The account id used for the NRQL query.",
                          "Computed": true
                        },
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The NRQL query."
                        }
                      }
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            },
            "widget_histogram": {
              "Type": "List",
              "Optional": true,
              "Description": "A histogram widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "ignore_time_range": {
                    "Type": "Bool",
                    "Optional": true
                  },
                  "nrql_query": {
                    "Type": "List",
                    "Required": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "account_id": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The account id used for the NRQL query.",
                          "Computed": true
                        },
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The NRQL query."
                        }
                      }
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            },
            "widget_json": {
              "Type": "List",
              "Optional": true,
              "Description": "A JSON widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "ignore_time_range": {
                    "Type": "Bool",
                    "Optional": true
                  },
                  "nrql_query": {
                    "Type": "List",
                    "Required": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "account_id": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The account id used for the NRQL query.",
                          "Computed": true
                        },
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The NRQL query."
                        }
                      }
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            },
            "widget_line": {
              "Type": "List",
              "Optional": true,
              "Description": "A line widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "ignore_time_range": {
                    "Type": "Bool",
                    "Optional": true
                  },
                  "nrql_query": {
                    "Type": "List",
                    "Required": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "account_id": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The account id used for the NRQL query.",
                          "Computed": true
                        },
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The NRQL query."
                        }
                      }
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            },
            "widget_log_table": {
              "Type": "List",
              "Optional": true,
              "Description": "A log table widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "ignore_time_range": {
                    "Type": "Bool",
                    "Optional": true
                  },
                  "nrql_query": {
                    "Type": "List",
                    "Required": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "account_id": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The account id used for the NRQL query.",
                          "Computed": true
                        },
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The NRQL query."
                        }
                      }
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            },
            "widget_markdown": {
              "Type": "List",
              "Optional": true,
              "Description": "A markdown widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "ignore_time_range": {
                    "Type": "Bool",
                    "Optional": true
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "text": {
                    "Type": "String",
                    "Optional": true,
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            },
            "widget_pie": {
              "Type": "List",
              "Optional": true,
              "Description": "A pie widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "filter_current_dashboard": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Use this item to filter the current dashboard"
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "ignore_time_range": {
                    "Type": "Bool",
                    "Optional": true
                  },
                  "linked_entity_guids": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Related entities. Currently only supports Dashboard entities, but may allow other cases in the future.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "nrql_query": {
                    "Type": "List",
                    "Required": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "account_id": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The account id used for the NRQL query.",
                          "Computed": true
                        },
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The NRQL query."
                        }
                      }
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            },
            "widget_stacked_bar": {
              "Type": "List",
              "Optional": true,
              "Description": "A stacked bar widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "ignore_time_range": {
                    "Type": "Bool",
                    "Optional": true
                  },
                  "nrql_query": {
                    "Type": "List",
                    "Required": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "account_id": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The account id used for the NRQL query.",
                          "Computed": true
                        },
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The NRQL query."
                        }
                      }
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            },
            "widget_table": {
              "Type": "List",
              "Optional": true,
              "Description": "A table widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "filter_current_dashboard": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Use this item to filter the current dashboard"
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "ignore_time_range": {
                    "Type": "Bool",
                    "Optional": true
                  },
                  "linked_entity_guids": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Related entities. Currently only supports Dashboard entities, but may allow other cases in the future.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "nrql_query": {
                    "Type": "List",
                    "Required": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "account_id": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The account id used for the NRQL query.",
                          "Computed": true
                        },
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The NRQL query."
                        }
                      }
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "permalink": {
        "Type": "String",
        "Description": "The URL of the dashboard.",
        "Computed": true
      },
      "permissions": {
        "Type": "String",
        "Optional": true,
        "Description": "Determines who can see or edit the dashboard. Valid values are private, public_read_only, public_read_write. Defaults to public_read_only.",
        "Default": {
          "Type": "string",
          "Value": "public_read_only"
        }
      }
    },
    "newrelic_one_dashboard_raw": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The New Relic account ID where you want to create the dashboard.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The dashboard's description."
      },
      "guid": {
        "Type": "String",
        "Description": "The unique entity identifier of the dashboard in New Relic.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The dashboard's name."
      },
      "page": {
        "Type": "List",
        "Required": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "description": {
              "Type": "String",
              "Optional": true,
              "Description": "The dashboard page's description."
            },
            "guid": {
              "Type": "String",
              "Description": "The unique entity identifier of the dashboard page in New Relic.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The dashboard page's name."
            },
            "widget": {
              "Type": "List",
              "Optional": true,
              "Description": "A generic widget configuration. Visualization id is required.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "configuration": {
                    "Type": "String",
                    "Required": true,
                    "Description": "The configuration of the widget."
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "linked_entity_guids": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "(Optional) Related entity GUIDs. Currently only supports Dashboard entity GUIDs.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "visualization_id": {
                    "Type": "String",
                    "Required": true,
                    "Description": "The visualization ID of the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "permalink": {
        "Type": "String",
        "Description": "The URL of the dashboard.",
        "Computed": true
      },
      "permissions": {
        "Type": "String",
        "Optional": true,
        "Description": "Determines who can see or edit the dashboard. Valid values are private, public_read_only, public_read_write. Defaults to public_read_only.",
        "Default": {
          "Type": "string",
          "Value": "public_read_only"
        }
      }
    },
    "newrelic_service_level": {
      "description": {
        "Type": "String",
        "Optional": true
      },
      "events": {
        "Type": "List",
        "Required": true,
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "account_id": {
              "Type": "Int",
              "Required": true
            },
            "bad_events": {
              "Type": "List",
              "Optional": true,
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "from": {
                    "Type": "String",
                    "Required": true
                  },
                  "where": {
                    "Type": "String",
                    "Optional": true
                  }
                }
              }
            },
            "good_events": {
              "Type": "List",
              "Optional": true,
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "from": {
                    "Type": "String",
                    "Required": true
                  },
                  "where": {
                    "Type": "String",
                    "Optional": true
                  }
                }
              }
            },
            "valid_events": {
              "Type": "List",
              "Required": true,
              "MaxItems": 1,
              "MinItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "from": {
                    "Type": "String",
                    "Required": true
                  },
                  "where": {
                    "Type": "String",
                    "Optional": true
                  }
                }
              }
            }
          }
        }
      },
      "guid": {
        "Type": "String",
        "Required": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "objective": {
        "Type": "Set",
        "Required": true,
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "description": {
              "Type": "String",
              "Optional": true
            },
            "name": {
              "Type": "String",
              "Optional": true
            },
            "target": {
              "Type": "Float",
              "Required": true
            },
            "time_window": {
              "Type": "List",
              "Required": true,
              "MaxItems": 1,
              "MinItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "rolling": {
                    "Type": "List",
                    "Required": true,
                    "MaxItems": 1,
                    "MinItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "count": {
                          "Type": "Int",
                          "Required": true
                        },
                        "unit": {
                          "Type": "String",
                          "Required": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "sli_guid": {
        "Type": "String",
        "Computed": true
      },
      "sli_id": {
        "Type": "String",
        "Computed": true
      }
    },
    "newrelic_synthetics_alert_condition": {
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Set whether to enable the alert condition. Defaults to true.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "monitor_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the Synthetics monitor to be referenced in the alert condition.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The title of this condition."
      },
      "policy_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The ID of the policy where this condition should be used."
      },
      "runbook_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Runbook URL to display in notifications."
      }
    },
    "newrelic_synthetics_broken_links_monitor": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "ID of the newrelic account.",
        "Computed": true
      },
      "guid": {
        "Type": "String",
        "Description": "The unique entity identifier of the monitor in New Relic.",
        "Computed": true
      },
      "locations_private": {
        "Type": "Set",
        "Optional": true,
        "Description": "List private location GUIDs for which the monitor will run.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "locations_public": {
        "Type": "Set",
        "Optional": true,
        "Description": "Publicly available location names in which the monitor will run.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The title of this monitor."
      },
      "period": {
        "Type": "String",
        "Required": true,
        "Description": "The interval at which this monitor should run. Valid values are EVERY_MINUTE, EVERY_5_MINUTES, EVERY_10_MINUTES, EVERY_15_MINUTES, EVERY_30_MINUTES, EVERY_HOUR, EVERY_6_HOURS, EVERY_12_HOURS, or EVERY_DAY."
      },
      "status": {
        "Type": "String",
        "Required": true,
        "Description": "The monitor status (i.e. ENABLED, MUTED, DISABLED)."
      },
      "tag": {
        "Type": "Set",
        "Optional": true,
        "Description": "The tags that will be associated with the monitor.",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the tag key"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "Values associated with the tag key",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "uri": {
        "Type": "String",
        "Required": true,
        "Description": "The URI the monitor runs against."
      }
    },
    "newrelic_synthetics_cert_check_monitor": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "ID of the newrelic account",
        "Computed": true
      },
      "certificate_expiration": {
        "Type": "Int",
        "Required": true
      },
      "domain": {
        "Type": "String",
        "Required": true
      },
      "locations_private": {
        "Type": "Set",
        "Optional": true,
        "Description": "The locations in which this monitor should be run.",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "locations_public": {
        "Type": "Set",
        "Optional": true,
        "Description": "The locations in which this monitor should be run.",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "name of the cert check monitor"
      },
      "period": {
        "Type": "String",
        "Required": true,
        "Description": "The interval at which this monitor should run. Valid values are EVERY_MINUTE, EVERY_5_MINUTES, EVERY_10_MINUTES, EVERY_15_MINUTES, EVERY_30_MINUTES, EVERY_HOUR, EVERY_6_HOURS, EVERY_12_HOURS, or EVERY_DAY."
      },
      "status": {
        "Type": "String",
        "Required": true,
        "Description": "The monitor status (i.e. ENABLED, MUTED, DISABLED)."
      },
      "tag": {
        "Type": "Set",
        "Optional": true,
        "Description": "The tags that will be associated with the monitor",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the tag key"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "Values associated with the tag key",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      }
    },
    "newrelic_synthetics_monitor": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "ID of the newrelic account",
        "Computed": true
      },
      "bypass_head_request": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Bypass HEAD request."
      },
      "custom_header": {
        "Type": "Set",
        "Optional": true,
        "Description": "Custom headers to use in monitor job",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Header name"
            },
            "value": {
              "Type": "String",
              "Optional": true,
              "Description": "Header value"
            }
          }
        }
      },
      "enable_screenshot_on_failure_and_script": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Capture a screenshot during job execution"
      },
      "locations_private": {
        "Type": "Set",
        "Optional": true,
        "Description": "The locations in which this monitor should be run.",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "locations_public": {
        "Type": "Set",
        "Optional": true,
        "Description": "The locations in which this monitor should be run.",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The title of this monitor."
      },
      "period": {
        "Type": "String",
        "Optional": true,
        "Description": "The interval at which this monitor should run. Valid values are EVERY_MINUTE, EVERY_5_MINUTES, EVERY_10_MINUTES, EVERY_15_MINUTES, EVERY_30_MINUTES, EVERY_HOUR, EVERY_6_HOURS, EVERY_12_HOURS, or EVERY_DAY.",
        "Computed": true
      },
      "runtime_type": {
        "Type": "String",
        "Optional": true,
        "Description": "The runtime type that the monitor will run"
      },
      "runtime_type_version": {
        "Type": "String",
        "Optional": true,
        "Description": "The specific version of the runtime type selected"
      },
      "script_language": {
        "Type": "String",
        "Optional": true,
        "Description": "The programing language that should execute the script"
      },
      "status": {
        "Type": "String",
        "Required": true,
        "Description": "The monitor status (i.e. ENABLED, MUTED, DISABLED)."
      },
      "tag": {
        "Type": "Set",
        "Optional": true,
        "Description": "The tags that will be associated with the monitor",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the tag key"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "Values associated with the tag key",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "treat_redirect_as_failure": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Fail the monitor check if redirected."
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The monitor type. Valid values are SIMPLE AND BROWSER."
      },
      "uri": {
        "Type": "String",
        "Optional": true,
        "Description": "The URI for the monitor to hit."
      },
      "validation_string": {
        "Type": "String",
        "Optional": true,
        "Description": "The string to validate against in the response."
      },
      "verify_ssl": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Verify SSL.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      }
    },
    "newrelic_synthetics_multilocation_alert_condition": {
      "critical": {
        "Type": "List",
        "Required": true,
        "Description": "A condition term with priority set to critical.",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "threshold": {
              "Type": "Int",
              "Required": true,
              "Description": "The minimum number of monitor locations that must be concurrently failing before a violation is opened."
            }
          }
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Set whether to enable the alert condition. Defaults to true.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "entities": {
        "Type": "List",
        "Required": true,
        "Description": "The GUIDs of the Synthetics monitors to alert on.",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The title of this condition."
      },
      "policy_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The ID of the policy where this condition will be used."
      },
      "runbook_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Runbook URL to display in notifications."
      },
      "violation_time_limit_seconds": {
        "Type": "Int",
        "Required": true,
        "Description": "The maximum number of seconds a violation can remain open before being closed by the system.  Must be one of: 0, 3600, 7200, 14400, 28800, 43200, 86400"
      },
      "warning": {
        "Type": "List",
        "Optional": true,
        "Description": "A condition term with priority set to warning.",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "threshold": {
              "Type": "Int",
              "Required": true,
              "Description": "The minimum number of monitor locations that must be concurrently failing before a violation is opened."
            }
          }
        }
      }
    },
    "newrelic_synthetics_private_location": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The ID of the account in New Relic.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Required": true,
        "Description": "The private location description."
      },
      "domain_id": {
        "Type": "String",
        "Description": "The private location globally unique identifier.",
        "Computed": true
      },
      "guid": {
        "Type": "String",
        "Description": "The guid of the entity to tag.",
        "Computed": true
      },
      "key": {
        "Type": "String",
        "Description": "The private locations key.",
        "Computed": true
      },
      "location_id": {
        "Type": "String",
        "Description": "An alternate identifier based on name.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the private location."
      },
      "verified_script_execution": {
        "Type": "Bool",
        "Optional": true,
        "Description": "The private location requires a password to edit if value is true.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      }
    },
    "newrelic_synthetics_script_monitor": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "ID of the newrelic account.",
        "Computed": true
      },
      "enable_screenshot_on_failure_and_script": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Capture a screenshot during job execution."
      },
      "guid": {
        "Type": "String",
        "Description": "The unique entity identifier of the monitor in New Relic.",
        "Computed": true
      },
      "location_private": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "guid": {
              "Type": "String",
              "Required": true,
              "Description": "The unique identifier for the Synthetics private location in New Relic."
            },
            "vse_password": {
              "Type": "String",
              "Optional": true,
              "Description": "The location's Verified Script Execution password (Only necessary if Verified Script Execution is enabled for the location)."
            }
          }
        }
      },
      "locations_public": {
        "Type": "Set",
        "Optional": true,
        "Description": "The public location(s) that the monitor will run jobs from.",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The title of this monitor."
      },
      "period": {
        "Type": "String",
        "Required": true,
        "Description": "The interval at which this monitor should run. Valid values are EVERY_MINUTE, EVERY_5_MINUTES, EVERY_10_MINUTES, EVERY_15_MINUTES, EVERY_30_MINUTES, EVERY_HOUR, EVERY_6_HOURS, EVERY_12_HOURS, or EVERY_DAY."
      },
      "runtime_type": {
        "Type": "String",
        "Optional": true,
        "Description": "The runtime type that the monitor will run."
      },
      "runtime_type_version": {
        "Type": "String",
        "Optional": true,
        "Description": "The specific semver version of the runtime type."
      },
      "script": {
        "Type": "String",
        "Optional": true,
        "Description": "The script that the monitor runs."
      },
      "script_language": {
        "Type": "String",
        "Optional": true,
        "Description": "The programing language that should execute the script."
      },
      "status": {
        "Type": "String",
        "Required": true,
        "Description": "The monitor status (i.e. ENABLED, MUTED, DISABLED)."
      },
      "tag": {
        "Type": "Set",
        "Optional": true,
        "Description": "The tags that will be associated with the monitor.",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the tag key"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "Values associated with the tag key",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The monitor type. Valid values are SCRIPT_BROWSER, and SCRIPT_API."
      }
    },
    "newrelic_synthetics_secure_credential": {
      "__timeouts__": [
        "read"
      ],
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The New Relic account ID where you want to create the secure credential.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The secure credential's description."
      },
      "key": {
        "Type": "String",
        "Required": true,
        "Description": "The secure credential's key name. Regardless of the case used in the configuration, the provider will provide an upcased key to the underlying API."
      },
      "last_updated": {
        "Type": "String",
        "Optional": true,
        "Description": "The time the secure credential was last updated.",
        "Computed": true
      },
      "value": {
        "Type": "String",
        "Required": true,
        "Description": "The secure credential's value."
      }
    },
    "newrelic_synthetics_step_monitor": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "ID of the newrelic account.",
        "Computed": true
      },
      "enable_screenshot_on_failure_and_script": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Capture a screenshot during job execution."
      },
      "guid": {
        "Type": "String",
        "Description": "The unique entity identifier of the monitor in New Relic.",
        "Computed": true
      },
      "location_private": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "guid": {
              "Type": "String",
              "Required": true,
              "Description": "The unique identifier for the Synthetics private location in New Relic."
            },
            "vse_password": {
              "Type": "String",
              "Optional": true,
              "Description": "The location's Verified Script Execution password (Only necessary if Verified Script Execution is enabled for the location)."
            }
          }
        }
      },
      "locations_public": {
        "Type": "Set",
        "Optional": true,
        "Description": "The public location(s) that the monitor will run jobs from.",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The title of this monitor."
      },
      "period": {
        "Type": "String",
        "Required": true,
        "Description": "The interval at which this monitor should run. Valid values are EVERY_MINUTE, EVERY_5_MINUTES, EVERY_10_MINUTES, EVERY_15_MINUTES, EVERY_30_MINUTES, EVERY_HOUR, EVERY_6_HOURS, EVERY_12_HOURS, or EVERY_DAY."
      },
      "status": {
        "Type": "String",
        "Required": true,
        "Description": "The monitor status (i.e. ENABLED, MUTED, DISABLED)."
      },
      "steps": {
        "Type": "List",
        "Required": true,
        "Description": "The steps that make up the script the monitor will run",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ordinal": {
              "Type": "Int",
              "Required": true,
              "Description": "The position of the step within the script ranging from 0-100"
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "The type of step to be added to the script."
            },
            "values": {
              "Type": "List",
              "Optional": true,
              "Description": "The metadata values related to the check the step performs.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "tag": {
        "Type": "Set",
        "Optional": true,
        "Description": "The tags that will be associated with the monitor.",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the tag key"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "Values associated with the tag key",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      }
    },
    "newrelic_workflow": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The account id of the workflow."
      },
      "destination": {
        "Type": "Set",
        "Required": true,
        "Description": "Workflow's destination configuration.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "channel_id": {
              "Type": "String",
              "Required": true,
              "Description": "(Required) Destination's channel id."
            },
            "name": {
              "Type": "String",
              "Description": "(Required) Destination's name.",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "(Required) The type of the destination. One of: (EMAIL, EVENT_BRIDGE, PAGERDUTY_ACCOUNT_INTEGRATION, PAGERDUTY_SERVICE_INTEGRATION, SERVICE_NOW, WEBHOOK, MOBILE_PUSH, SLACK, JIRA).",
              "Computed": true
            }
          }
        }
      },
      "destinations_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether the destinations are enabled.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether the workflow is enabled.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "enrichments": {
        "Type": "Set",
        "Optional": true,
        "Description": "Enrichments can give additional context on alert notifications by adding NRQL query results to them.",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "nrql": {
              "Type": "List",
              "Required": true,
              "Description": "(Required) Nrql type Enrichments.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "account_id": {
                    "Type": "Int",
                    "Description": "The account id of the enrichment.",
                    "Computed": true
                  },
                  "configuration": {
                    "Type": "List",
                    "Required": true,
                    "Description": "A set of key-value pairs to represent a enrichment configuration.",
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "enrichment's NRQL query"
                        }
                      }
                    }
                  },
                  "enrichment_id": {
                    "Type": "String",
                    "Description": "Enrichment's id.",
                    "Computed": true
                  },
                  "name": {
                    "Type": "String",
                    "Required": true,
                    "Description": "(Required) Enrichment's name."
                  },
                  "type": {
                    "Type": "String",
                    "Description": "The type of the enrichment. One of: (NRQL).",
                    "Computed": true
                  }
                }
              }
            }
          }
        }
      },
      "enrichments_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether the enrichments are enabled.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "issues_filter": {
        "Type": "Set",
        "Required": true,
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "filter_id": {
              "Type": "String",
              "Description": "filter id.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "(Required) Filter's name."
            },
            "predicate": {
              "Type": "List",
              "Optional": true,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "attribute": {
                    "Type": "String",
                    "Required": true,
                    "Description": "(Required) predicate's attribute."
                  },
                  "operator": {
                    "Type": "String",
                    "Required": true,
                    "Description": "The type of the operator. One of: (CONTAINS, DOES_NOT_CONTAIN, DOES_NOT_EQUAL, DOES_NOT_EXACTLY_MATCH, ENDS_WITH, EQUAL, EXACTLY_MATCHES, GREATER_OR_EQUAL, GREATER_THAN, IS, IS_NOT, LESS_OR_EQUAL, LESS_THAN, STARTS_WITH)."
                  },
                  "values": {
                    "Type": "List",
                    "Required": true,
                    "Description": "List of predicate values.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "(Required) The type of the filter. One of: (FILTER, VIEW)."
            }
          }
        }
      },
      "last_run": {
        "Type": "String",
        "Description": "The last time notification was sent for this workflow.",
        "Computed": true
      },
      "muting_rules_handling": {
        "Type": "String",
        "Required": true,
        "Description": "The type of the muting rule handling. One of: (NOTIFY_ALL_ISSUES, DONT_NOTIFY_FULLY_MUTED_ISSUES, DONT_NOTIFY_FULLY_OR_PARTIALLY_MUTED_ISSUES)."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "(Required) The name of the workflow."
      },
      "workflow_id": {
        "Type": "String",
        "Description": "The id of the workflow.",
        "Computed": true
      }
    },
    "newrelic_workload": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The New Relic account ID where you want to create the workload.",
        "Computed": true
      },
      "composite_entity_search_query": {
        "Type": "String",
        "Description": "The composite query used to compose a dynamic workload.",
        "Computed": true
      },
      "entity_guids": {
        "Type": "Set",
        "Optional": true,
        "Description": "A list of entity GUIDs manually assigned to this workload.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "entity_search_query": {
        "Type": "Set",
        "Optional": true,
        "Description": "A list of search queries that define a dynamic workload.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "query": {
              "Type": "String",
              "Required": true,
              "Description": "The query."
            }
          }
        }
      },
      "guid": {
        "Type": "String",
        "Description": "The unique entity identifier of the workload in New Relic.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The workload's name."
      },
      "permalink": {
        "Type": "String",
        "Description": "The URL of the workload.",
        "Computed": true
      },
      "scope_account_ids": {
        "Type": "Set",
        "Optional": true,
        "Description": "A list of account IDs that will be used to get entities from.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "workload_id": {
        "Type": "Int",
        "Description": "The unique entity identifier of the workload.",
        "Computed": true
      }
    }
  },
  "data-sources": {
    "newrelic_account": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The ID of the account in New Relic."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the account in New Relic."
      },
      "scope": {
        "Type": "String",
        "Optional": true,
        "Description": "The scope of the account in New Relic.  Valid values are \"global\" and \"in_region\".  Defaults to \"in_region\".",
        "Default": {
          "Type": "string",
          "Value": "IN_REGION"
        }
      }
    },
    "newrelic_alert_channel": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The New Relic account ID where you want to retrieve the alert channel.",
        "Computed": true
      },
      "config": {
        "Type": "List",
        "Description": "Alert channel configuration.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "api_key": {
              "Type": "String",
              "Optional": true
            },
            "auth_password": {
              "Type": "String",
              "Optional": true
            },
            "auth_type": {
              "Type": "String",
              "Optional": true
            },
            "auth_username": {
              "Type": "String",
              "Optional": true
            },
            "base_url": {
              "Type": "String",
              "Optional": true
            },
            "channel": {
              "Type": "String",
              "Optional": true
            },
            "headers": {
              "Type": "Map",
              "Optional": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "include_json_attachment": {
              "Type": "String",
              "Optional": true
            },
            "key": {
              "Type": "String",
              "Optional": true
            },
            "payload": {
              "Type": "Map",
              "Optional": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "payload_string": {
              "Type": "String",
              "Optional": true
            },
            "payload_type": {
              "Type": "String",
              "Optional": true
            },
            "recipients": {
              "Type": "String",
              "Optional": true
            },
            "region": {
              "Type": "String",
              "Optional": true
            },
            "route_key": {
              "Type": "String",
              "Optional": true
            },
            "service_key": {
              "Type": "String",
              "Optional": true
            },
            "tags": {
              "Type": "String",
              "Optional": true
            },
            "teams": {
              "Type": "String",
              "Optional": true
            },
            "url": {
              "Type": "String",
              "Optional": true
            },
            "user_id": {
              "Type": "String",
              "Optional": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the alert channel in New Relic."
      },
      "policy_ids": {
        "Type": "List",
        "Description": "A list of policy IDs associated with the alert channel.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "type": {
        "Type": "String",
        "Description": "The type of channel. One of: (pagerduty, slack, user, victorops, webhook, email, opsgenie).",
        "Computed": true
      }
    },
    "newrelic_alert_policy": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The New Relic account ID to operate on.",
        "Computed": true
      },
      "created_at": {
        "Type": "String",
        "Description": "The time the policy was created.",
        "Computed": true
      },
      "incident_preference": {
        "Type": "String",
        "Optional": true,
        "Description": "The rollup strategy for the policy. Options include: `PER_POLICY`, `PER_CONDITION`, or `PER_CONDITION_AND_TARGET`. The default is `PER_POLICY`."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the alert policy in New Relic."
      },
      "updated_at": {
        "Type": "String",
        "Description": "The time the policy was last updated.",
        "Computed": true
      }
    },
    "newrelic_application": {
      "host_ids": {
        "Type": "List",
        "Description": "A list of host IDs associated with the application.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "instance_ids": {
        "Type": "List",
        "Description": "A list of instance IDs associated with the application.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the application in New Relic."
      }
    },
    "newrelic_cloud_account": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The ID of the New Relic account."
      },
      "cloud_provider": {
        "Type": "String",
        "Required": true,
        "Description": "The cloud provider of the account, e.g. aws, gcp, azure"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the cloud account."
      }
    },
    "newrelic_entity": {
      "account_id": {
        "Type": "Int",
        "Description": "The New Relic account ID associated with this entity.",
        "Computed": true
      },
      "application_id": {
        "Type": "Int",
        "Description": "The domain-specific ID of the entity (only returned for APM and Browser applications).",
        "Computed": true
      },
      "domain": {
        "Type": "String",
        "Optional": true,
        "Description": "The entity's domain. Valid values are APM, BROWSER, INFRA, MOBILE, SYNTH, and VIZ. If not specified, all domains are searched.",
        "Computed": true
      },
      "guid": {
        "Type": "String",
        "Description": "A unique entity identifier.",
        "Computed": true
      },
      "ignore_case": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Ignore case when searching the entity name.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the entity in New Relic One.  The first entity matching this name for the given search parameters will be returned."
      },
      "serving_apm_application_id": {
        "Type": "Int",
        "Description": "The browser-specific ID of the backing APM entity. (only returned for Browser applications)",
        "Computed": true
      },
      "tag": {
        "Type": "List",
        "Optional": true,
        "Description": "A tag applied to the entity.",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "The tag key."
            },
            "value": {
              "Type": "String",
              "Required": true,
              "Description": "The tag value."
            }
          }
        }
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "The entity's type. Valid values are APPLICATION, DASHBOARD, HOST, MONITOR, and WORKLOAD.",
        "Computed": true
      }
    },
    "newrelic_key_transaction": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the key transaction in New Relic."
      }
    },
    "newrelic_synthetics_private_location": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the Synthetics monitor private location."
      }
    },
    "newrelic_synthetics_secure_credential": {
      "description": {
        "Type": "String",
        "Description": "The secure credential's description.",
        "Computed": true
      },
      "key": {
        "Type": "String",
        "Required": true,
        "Description": "The secure credential's key name. Regardless of the case used in the configuration, the provider will provide an upcased key to the underlying API."
      },
      "last_updated": {
        "Type": "String",
        "Description": "The time the secure credential was last updated.",
        "Computed": true
      }
    }
  }
}