{
  ".schema_version": "2",
  ".sdk_type": "terraform-plugin-sdk-v2",
  "name": "opennebula",
  "type": "provider",
  "version": "v1.0.1-rc1",
  "provider": {
    "default_tags": {
      "Type": "Set",
      "Optional": true,
      "Description": "Add default tags to the resources",
      "IsBlock": true,
      "ConfigImplicitMode": "Block",
      "Elem": {
        "Type": "SchemaInfo",
        "Info": {
          "tags": {
            "Type": "Map",
            "Optional": true,
            "Description": "Default tags to apply",
            "ConfigImplicitMode": "Attr",
            "Elem": {
              "Type": "SchemaElements",
              "ElementsType": "String"
            }
          }
        }
      }
    },
    "endpoint": {
      "Type": "String",
      "Required": true,
      "Description": "The URL to your public or private OpenNebula",
      "DefaultFunc": "ENV(OPENNEBULA_ENDPOINT)"
    },
    "flow_endpoint": {
      "Type": "String",
      "Optional": true,
      "Description": "The URL to your public or private OpenNebula Flow server",
      "DefaultFunc": "ENV(OPENNEBULA_FLOW_ENDPOINT)"
    },
    "insecure": {
      "Type": "Bool",
      "Optional": true,
      "Description": "Disable TLS validation",
      "DefaultFunc": "ENV(OPENNEBULA_INSECURE)"
    },
    "password": {
      "Type": "String",
      "Required": true,
      "Description": "The password for the user",
      "DefaultFunc": "ENV(OPENNEBULA_PASSWORD)"
    },
    "username": {
      "Type": "String",
      "Required": true,
      "Description": "The ID of the user to identify as",
      "DefaultFunc": "ENV(OPENNEBULA_USERNAME)"
    }
  },
  "resources": {
    "opennebula_acl": {
      "resource": {
        "Type": "String",
        "Required": true,
        "Description": "Resource component of the new rule. ACL String Syntax is expected."
      },
      "rights": {
        "Type": "String",
        "Required": true,
        "Description": "Rights component of the new rule. ACL String Syntax is expected."
      },
      "user": {
        "Type": "String",
        "Required": true,
        "Description": "User component of the new rule. ACL String Syntax is expected."
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "Zone component of the new rule. ACL String Syntax is expected."
      }
    },
    "opennebula_group": {
      "admins": {
        "Type": "List",
        "Optional": true,
        "Description": "List of Admin user IDs part of the group",
        "Computed": true,
        "Deprecated": "use opennebula_group_admins resource instead.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "default_tags": {
        "Type": "Map",
        "Description": "Default tags defined in the provider configuration",
        "Computed": true
      },
      "delete_on_destruction": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Flag to delete group on destruction, by default it is set to true",
        "Deprecated": "use Terraform lifcycle Meta-Argument instead.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the Group"
      },
      "quotas": {
        "Type": "Set",
        "Optional": true,
        "Description": "Define user quota",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "datastore_quotas": {
              "Type": "List",
              "Optional": true,
              "Description": "Datastore quotas",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "id": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "Datastore ID"
                  },
                  "images": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum number of Images allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "size": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum size in MB allowed on the datastore (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  }
                }
              }
            },
            "image_quotas": {
              "Type": "List",
              "Optional": true,
              "Description": "Image quotas",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "id": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "Image ID"
                  },
                  "running_vms": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum number of Running VMs allowed for this image (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  }
                }
              }
            },
            "network_quotas": {
              "Type": "List",
              "Optional": true,
              "Description": "Network quotas",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "id": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "Network ID"
                  },
                  "leases": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum number of Leases allowed for this network (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  }
                }
              }
            },
            "vm_quotas": {
              "Type": "List",
              "Optional": true,
              "Description": "VM quotas",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "cpu": {
                    "Type": "Float",
                    "Optional": true,
                    "Description": "Maximum number of CPU allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "memory": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum Memory (MB) allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "running_cpu": {
                    "Type": "Float",
                    "Optional": true,
                    "Description": "Maximum number of 'running' CPUs allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "running_memory": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "'Running' Memory (MB) allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "running_vms": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum number of Running VMs allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "system_disk_size": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum System Disk size (MB) allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "vms": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum number of VMs allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "sunstone": {
        "Type": "Set",
        "Optional": true,
        "Description": "Allow users and group admins to access specific views",
        "ConflictsWith": [
          "template"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "default_view": {
              "Type": "String",
              "Optional": true,
              "Description": "Default Sunstone view for regular users"
            },
            "group_admin_default_view": {
              "Type": "String",
              "Optional": true,
              "Description": "Default Sunstone view for group admin users"
            },
            "group_admin_views": {
              "Type": "String",
              "Optional": true,
              "Description": "List of available views for the group admins"
            },
            "views": {
              "Type": "String",
              "Optional": true,
              "Description": "List of available views for regular users"
            }
          }
        }
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Add custom tags to the resource",
        "ConflictsWith": [
          "template"
        ],
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags_all": {
        "Type": "Map",
        "Description": "Result of the applied default_tags and resource tags",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "template": {
        "Type": "String",
        "Optional": true,
        "Description": "Group template content, in OpenNebula XML or String format",
        "ConflictsWith": [
          "sunstone",
          "tags"
        ],
        "Deprecated": "use other schema sections"
      },
      "users": {
        "Type": "List",
        "Optional": true,
        "Description": "List of user IDs part of the group",
        "Deprecated": "use user resource for group membership instead.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      }
    },
    "opennebula_group_admins": {
      "group_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Name of the group"
      },
      "users_ids": {
        "Type": "Set",
        "Required": true,
        "Description": "List of user IDs admins of the group",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      }
    },
    "opennebula_image": {
      "__timeouts__": [
        "create",
        "delete"
      ],
      "clone_from_image": {
        "Type": "String",
        "Optional": true,
        "Description": "ID or name of the Image to be cloned from",
        "ConflictsWith": [
          "path",
          "size",
          "type"
        ]
      },
      "datastore_id": {
        "Type": "Int",
        "Required": true,
        "Description": "ID of the datastore where Image will be stored"
      },
      "default_tags": {
        "Type": "Map",
        "Description": "Default tags defined in the provider configuration",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description of the Image, in OpenNebula's XML or String format"
      },
      "dev_prefix": {
        "Type": "String",
        "Optional": true,
        "Description": "Device prefix, normally one of: hd, sd, vd",
        "Computed": true
      },
      "driver": {
        "Type": "String",
        "Optional": true,
        "Description": "Driver to use, normally 'raw' or 'qcow2'",
        "Computed": true
      },
      "format": {
        "Type": "String",
        "Optional": true,
        "Description": "Image format, normally 'raw' or 'qcow2'",
        "Computed": true
      },
      "gid": {
        "Type": "Int",
        "Description": "ID of the group that will own the Image",
        "Computed": true
      },
      "gname": {
        "Type": "String",
        "Description": "Name of the group that will own the Image",
        "Computed": true
      },
      "group": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the Group that onws the Image, If empty, it uses caller group"
      },
      "lock": {
        "Type": "String",
        "Optional": true,
        "Description": "Lock level of the new resource: USE, MANAGE, ADMIN, ALL, UNLOCK"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the Image"
      },
      "path": {
        "Type": "String",
        "Optional": true,
        "Description": "Path to the new image (local path on the OpenNebula server or URL)",
        "Computed": true,
        "ConflictsWith": [
          "clone_from_image"
        ]
      },
      "permissions": {
        "Type": "String",
        "Optional": true,
        "Description": "Permissions for the Image (in Unix format, owner-group-other, use-manage-admin)",
        "Computed": true
      },
      "persistent": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Flag which indicates if the Image has to be persistent",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "size": {
        "Type": "Int",
        "Optional": true,
        "Description": "Size of the new image in MB",
        "Computed": true,
        "ConflictsWith": [
          "clone_from_image"
        ]
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Add custom tags to the resource",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags_all": {
        "Type": "Map",
        "Description": "Result of the applied default_tags and resource tags",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "target": {
        "Type": "String",
        "Optional": true,
        "Description": "Device target, example: vda",
        "Computed": true
      },
      "timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "Timeout (in minutes) within resource should be available. Default: 10 minutes",
        "Deprecated": "Native terraform timeout facilities should be used instead",
        "Default": {
          "Type": "int",
          "Value": "20"
        }
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "Type of the new Image: OS, CDROM, DATABLOCK, KERNEL, RAMDISK, CONTEXT",
        "Computed": true,
        "ConflictsWith": [
          "clone_from_image"
        ]
      },
      "uid": {
        "Type": "Int",
        "Description": "ID of the user that will own the Image",
        "Computed": true
      },
      "uname": {
        "Type": "String",
        "Description": "Name of the user that will own the Image",
        "Computed": true
      }
    },
    "opennebula_security_group": {
      "commit": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Should changes to the Security Group rules be commited to running Virtual Machines?",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "default_tags": {
        "Type": "Map",
        "Description": "Default tags defined in the provider configuration",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description of the Security Group Rule Set",
        "Computed": true
      },
      "gid": {
        "Type": "Int",
        "Description": "ID of the group that will own the Security Group",
        "Computed": true
      },
      "gname": {
        "Type": "String",
        "Description": "Name of the group that will own the Security Group",
        "Computed": true
      },
      "group": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the Group that onws the Security Group, If empty, it uses caller group",
        "ConflictsWith": [
          "gid"
        ]
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the Security Group"
      },
      "permissions": {
        "Type": "String",
        "Optional": true,
        "Description": "Permissions for the Security Group (in Unix format, owner-group-other, use-manage-admin)",
        "Computed": true
      },
      "rule": {
        "Type": "List",
        "Required": true,
        "Description": "List of rules to be in the Security Group",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "icmp_type": {
              "Type": "String",
              "Optional": true,
              "Description": "Type of ICMP traffic to apply to when 'protocol' is ICMP",
              "Computed": true
            },
            "ip": {
              "Type": "String",
              "Optional": true,
              "Description": "IP (or starting IP if used with 'size') to apply the rule to",
              "Computed": true
            },
            "network_id": {
              "Type": "String",
              "Optional": true,
              "Description": "VNET ID to be used as the source/destination IP addresses",
              "Computed": true
            },
            "protocol": {
              "Type": "String",
              "Required": true,
              "Description": "Protocol for the rule, must be one of: ALL, TCP, UDP, ICMP or IPSEC"
            },
            "range": {
              "Type": "String",
              "Optional": true,
              "Description": "Comma separated list of ports and port ranges",
              "Computed": true
            },
            "rule_type": {
              "Type": "String",
              "Required": true,
              "Description": "Direction of the traffic flow to allow, must be INBOUND or OUTBOUND"
            },
            "size": {
              "Type": "String",
              "Optional": true,
              "Description": "Number of IPs to apply the rule from, starting with 'ip'",
              "Computed": true
            }
          }
        }
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Add custom tags to the resource",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags_all": {
        "Type": "Map",
        "Description": "Result of the applied default_tags and resource tags",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "Int",
        "Description": "ID of the user that will own the Security Group",
        "Computed": true
      },
      "uname": {
        "Type": "String",
        "Description": "Name of the user that will own the Security Group",
        "Computed": true
      }
    },
    "opennebula_service": {
      "extra_template": {
        "Type": "String",
        "Optional": true,
        "Description": "Extra template information in json format to be added to the service template during instantiate."
      },
      "gid": {
        "Type": "Int",
        "Optional": true,
        "Description": "ID of the group that will own the Service",
        "Computed": true
      },
      "gname": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the group that will own the Service",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the Service",
        "Computed": true
      },
      "networks": {
        "Type": "Map",
        "Description": "Map with the service networks names as key and id as value",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "permissions": {
        "Type": "String",
        "Optional": true,
        "Description": "Permissions for the service (in Unix format, owner-group-other, use-manage-admin)",
        "Computed": true
      },
      "roles": {
        "Type": "List",
        "Description": "Map with the role dinamically generated information",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cardinality": {
              "Type": "Int",
              "Description": "Cardinality of the role",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Name of the Role",
              "Computed": true
            },
            "nodes": {
              "Type": "List",
              "Description": "List of role nodes",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            },
            "state": {
              "Type": "Int",
              "Description": "Current state of the role",
              "Computed": true
            }
          }
        }
      },
      "state": {
        "Type": "Int",
        "Description": "Current state of the Service",
        "Computed": true
      },
      "template_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Id of the Service template to use"
      },
      "uid": {
        "Type": "Int",
        "Optional": true,
        "Description": "ID of the user that will own the Service",
        "Computed": true
      },
      "uname": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the user that will own the Service",
        "Computed": true
      }
    },
    "opennebula_service_template": {
      "gid": {
        "Type": "Int",
        "Optional": true,
        "Description": "ID of the group that will own the Service Template",
        "Computed": true
      },
      "gname": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the group that will own the Service Template",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the Service Template",
        "Computed": true
      },
      "permissions": {
        "Type": "String",
        "Optional": true,
        "Description": "Permissions for the Service Template (in Unix format, owner-group-other, use-manage-admin)",
        "Computed": true
      },
      "template": {
        "Type": "String",
        "Required": true,
        "Description": "Service Template body in json format"
      },
      "uid": {
        "Type": "Int",
        "Optional": true,
        "Description": "ID of the user that will own the Service Template",
        "Computed": true
      },
      "uname": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the user that will own the Service Template",
        "Computed": true
      }
    },
    "opennebula_template": {
      "context": {
        "Type": "Map",
        "Optional": true,
        "Description": "Context variables"
      },
      "cpu": {
        "Type": "Float",
        "Optional": true,
        "Description": "Amount of CPU quota assigned to the virtual machine",
        "Computed": true
      },
      "cpumodel": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of CPU Model type for the Virtual Machine",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "model": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "default_tags": {
        "Type": "Map",
        "Description": "Default tags defined in the provider configuration",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "A description of the entity"
      },
      "disk": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of disks assigned to the Virtual Machine",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cache": {
              "Type": "String",
              "Optional": true
            },
            "dev_prefix": {
              "Type": "String",
              "Optional": true
            },
            "discard": {
              "Type": "String",
              "Optional": true
            },
            "driver": {
              "Type": "String",
              "Optional": true
            },
            "image_id": {
              "Type": "Int",
              "Optional": true,
              "Description": "Image Id  of the image to attach to the VM. Defaults to -1: no image attached.",
              "Default": {
                "Type": "int",
                "Value": "-1"
              }
            },
            "io": {
              "Type": "String",
              "Optional": true
            },
            "size": {
              "Type": "Int",
              "Optional": true
            },
            "target": {
              "Type": "String",
              "Optional": true
            },
            "volatile_format": {
              "Type": "String",
              "Optional": true,
              "Description": "Format of the volatile disk: raw or qcow2."
            },
            "volatile_type": {
              "Type": "String",
              "Optional": true,
              "Description": "Type of the volatile disk: swap or fs."
            }
          }
        }
      },
      "features": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of Features",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "acpi": {
              "Type": "String",
              "Optional": true,
              "Description": "Useful for power management, for example, with KVM guests it is required for graceful shutdown to work."
            },
            "apic": {
              "Type": "String",
              "Optional": true,
              "Description": "Enables the advanced programmable IRQ management. Useful for SMP machines."
            },
            "guest_agent": {
              "Type": "String",
              "Optional": true,
              "Description": "Enables the QEMU Guest Agent communication. This only creates the socket inside the VM, the Guest Agent itself must be installed and started in the VM."
            },
            "hyperv": {
              "Type": "String",
              "Optional": true,
              "Description": "Add hyperv extensions to the VM. The options can be configured in the driver configuration, HYPERV_OPTIONS."
            },
            "iothreads": {
              "Type": "String",
              "Optional": true,
              "Description": "Number of iothreads for virtio disks. By default threads will be assign to disk by round robin algorithm. Disk thread id can be forced by disk IOTHREAD attribute."
            },
            "localtime": {
              "Type": "String",
              "Optional": true,
              "Description": "The guest clock will be synchronized to the host’s configured timezone when booted. Useful for Windows VMs."
            },
            "pae": {
              "Type": "String",
              "Optional": true,
              "Description": "Physical address extension mode allows 32-bit guests to address more than 4 GB of memory."
            },
            "virtio_scsi_queues": {
              "Type": "String",
              "Optional": true,
              "Description": "Numer of vCPU queues for the virtio-scsi controller."
            }
          }
        }
      },
      "gid": {
        "Type": "Int",
        "Description": "ID of the group that will own the resource",
        "Computed": true
      },
      "gname": {
        "Type": "String",
        "Description": "Name of the group that will own the resource",
        "Computed": true
      },
      "graphics": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of graphics adapter assigned to the Virtual Machine",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "keymap": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "en-us"
              }
            },
            "listen": {
              "Type": "String",
              "Required": true
            },
            "port": {
              "Type": "String",
              "Optional": true,
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "group": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the Group that onws the resource, If empty, it uses caller group"
      },
      "lock": {
        "Type": "String",
        "Optional": true,
        "Description": "Lock level of the new resource: USE, MANAGE, ADMIN, ALL, UNLOCK"
      },
      "memory": {
        "Type": "Int",
        "Optional": true,
        "Description": "Amount of memory (RAM) in MB assigned to the virtual machine",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the template"
      },
      "nic": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of network adapter(s) assigned to the Virtual Machine",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip": {
              "Type": "String",
              "Optional": true
            },
            "mac": {
              "Type": "String",
              "Optional": true
            },
            "model": {
              "Type": "String",
              "Optional": true
            },
            "network": {
              "Type": "String",
              "Computed": true
            },
            "network_id": {
              "Type": "Int",
              "Required": true
            },
            "physical_device": {
              "Type": "String",
              "Optional": true
            },
            "security_groups": {
              "Type": "List",
              "Optional": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            },
            "virtio_queues": {
              "Type": "String",
              "Optional": true,
              "Description": "Only if model is virtio"
            }
          }
        }
      },
      "os": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of OS boot and type for the Virtual Machine",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "arch": {
              "Type": "String",
              "Required": true
            },
            "boot": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "permissions": {
        "Type": "String",
        "Optional": true,
        "Description": "Permissions for the resource (in Unix format, owner-group-other, use-manage-admin)",
        "Computed": true
      },
      "raw": {
        "Type": "List",
        "Optional": true,
        "Description": "Low-level hypervisor tuning",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "data": {
              "Type": "String",
              "Required": true,
              "Description": "Low-level data to pass to the hypervisor"
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the hypervisor: kvm, lxd, vmware"
            }
          }
        }
      },
      "reg_time": {
        "Type": "Int",
        "Description": "Registration time",
        "Computed": true
      },
      "sched_ds_requirements": {
        "Type": "String",
        "Optional": true,
        "Description": "Storage placement requirements to deploy the resource following specific rule"
      },
      "sched_requirements": {
        "Type": "String",
        "Optional": true,
        "Description": "Scheduling requirements to deploy the resource following specific rule"
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Add custom tags to the resource",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags_all": {
        "Type": "Map",
        "Description": "Result of the applied default_tags and resource tags",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "Int",
        "Description": "ID of the user that will own the resource",
        "Computed": true
      },
      "uname": {
        "Type": "String",
        "Description": "Name of the user that will own the resource",
        "Computed": true
      },
      "user_inputs": {
        "Type": "Map",
        "Optional": true,
        "Description": "Provides the template creator with the possibility to dynamically ask the user instantiating the template for dynamic values that must be defined."
      },
      "vcpu": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of virtual CPUs assigned to the virtual machine",
        "Computed": true
      },
      "vmgroup": {
        "Type": "List",
        "Optional": true,
        "Description": "Virtual Machine Group to associate with during VM creation only. If it changes, a New VM is created",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "role": {
              "Type": "String",
              "Required": true
            },
            "vmgroup_id": {
              "Type": "Int",
              "Required": true
            }
          }
        }
      }
    },
    "opennebula_user": {
      "auth_driver": {
        "Type": "String",
        "Optional": true,
        "Description": "Authentication driver. Select between: core, public, ssh, x509, ldap, server_cipher, server_x509 and custom. Defaults to 'core'.",
        "Default": {
          "Type": "string",
          "Value": "core"
        }
      },
      "default_tags": {
        "Type": "Map",
        "Description": "Default tags defined in the provider configuration",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of group IDs to add to the user",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the User"
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the User. Required for all `auth_driver` options excepted 'ldap'"
      },
      "primary_group": {
        "Type": "Int",
        "Optional": true,
        "Description": "Primary (Default) Group ID of the user. Defaults to 0",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "quotas": {
        "Type": "Set",
        "Optional": true,
        "Description": "Define user quota",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "datastore_quotas": {
              "Type": "List",
              "Optional": true,
              "Description": "Datastore quotas",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "id": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "Datastore ID"
                  },
                  "images": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum number of Images allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "size": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum size in MB allowed on the datastore (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  }
                }
              }
            },
            "image_quotas": {
              "Type": "List",
              "Optional": true,
              "Description": "Image quotas",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "id": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "Image ID"
                  },
                  "running_vms": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum number of Running VMs allowed for this image (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  }
                }
              }
            },
            "network_quotas": {
              "Type": "List",
              "Optional": true,
              "Description": "Network quotas",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "id": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "Network ID"
                  },
                  "leases": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum number of Leases allowed for this network (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  }
                }
              }
            },
            "vm_quotas": {
              "Type": "List",
              "Optional": true,
              "Description": "VM quotas",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "cpu": {
                    "Type": "Float",
                    "Optional": true,
                    "Description": "Maximum number of CPU allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "memory": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum Memory (MB) allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "running_cpu": {
                    "Type": "Float",
                    "Optional": true,
                    "Description": "Maximum number of 'running' CPUs allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "running_memory": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "'Running' Memory (MB) allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "running_vms": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum number of Running VMs allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "system_disk_size": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum System Disk size (MB) allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "vms": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum number of VMs allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Add custom tags to the resource",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags_all": {
        "Type": "Map",
        "Description": "Result of the applied default_tags and resource tags",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "opennebula_virtual_data_center": {
      "group_ids": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of Group IDs to be added into the VDC",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the VDC"
      },
      "zones": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of zones to add into the VDC",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cluster_ids": {
              "Type": "Set",
              "Optional": true,
              "Description": "List of cluster IDs from the Zone to add in the VDC",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            },
            "datastore_ids": {
              "Type": "Set",
              "Optional": true,
              "Description": "List of Datastore IDs from the Zone to add in the VDC",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            },
            "host_ids": {
              "Type": "Set",
              "Optional": true,
              "Description": "List of Host IDs from the Zone to add in the VDC",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            },
            "id": {
              "Type": "Int",
              "Optional": true,
              "Description": "Resources Zone ID (default: 0)",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "vnet_ids": {
              "Type": "Set",
              "Optional": true,
              "Description": "List of VNET IDs from the Zone to add in the VDC",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            }
          }
        }
      }
    },
    "opennebula_virtual_machine": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "context": {
        "Type": "Map",
        "Optional": true,
        "Description": "Context variables"
      },
      "cpu": {
        "Type": "Float",
        "Optional": true,
        "Description": "Amount of CPU quota assigned to the virtual machine",
        "Computed": true
      },
      "cpumodel": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of CPU Model type for the Virtual Machine",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "model": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "default_tags": {
        "Type": "Map",
        "Description": "Default tags defined in the provider configuration",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "A description of the entity"
      },
      "disk": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of disks assigned to the Virtual Machine",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cache": {
              "Type": "String",
              "Optional": true
            },
            "computed_cache": {
              "Type": "String",
              "Computed": true
            },
            "computed_dev_prefix": {
              "Type": "String",
              "Computed": true
            },
            "computed_discard": {
              "Type": "String",
              "Computed": true
            },
            "computed_driver": {
              "Type": "String",
              "Computed": true
            },
            "computed_io": {
              "Type": "String",
              "Computed": true
            },
            "computed_size": {
              "Type": "Int",
              "Computed": true
            },
            "computed_target": {
              "Type": "String",
              "Computed": true
            },
            "computed_volatile_format": {
              "Type": "String",
              "Computed": true
            },
            "dev_prefix": {
              "Type": "String",
              "Optional": true
            },
            "discard": {
              "Type": "String",
              "Optional": true
            },
            "disk_id": {
              "Type": "Int",
              "Computed": true
            },
            "driver": {
              "Type": "String",
              "Optional": true
            },
            "image_id": {
              "Type": "Int",
              "Optional": true,
              "Description": "Image Id  of the image to attach to the VM. Defaults to -1: no image attached.",
              "Default": {
                "Type": "int",
                "Value": "-1"
              }
            },
            "io": {
              "Type": "String",
              "Optional": true
            },
            "size": {
              "Type": "Int",
              "Optional": true
            },
            "target": {
              "Type": "String",
              "Optional": true
            },
            "volatile_format": {
              "Type": "String",
              "Optional": true,
              "Description": "Format of the volatile disk: raw or qcow2."
            },
            "volatile_type": {
              "Type": "String",
              "Optional": true,
              "Description": "Type of the volatile disk: swap or fs."
            }
          }
        }
      },
      "gid": {
        "Type": "Int",
        "Description": "ID of the group that will own the resource",
        "Computed": true
      },
      "gname": {
        "Type": "String",
        "Description": "Name of the group that will own the resource",
        "Computed": true
      },
      "graphics": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of graphics adapter assigned to the Virtual Machine",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "keymap": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "en-us"
              }
            },
            "listen": {
              "Type": "String",
              "Required": true
            },
            "port": {
              "Type": "String",
              "Optional": true,
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "group": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the Group that onws the resource, If empty, it uses caller group"
      },
      "hard_shutdown": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Immediately poweroff/terminate/reboot/undeploy the VM. (default: false)",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ip": {
        "Type": "String",
        "Description": "Primary IP address assigned by OpenNebula",
        "Computed": true
      },
      "keep_nic_order": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Force the provider to keep nics order at update."
      },
      "lcmstate": {
        "Type": "Int",
        "Description": "Current LCM state of the VM",
        "Computed": true
      },
      "lock": {
        "Type": "String",
        "Optional": true,
        "Description": "Lock level of the new resource: USE, MANAGE, ADMIN, ALL, UNLOCK"
      },
      "memory": {
        "Type": "Int",
        "Optional": true,
        "Description": "Amount of memory (RAM) in MB assigned to the virtual machine",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the VM. If empty, defaults to 'templatename-\u003cvmid\u003e'",
        "Computed": true
      },
      "nic": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of network adapter(s) assigned to the Virtual Machine",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "computed_ip": {
              "Type": "String",
              "Computed": true
            },
            "computed_mac": {
              "Type": "String",
              "Computed": true
            },
            "computed_model": {
              "Type": "String",
              "Computed": true
            },
            "computed_physical_device": {
              "Type": "String",
              "Computed": true
            },
            "computed_security_groups": {
              "Type": "List",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            },
            "computed_virtio_queues": {
              "Type": "String",
              "Computed": true
            },
            "ip": {
              "Type": "String",
              "Optional": true
            },
            "mac": {
              "Type": "String",
              "Optional": true
            },
            "model": {
              "Type": "String",
              "Optional": true
            },
            "network": {
              "Type": "String",
              "Computed": true
            },
            "network_id": {
              "Type": "Int",
              "Required": true
            },
            "nic_id": {
              "Type": "Int",
              "Computed": true
            },
            "physical_device": {
              "Type": "String",
              "Optional": true
            },
            "security_groups": {
              "Type": "List",
              "Optional": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            },
            "virtio_queues": {
              "Type": "String",
              "Optional": true,
              "Description": "Only if model is virtio"
            }
          }
        }
      },
      "on_disk_change": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "swap"
        }
      },
      "os": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of OS boot and type for the Virtual Machine",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "arch": {
              "Type": "String",
              "Required": true
            },
            "boot": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "pending": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Pending state of the VM during its creation, by default it is set to false",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "permissions": {
        "Type": "String",
        "Optional": true,
        "Description": "Permissions for the resource (in Unix format, owner-group-other, use-manage-admin)",
        "Computed": true
      },
      "sched_ds_requirements": {
        "Type": "String",
        "Optional": true,
        "Description": "Storage placement requirements to deploy the resource following specific rule"
      },
      "sched_requirements": {
        "Type": "String",
        "Optional": true,
        "Description": "Scheduling requirements to deploy the resource following specific rule"
      },
      "state": {
        "Type": "Int",
        "Description": "Current state of the VM",
        "Computed": true
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Add custom tags to the resource",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags_all": {
        "Type": "Map",
        "Description": "Result of the applied default_tags and resource tags",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "template_disk": {
        "Type": "List",
        "Description": "Disks assigned to the Virtual Machine via a template",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "computed_cache": {
              "Type": "String",
              "Computed": true
            },
            "computed_dev_prefix": {
              "Type": "String",
              "Computed": true
            },
            "computed_discard": {
              "Type": "String",
              "Computed": true
            },
            "computed_driver": {
              "Type": "String",
              "Computed": true
            },
            "computed_io": {
              "Type": "String",
              "Computed": true
            },
            "computed_size": {
              "Type": "Int",
              "Computed": true
            },
            "computed_target": {
              "Type": "String",
              "Computed": true
            },
            "computed_volatile_format": {
              "Type": "String",
              "Computed": true
            },
            "disk_id": {
              "Type": "Int",
              "Computed": true
            },
            "image_id": {
              "Type": "Int",
              "Computed": true
            }
          }
        }
      },
      "template_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "Id of the VM template to use. Defaults to -1: no template used.",
        "Default": {
          "Type": "int",
          "Value": "-1"
        }
      },
      "template_nic": {
        "Type": "List",
        "Description": "Network adapter(s) assigned to the Virtual Machine via a template",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "computed_ip": {
              "Type": "String",
              "Computed": true
            },
            "computed_mac": {
              "Type": "String",
              "Computed": true
            },
            "computed_model": {
              "Type": "String",
              "Computed": true
            },
            "computed_physical_device": {
              "Type": "String",
              "Computed": true
            },
            "computed_security_groups": {
              "Type": "List",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            },
            "computed_virtio_queues": {
              "Type": "String",
              "Computed": true
            },
            "network": {
              "Type": "String",
              "Computed": true
            },
            "network_id": {
              "Type": "Int",
              "Computed": true
            },
            "nic_id": {
              "Type": "Int",
              "Computed": true
            }
          }
        }
      },
      "template_tags": {
        "Type": "Map",
        "Description": "When template_id was set this keeps the template tags.",
        "Computed": true
      },
      "timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "Timeout (in minutes) within resource should be available. Default: 3 minutes",
        "Deprecated": "Native terraform timeout facilities should be used instead",
        "Default": {
          "Type": "int",
          "Value": "20"
        }
      },
      "uid": {
        "Type": "Int",
        "Description": "ID of the user that will own the resource",
        "Computed": true
      },
      "uname": {
        "Type": "String",
        "Description": "Name of the user that will own the resource",
        "Computed": true
      },
      "vcpu": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of virtual CPUs assigned to the virtual machine",
        "Computed": true
      },
      "vmgroup": {
        "Type": "List",
        "Optional": true,
        "Description": "Virtual Machine Group to associate with during VM creation only. If it changes, a New VM is created",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "role": {
              "Type": "String",
              "Required": true
            },
            "vmgroup_id": {
              "Type": "Int",
              "Required": true
            }
          }
        }
      }
    },
    "opennebula_virtual_machine_group": {
      "default_tags": {
        "Type": "Map",
        "Description": "Default tags defined in the provider configuration",
        "Computed": true
      },
      "gid": {
        "Type": "Int",
        "Description": "ID of the group that will own the template vm group",
        "Computed": true
      },
      "gname": {
        "Type": "String",
        "Description": "Name of the group that will own the template vm group",
        "Computed": true
      },
      "group": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the Group that onws the Template VM Group, If empty, it uses caller group"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the template"
      },
      "permissions": {
        "Type": "String",
        "Optional": true,
        "Description": "Permissions for the template vm group (in Unix format, owner-group-other, use-manage-admin)",
        "Computed": true
      },
      "role": {
        "Type": "List",
        "Required": true,
        "Description": "Roles of the VM Group",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "host_affined": {
              "Type": "List",
              "Optional": true,
              "Description": "Host(s) where the VM should run",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            },
            "host_anti_affined": {
              "Type": "List",
              "Optional": true,
              "Description": "Host(s) where the VM should not run",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            },
            "id": {
              "Type": "Int",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Required": true
            },
            "policy": {
              "Type": "String",
              "Optional": true,
              "Computed": true
            }
          }
        }
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Add custom tags to the resource",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags_all": {
        "Type": "Map",
        "Description": "Result of the applied default_tags and resource tags",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "Int",
        "Description": "ID of the user that will own the template vm group",
        "Computed": true
      },
      "uname": {
        "Type": "String",
        "Description": "Name of the user that will own the template vm group",
        "Computed": true
      }
    },
    "opennebula_virtual_network": {
      "__timeouts__": [
        "create"
      ],
      "ar": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of Address Ranges to be part of the Virtual Network",
        "MinItems": 1,
        "ConflictsWith": [
          "reservation_vnet",
          "reservation_size",
          "reservation_ar_id",
          "reservation_first_ip"
        ],
        "Deprecated": "use virtual network address range resource instead",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ar_type": {
              "Type": "String",
              "Optional": true,
              "Description": "Type of the Address Range: IP4, IP6. Default is 'IP4'",
              "Default": {
                "Type": "string",
                "Value": "IP4"
              }
            },
            "computed_global_prefix": {
              "Type": "String",
              "Description": "Global prefix for IP6 or IP4_6",
              "Computed": true
            },
            "computed_ip6": {
              "Type": "String",
              "Description": "Start IPv6 of the range to be allocated (Required if IP6_STATIC or IP4_6_STATIC)",
              "Computed": true
            },
            "computed_mac": {
              "Type": "String",
              "Description": "Start MAC of the range to be allocated",
              "Computed": true
            },
            "computed_ula_prefix": {
              "Type": "String",
              "Description": "ULA prefix for IP6 or IP4_6",
              "Computed": true
            },
            "global_prefix": {
              "Type": "String",
              "Optional": true,
              "Description": "Global prefix for IP6 or IP4_6"
            },
            "id": {
              "Type": "String",
              "Computed": true
            },
            "ip4": {
              "Type": "String",
              "Optional": true,
              "Description": "Start IPv4 of the range to be allocated (Required if IP4 or IP4_6)."
            },
            "ip6": {
              "Type": "String",
              "Optional": true,
              "Description": "Start IPv6 of the range to be allocated (Required if IP6_STATIC or IP4_6_STATIC)"
            },
            "mac": {
              "Type": "String",
              "Optional": true,
              "Description": "Start MAC of the range to be allocated"
            },
            "prefix_length": {
              "Type": "String",
              "Optional": true,
              "Description": "Prefix lenght Only needed for IP6_STATIC or IP4_6_STATIC"
            },
            "size": {
              "Type": "Int",
              "Required": true,
              "Description": "Size (in number) of the ip range"
            },
            "ula_prefix": {
              "Type": "String",
              "Optional": true,
              "Description": "ULA prefix for IP6 or IP4_6"
            }
          }
        }
      },
      "automatic_vlan_id": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If set, let OpenNebula to attribute VLAN ID",
        "Computed": true,
        "ConflictsWith": [
          "reservation_vnet",
          "reservation_size",
          "reservation_ar_id",
          "reservation_first_ip",
          "vlan_id"
        ]
      },
      "bridge": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the bridge interface to which the vnet should be associated",
        "Computed": true,
        "ConflictsWith": [
          "reservation_vnet",
          "reservation_size",
          "reservation_ar_id",
          "reservation_first_ip"
        ]
      },
      "clusters": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of cluster IDs hosting the virtual Network, if not set it uses the default cluster",
        "Computed": true,
        "ConflictsWith": [
          "reservation_vnet",
          "reservation_size",
          "reservation_ar_id",
          "reservation_first_ip"
        ],
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "default_tags": {
        "Type": "Map",
        "Description": "Default tags defined in the provider configuration",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description of the vnet, in OpenNebula's XML or String format",
        "Computed": true
      },
      "dns": {
        "Type": "String",
        "Optional": true,
        "Description": "DNS IP if necessary",
        "Computed": true,
        "ConflictsWith": [
          "reservation_vnet",
          "reservation_size",
          "reservation_ar_id",
          "reservation_first_ip"
        ]
      },
      "gateway": {
        "Type": "String",
        "Optional": true,
        "Description": "Gateway IP if necessary",
        "Computed": true,
        "ConflictsWith": [
          "reservation_vnet",
          "reservation_size",
          "reservation_ar_id",
          "reservation_first_ip"
        ]
      },
      "gid": {
        "Type": "Int",
        "Description": "ID of the group that will own the vnet",
        "Computed": true
      },
      "gname": {
        "Type": "String",
        "Description": "Name of the group that will own the vnet",
        "Computed": true
      },
      "group": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the Group that onws the Virtual Network, If empty, it uses caller group"
      },
      "guest_mtu": {
        "Type": "Int",
        "Optional": true,
        "Description": "MTU of the Guest interface. Must be lower or equal to 'mtu' (defaut: 1500)",
        "ConflictsWith": [
          "reservation_vnet",
          "reservation_size",
          "reservation_ar_id",
          "reservation_first_ip"
        ],
        "Default": {
          "Type": "int",
          "Value": "1500"
        }
      },
      "hold_ips": {
        "Type": "List",
        "Optional": true,
        "Description": "List of IPs to be held the VNET",
        "ConflictsWith": [
          "reservation_vnet",
          "reservation_size",
          "reservation_ar_id",
          "reservation_first_ip"
        ],
        "Deprecated": "use 'hold ips' in the related virtual network address range resource instead",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "lock": {
        "Type": "String",
        "Optional": true,
        "Description": "Lock level of the new resource: USE, MANAGE, ADMIN, ALL, UNLOCK"
      },
      "mtu": {
        "Type": "Int",
        "Optional": true,
        "Description": "MTU of the vnet (defaut: 1500)",
        "ConflictsWith": [
          "reservation_vnet",
          "reservation_size",
          "reservation_ar_id",
          "reservation_first_ip"
        ],
        "Default": {
          "Type": "int",
          "Value": "1500"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the vnet"
      },
      "network_address": {
        "Type": "String",
        "Optional": true,
        "Description": "Network Address",
        "Computed": true,
        "ConflictsWith": [
          "reservation_vnet",
          "reservation_size"
        ]
      },
      "network_mask": {
        "Type": "String",
        "Optional": true,
        "Description": "Network Mask",
        "Computed": true,
        "ConflictsWith": [
          "reservation_vnet",
          "reservation_size",
          "reservation_ar_id",
          "reservation_first_ip"
        ]
      },
      "permissions": {
        "Type": "String",
        "Optional": true,
        "Description": "Permissions for the vnet (in Unix format, owner-group-other, use-manage-admin)",
        "Computed": true
      },
      "physical_device": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the physical device to which the vnet should be associated",
        "Computed": true,
        "ConflictsWith": [
          "reservation_vnet",
          "reservation_size",
          "reservation_ar_id",
          "reservation_first_ip"
        ]
      },
      "reservation_ar_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "Address Range ID to be used for the reservation",
        "ConflictsWith": [
          "bridge",
          "physical_device",
          "ar",
          "hold_ips",
          "type",
          "vlan_id",
          "automatic_vlan_id",
          "mtu",
          "clusters",
          "dns",
          "gateway",
          "network_mask"
        ],
        "Default": {
          "Type": "int",
          "Value": "-1"
        }
      },
      "reservation_first_ip": {
        "Type": "String",
        "Optional": true,
        "Description": "First IP of the reservation",
        "ConflictsWith": [
          "bridge",
          "physical_device",
          "ar",
          "hold_ips",
          "type",
          "vlan_id",
          "automatic_vlan_id",
          "mtu",
          "clusters",
          "dns",
          "gateway",
          "network_mask"
        ]
      },
      "reservation_size": {
        "Type": "Int",
        "Optional": true,
        "Description": "Reserve this many IPs from reservation_vnet",
        "ConflictsWith": [
          "bridge",
          "physical_device",
          "ar",
          "hold_ips",
          "type",
          "vlan_id",
          "automatic_vlan_id",
          "mtu",
          "clusters",
          "dns",
          "gateway",
          "network_mask",
          "network_address",
          "search_domain"
        ]
      },
      "reservation_vnet": {
        "Type": "Int",
        "Optional": true,
        "Description": "Create a reservation from this VNET ID",
        "ConflictsWith": [
          "bridge",
          "physical_device",
          "ar",
          "hold_ips",
          "type",
          "vlan_id",
          "automatic_vlan_id",
          "mtu",
          "clusters",
          "dns",
          "gateway",
          "network_mask",
          "network_address",
          "search_domain"
        ],
        "Default": {
          "Type": "int",
          "Value": "-1"
        }
      },
      "search_domain": {
        "Type": "String",
        "Optional": true,
        "Description": "Search Domain",
        "Computed": true,
        "ConflictsWith": [
          "reservation_vnet",
          "reservation_size"
        ]
      },
      "security_groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of Security Group IDs to be applied to the VNET",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Add custom tags to the resource",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags_all": {
        "Type": "Map",
        "Description": "Result of the applied default_tags and resource tags",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "Type of the Virtual Network: dummy, bridge, fw, ebtables, 802.1Q, vxlan, ovswitch. Default is 'bridge'",
        "ConflictsWith": [
          "reservation_vnet",
          "reservation_size",
          "reservation_ar_id",
          "reservation_first_ip"
        ],
        "Default": {
          "Type": "string",
          "Value": "bridge"
        }
      },
      "uid": {
        "Type": "Int",
        "Description": "ID of the user that will own the vnet",
        "Computed": true
      },
      "uname": {
        "Type": "String",
        "Description": "Name of the user that will own the vnet",
        "Computed": true
      },
      "vlan_id": {
        "Type": "String",
        "Optional": true,
        "Description": "VLAN ID. Only if 'Type' is : 802.1Q, vxlan or ovswich and if 'automatic_vlan_id' is not set",
        "Computed": true,
        "ConflictsWith": [
          "reservation_vnet",
          "reservation_size",
          "reservation_ar_id",
          "reservation_first_ip",
          "automatic_vlan_id"
        ]
      }
    },
    "opennebula_virtual_network_address_range": {
      "__timeouts__": [
        "create",
        "delete"
      ],
      "ar_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Type of the Address Range: IP4, IP6. Default is 'IP4'",
        "Default": {
          "Type": "string",
          "Value": "IP4"
        }
      },
      "global_prefix": {
        "Type": "String",
        "Optional": true,
        "Description": "Global prefix for IP6 or IP4_6"
      },
      "hold_ips": {
        "Type": "List",
        "Optional": true,
        "Description": "List of IPs to be held the VNET",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ip4": {
        "Type": "String",
        "Optional": true,
        "Description": "Start IPv4 of the range to be allocated (Required if IP4 or IP4_6)."
      },
      "ip6": {
        "Type": "String",
        "Optional": true,
        "Description": "Start IPv6 of the range to be allocated (Required if IP6_STATIC or IP4_6_STATIC)"
      },
      "mac": {
        "Type": "String",
        "Optional": true,
        "Description": "Start MAC of the range to be allocated",
        "Computed": true
      },
      "prefix_length": {
        "Type": "String",
        "Optional": true,
        "Description": "Prefix length Only needed for IP6_STATIC or IP4_6_STATIC"
      },
      "size": {
        "Type": "Int",
        "Required": true,
        "Description": "Count of addresses in the ip range"
      },
      "ula_prefix": {
        "Type": "String",
        "Optional": true,
        "Description": "ULA prefix for IP6 or IP4_6"
      },
      "virtual_network_id": {
        "Type": "Int",
        "Required": true
      }
    },
    "opennebula_virtual_router": {
      "default_tags": {
        "Type": "Map",
        "Description": "Default tags defined in the provider configuration",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "A description of the entity"
      },
      "gid": {
        "Type": "Int",
        "Description": "ID of the group that will own the virtual router",
        "Computed": true
      },
      "gname": {
        "Type": "String",
        "Description": "Name of the group that will own the virtual router",
        "Computed": true
      },
      "group": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the Group that onws the virtual router, If empty, it uses caller group"
      },
      "instance_template_id": {
        "Type": "Int",
        "Required": true,
        "Description": "ID of the template of the virtual router instances."
      },
      "lock": {
        "Type": "String",
        "Optional": true,
        "Description": "Lock level of the new resource: USE, MANAGE, ADMIN, ALL, UNLOCK"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the virtual router"
      },
      "permissions": {
        "Type": "String",
        "Optional": true,
        "Description": "Permissions for the virtual router (in Unix format, owner-group-other, use-manage-admin)",
        "Computed": true
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Add custom tags to the resource",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags_all": {
        "Type": "Map",
        "Description": "Result of the applied default_tags and resource tags",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "Int",
        "Description": "ID of the user that will own the virtual router",
        "Computed": true
      },
      "uname": {
        "Type": "String",
        "Description": "Name of the user that will own the virtual router",
        "Computed": true
      }
    },
    "opennebula_virtual_router_instance": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "context": {
        "Type": "Map",
        "Optional": true,
        "Description": "Context variables"
      },
      "cpu": {
        "Type": "Float",
        "Optional": true,
        "Description": "Amount of CPU quota assigned to the virtual machine",
        "Computed": true
      },
      "cpumodel": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of CPU Model type for the Virtual Machine",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "model": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "default_tags": {
        "Type": "Map",
        "Description": "Default tags defined in the provider configuration",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "A description of the entity"
      },
      "disk": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of disks assigned to the Virtual Machine",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cache": {
              "Type": "String",
              "Optional": true
            },
            "computed_cache": {
              "Type": "String",
              "Computed": true
            },
            "computed_dev_prefix": {
              "Type": "String",
              "Computed": true
            },
            "computed_discard": {
              "Type": "String",
              "Computed": true
            },
            "computed_driver": {
              "Type": "String",
              "Computed": true
            },
            "computed_io": {
              "Type": "String",
              "Computed": true
            },
            "computed_size": {
              "Type": "Int",
              "Computed": true
            },
            "computed_target": {
              "Type": "String",
              "Computed": true
            },
            "computed_volatile_format": {
              "Type": "String",
              "Computed": true
            },
            "dev_prefix": {
              "Type": "String",
              "Optional": true
            },
            "discard": {
              "Type": "String",
              "Optional": true
            },
            "disk_id": {
              "Type": "Int",
              "Computed": true
            },
            "driver": {
              "Type": "String",
              "Optional": true
            },
            "image_id": {
              "Type": "Int",
              "Optional": true,
              "Description": "Image Id  of the image to attach to the VM. Defaults to -1: no image attached.",
              "Default": {
                "Type": "int",
                "Value": "-1"
              }
            },
            "io": {
              "Type": "String",
              "Optional": true
            },
            "size": {
              "Type": "Int",
              "Optional": true
            },
            "target": {
              "Type": "String",
              "Optional": true
            },
            "volatile_format": {
              "Type": "String",
              "Optional": true,
              "Description": "Format of the volatile disk: raw or qcow2."
            },
            "volatile_type": {
              "Type": "String",
              "Optional": true,
              "Description": "Type of the volatile disk: swap or fs."
            }
          }
        }
      },
      "gid": {
        "Type": "Int",
        "Description": "ID of the group that will own the resource",
        "Computed": true
      },
      "gname": {
        "Type": "String",
        "Description": "Name of the group that will own the resource",
        "Computed": true
      },
      "graphics": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of graphics adapter assigned to the Virtual Machine",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "keymap": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "en-us"
              }
            },
            "listen": {
              "Type": "String",
              "Required": true
            },
            "port": {
              "Type": "String",
              "Optional": true,
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "group": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the Group that onws the resource, If empty, it uses caller group"
      },
      "hard_shutdown": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Immediately poweroff/terminate/reboot/undeploy the VM. (default: false)",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "lcmstate": {
        "Type": "Int",
        "Description": "Current LCM state of the VM",
        "Computed": true
      },
      "lock": {
        "Type": "String",
        "Optional": true,
        "Description": "Lock level of the new resource: USE, MANAGE, ADMIN, ALL, UNLOCK"
      },
      "memory": {
        "Type": "Int",
        "Optional": true,
        "Description": "Amount of memory (RAM) in MB assigned to the virtual machine",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the VM. If empty, defaults to 'templatename-\u003cvmid\u003e'",
        "Computed": true
      },
      "on_disk_change": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "swap"
        }
      },
      "os": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of OS boot and type for the Virtual Machine",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "arch": {
              "Type": "String",
              "Required": true
            },
            "boot": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "pending": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Pending state of the VM during its creation, by default it is set to false",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "permissions": {
        "Type": "String",
        "Optional": true,
        "Description": "Permissions for the resource (in Unix format, owner-group-other, use-manage-admin)",
        "Computed": true
      },
      "sched_ds_requirements": {
        "Type": "String",
        "Optional": true,
        "Description": "Storage placement requirements to deploy the resource following specific rule"
      },
      "sched_requirements": {
        "Type": "String",
        "Optional": true,
        "Description": "Scheduling requirements to deploy the resource following specific rule"
      },
      "state": {
        "Type": "Int",
        "Description": "Current state of the VM",
        "Computed": true
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Add custom tags to the resource",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags_all": {
        "Type": "Map",
        "Description": "Result of the applied default_tags and resource tags",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "template_disk": {
        "Type": "List",
        "Description": "Disks assigned to the Virtual Machine via a template",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "computed_cache": {
              "Type": "String",
              "Computed": true
            },
            "computed_dev_prefix": {
              "Type": "String",
              "Computed": true
            },
            "computed_discard": {
              "Type": "String",
              "Computed": true
            },
            "computed_driver": {
              "Type": "String",
              "Computed": true
            },
            "computed_io": {
              "Type": "String",
              "Computed": true
            },
            "computed_size": {
              "Type": "Int",
              "Computed": true
            },
            "computed_target": {
              "Type": "String",
              "Computed": true
            },
            "computed_volatile_format": {
              "Type": "String",
              "Computed": true
            },
            "disk_id": {
              "Type": "Int",
              "Computed": true
            },
            "image_id": {
              "Type": "Int",
              "Computed": true
            }
          }
        }
      },
      "template_tags": {
        "Type": "Map",
        "Description": "When template_id was set this keeps the template tags.",
        "Computed": true
      },
      "timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "Timeout (in minutes) within resource should be available. Default: 3 minutes",
        "Deprecated": "Native terraform timeout facilities should be used instead",
        "Default": {
          "Type": "int",
          "Value": "20"
        }
      },
      "uid": {
        "Type": "Int",
        "Description": "ID of the user that will own the resource",
        "Computed": true
      },
      "uname": {
        "Type": "String",
        "Description": "Name of the user that will own the resource",
        "Computed": true
      },
      "vcpu": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of virtual CPUs assigned to the virtual machine",
        "Computed": true
      },
      "virtual_router_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Identifier of the parent virtual router ressource"
      },
      "vmgroup": {
        "Type": "List",
        "Optional": true,
        "Description": "Virtual Machine Group to associate with during VM creation only. If it changes, a New VM is created",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "role": {
              "Type": "String",
              "Required": true
            },
            "vmgroup_id": {
              "Type": "Int",
              "Required": true
            }
          }
        }
      }
    },
    "opennebula_virtual_router_instance_template": {
      "context": {
        "Type": "Map",
        "Optional": true,
        "Description": "Context variables"
      },
      "cpu": {
        "Type": "Float",
        "Optional": true,
        "Description": "Amount of CPU quota assigned to the virtual machine",
        "Computed": true
      },
      "cpumodel": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of CPU Model type for the Virtual Machine",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "model": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "default_tags": {
        "Type": "Map",
        "Description": "Default tags defined in the provider configuration",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "A description of the entity"
      },
      "disk": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of disks assigned to the Virtual Machine",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cache": {
              "Type": "String",
              "Optional": true
            },
            "dev_prefix": {
              "Type": "String",
              "Optional": true
            },
            "discard": {
              "Type": "String",
              "Optional": true
            },
            "driver": {
              "Type": "String",
              "Optional": true
            },
            "image_id": {
              "Type": "Int",
              "Optional": true,
              "Description": "Image Id  of the image to attach to the VM. Defaults to -1: no image attached.",
              "Default": {
                "Type": "int",
                "Value": "-1"
              }
            },
            "io": {
              "Type": "String",
              "Optional": true
            },
            "size": {
              "Type": "Int",
              "Optional": true
            },
            "target": {
              "Type": "String",
              "Optional": true
            },
            "volatile_format": {
              "Type": "String",
              "Optional": true,
              "Description": "Format of the volatile disk: raw or qcow2."
            },
            "volatile_type": {
              "Type": "String",
              "Optional": true,
              "Description": "Type of the volatile disk: swap or fs."
            }
          }
        }
      },
      "features": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of Features",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "acpi": {
              "Type": "String",
              "Optional": true,
              "Description": "Useful for power management, for example, with KVM guests it is required for graceful shutdown to work."
            },
            "apic": {
              "Type": "String",
              "Optional": true,
              "Description": "Enables the advanced programmable IRQ management. Useful for SMP machines."
            },
            "guest_agent": {
              "Type": "String",
              "Optional": true,
              "Description": "Enables the QEMU Guest Agent communication. This only creates the socket inside the VM, the Guest Agent itself must be installed and started in the VM."
            },
            "hyperv": {
              "Type": "String",
              "Optional": true,
              "Description": "Add hyperv extensions to the VM. The options can be configured in the driver configuration, HYPERV_OPTIONS."
            },
            "iothreads": {
              "Type": "String",
              "Optional": true,
              "Description": "Number of iothreads for virtio disks. By default threads will be assign to disk by round robin algorithm. Disk thread id can be forced by disk IOTHREAD attribute."
            },
            "localtime": {
              "Type": "String",
              "Optional": true,
              "Description": "The guest clock will be synchronized to the host’s configured timezone when booted. Useful for Windows VMs."
            },
            "pae": {
              "Type": "String",
              "Optional": true,
              "Description": "Physical address extension mode allows 32-bit guests to address more than 4 GB of memory."
            },
            "virtio_scsi_queues": {
              "Type": "String",
              "Optional": true,
              "Description": "Numer of vCPU queues for the virtio-scsi controller."
            }
          }
        }
      },
      "gid": {
        "Type": "Int",
        "Description": "ID of the group that will own the resource",
        "Computed": true
      },
      "gname": {
        "Type": "String",
        "Description": "Name of the group that will own the resource",
        "Computed": true
      },
      "graphics": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of graphics adapter assigned to the Virtual Machine",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "keymap": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "en-us"
              }
            },
            "listen": {
              "Type": "String",
              "Required": true
            },
            "port": {
              "Type": "String",
              "Optional": true,
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "group": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the Group that onws the resource, If empty, it uses caller group"
      },
      "lock": {
        "Type": "String",
        "Optional": true,
        "Description": "Lock level of the new resource: USE, MANAGE, ADMIN, ALL, UNLOCK"
      },
      "memory": {
        "Type": "Int",
        "Optional": true,
        "Description": "Amount of memory (RAM) in MB assigned to the virtual machine",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the template"
      },
      "os": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of OS boot and type for the Virtual Machine",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "arch": {
              "Type": "String",
              "Required": true
            },
            "boot": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "permissions": {
        "Type": "String",
        "Optional": true,
        "Description": "Permissions for the resource (in Unix format, owner-group-other, use-manage-admin)",
        "Computed": true
      },
      "raw": {
        "Type": "List",
        "Optional": true,
        "Description": "Low-level hypervisor tuning",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "data": {
              "Type": "String",
              "Required": true,
              "Description": "Low-level data to pass to the hypervisor"
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the hypervisor: kvm, lxd, vmware"
            }
          }
        }
      },
      "reg_time": {
        "Type": "Int",
        "Description": "Registration time",
        "Computed": true
      },
      "sched_ds_requirements": {
        "Type": "String",
        "Optional": true,
        "Description": "Storage placement requirements to deploy the resource following specific rule"
      },
      "sched_requirements": {
        "Type": "String",
        "Optional": true,
        "Description": "Scheduling requirements to deploy the resource following specific rule"
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Add custom tags to the resource",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags_all": {
        "Type": "Map",
        "Description": "Result of the applied default_tags and resource tags",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "Int",
        "Description": "ID of the user that will own the resource",
        "Computed": true
      },
      "uname": {
        "Type": "String",
        "Description": "Name of the user that will own the resource",
        "Computed": true
      },
      "user_inputs": {
        "Type": "Map",
        "Optional": true,
        "Description": "Provides the template creator with the possibility to dynamically ask the user instantiating the template for dynamic values that must be defined."
      },
      "vcpu": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of virtual CPUs assigned to the virtual machine",
        "Computed": true
      },
      "vmgroup": {
        "Type": "List",
        "Optional": true,
        "Description": "Virtual Machine Group to associate with during VM creation only. If it changes, a New VM is created",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "role": {
              "Type": "String",
              "Required": true
            },
            "vmgroup_id": {
              "Type": "Int",
              "Required": true
            }
          }
        }
      }
    },
    "opennebula_virtual_router_nic": {
      "__timeouts__": [
        "create",
        "delete"
      ],
      "model": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "network": {
        "Type": "String",
        "Computed": true
      },
      "network_id": {
        "Type": "Int",
        "Required": true
      },
      "physical_device": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "security_groups": {
        "Type": "List",
        "Optional": true,
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "virtio_queues": {
        "Type": "String",
        "Optional": true,
        "Description": "Only if model is virtio",
        "Computed": true
      },
      "virtual_router_id": {
        "Type": "Int",
        "Required": true
      }
    }
  },
  "data-sources": {
    "opennebula_cluster": {
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the cluster"
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Add custom tags to the resource",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "opennebula_group": {
      "admins": {
        "Type": "List",
        "Description": "List of Admin user IDs part of the group",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the group"
      },
      "quotas": {
        "Type": "Set",
        "Optional": true,
        "Description": "Define user quota",
        "Deprecated": "use 'tags' for selection instead",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "datastore_quotas": {
              "Type": "List",
              "Optional": true,
              "Description": "Datastore quotas",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "id": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "Datastore ID"
                  },
                  "images": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum number of Images allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "size": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum size in MB allowed on the datastore (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  }
                }
              }
            },
            "image_quotas": {
              "Type": "List",
              "Optional": true,
              "Description": "Image quotas",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "id": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "Image ID"
                  },
                  "running_vms": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum number of Running VMs allowed for this image (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  }
                }
              }
            },
            "network_quotas": {
              "Type": "List",
              "Optional": true,
              "Description": "Network quotas",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "id": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "Network ID"
                  },
                  "leases": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum number of Leases allowed for this network (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  }
                }
              }
            },
            "vm_quotas": {
              "Type": "List",
              "Optional": true,
              "Description": "VM quotas",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "cpu": {
                    "Type": "Float",
                    "Optional": true,
                    "Description": "Maximum number of CPU allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "memory": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum Memory (MB) allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "running_cpu": {
                    "Type": "Float",
                    "Optional": true,
                    "Description": "Maximum number of 'running' CPUs allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "running_memory": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "'Running' Memory (MB) allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "running_vms": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum number of Running VMs allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "system_disk_size": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum System Disk size (MB) allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "vms": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum number of VMs allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Add custom tags to the resource",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "opennebula_image": {
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the image"
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Add custom tags to the resource",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "opennebula_security_group": {
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the Security Group"
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Add custom tags to the resource",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "opennebula_template": {
      "context": {
        "Type": "Map",
        "Optional": true,
        "Description": "Context variables",
        "Deprecated": "use 'tags' for selection instead"
      },
      "cpu": {
        "Type": "Float",
        "Optional": true,
        "Description": "Amount of CPU quota assigned to the virtual machine",
        "Computed": true
      },
      "disk": {
        "Type": "List",
        "Description": "Definition of disks assigned to the Virtual Machine",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cache": {
              "Type": "String",
              "Optional": true
            },
            "dev_prefix": {
              "Type": "String",
              "Optional": true
            },
            "discard": {
              "Type": "String",
              "Optional": true
            },
            "driver": {
              "Type": "String",
              "Optional": true
            },
            "image_id": {
              "Type": "Int",
              "Optional": true,
              "Description": "Image Id  of the image to attach to the VM. Defaults to -1: no image attached.",
              "Default": {
                "Type": "int",
                "Value": "-1"
              }
            },
            "io": {
              "Type": "String",
              "Optional": true
            },
            "size": {
              "Type": "Int",
              "Optional": true
            },
            "target": {
              "Type": "String",
              "Optional": true
            },
            "volatile_format": {
              "Type": "String",
              "Optional": true,
              "Description": "Format of the volatile disk: raw or qcow2."
            },
            "volatile_type": {
              "Type": "String",
              "Optional": true,
              "Description": "Type of the volatile disk: swap or fs."
            }
          }
        }
      },
      "graphics": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of graphics adapter assigned to the Virtual Machine",
        "MaxItems": 1,
        "Deprecated": "use 'tags' for selection instead",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "keymap": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "en-us"
              }
            },
            "listen": {
              "Type": "String",
              "Required": true
            },
            "port": {
              "Type": "String",
              "Optional": true,
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "has_cpu": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicate if template has CPU defined"
      },
      "has_memory": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicate if template has memory defined"
      },
      "has_vcpu": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicate if template has VCPU defined"
      },
      "memory": {
        "Type": "Int",
        "Optional": true,
        "Description": "Amount of memory (RAM) in MB assigned to the virtual machine",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the Template"
      },
      "nic": {
        "Type": "List",
        "Description": "Definition of network adapter(s) assigned to the Virtual Machine",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip": {
              "Type": "String",
              "Optional": true
            },
            "mac": {
              "Type": "String",
              "Optional": true
            },
            "model": {
              "Type": "String",
              "Optional": true
            },
            "network": {
              "Type": "String",
              "Computed": true
            },
            "network_id": {
              "Type": "Int",
              "Required": true
            },
            "physical_device": {
              "Type": "String",
              "Optional": true
            },
            "security_groups": {
              "Type": "List",
              "Optional": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            },
            "virtio_queues": {
              "Type": "String",
              "Optional": true,
              "Description": "Only if model is virtio"
            }
          }
        }
      },
      "os": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of OS boot and type for the Virtual Machine",
        "MaxItems": 1,
        "Deprecated": "use 'tags' for selection instead",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "arch": {
              "Type": "String",
              "Required": true
            },
            "boot": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Add custom tags to the resource",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "vcpu": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of virtual CPUs assigned to the virtual machine",
        "Computed": true
      },
      "vmgroup": {
        "Type": "List",
        "Description": "Virtual Machine Group to associate with during VM creation only.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "role": {
              "Type": "String",
              "Required": true
            },
            "vmgroup_id": {
              "Type": "Int",
              "Required": true
            }
          }
        }
      }
    },
    "opennebula_user": {
      "auth_driver": {
        "Type": "String",
        "Optional": true,
        "Description": "Authentication driver. Select between: core, public, ssh, x509, ldap, server_cipher, server_x509 and custom. Defaults to 'core'.",
        "Deprecated": "use 'tags' for selection instead",
        "Default": {
          "Type": "string",
          "Value": "core"
        }
      },
      "groups": {
        "Type": "List",
        "Optional": true,
        "Description": "List of group IDs to add to the user",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the User"
      },
      "primary_group": {
        "Type": "Int",
        "Optional": true,
        "Description": "Primary (Default) Group ID of the user. Defaults to 0"
      },
      "quotas": {
        "Type": "Set",
        "Optional": true,
        "Description": "Define user quota",
        "Deprecated": "use 'tags' for selection instead",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "datastore_quotas": {
              "Type": "List",
              "Optional": true,
              "Description": "Datastore quotas",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "id": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "Datastore ID"
                  },
                  "images": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum number of Images allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "size": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum size in MB allowed on the datastore (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  }
                }
              }
            },
            "image_quotas": {
              "Type": "List",
              "Optional": true,
              "Description": "Image quotas",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "id": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "Image ID"
                  },
                  "running_vms": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum number of Running VMs allowed for this image (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  }
                }
              }
            },
            "network_quotas": {
              "Type": "List",
              "Optional": true,
              "Description": "Network quotas",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "id": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "Network ID"
                  },
                  "leases": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum number of Leases allowed for this network (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  }
                }
              }
            },
            "vm_quotas": {
              "Type": "List",
              "Optional": true,
              "Description": "VM quotas",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "cpu": {
                    "Type": "Float",
                    "Optional": true,
                    "Description": "Maximum number of CPU allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "memory": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum Memory (MB) allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "running_cpu": {
                    "Type": "Float",
                    "Optional": true,
                    "Description": "Maximum number of 'running' CPUs allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "running_memory": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "'Running' Memory (MB) allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "running_vms": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum number of Running VMs allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "system_disk_size": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum System Disk size (MB) allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  },
                  "vms": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum number of VMs allowed (default: default quota)",
                    "Default": {
                      "Type": "int",
                      "Value": "-1"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Add custom tags to the resource",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "opennebula_virtual_data_center": {
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the VDC"
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Add custom tags to the resource",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "opennebula_virtual_machine_group": {
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the Virtual Machine Group"
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Add custom tags to the resource",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "opennebula_virtual_network": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description of the vnet, in OpenNebula's XML or String format",
        "Deprecated": "use 'tags' for selection instead"
      },
      "mtu": {
        "Type": "Int",
        "Description": "MTU of the vnet (defaut: 1500)",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the Virtual Network"
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Add custom tags to the resource",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    }
  }
}